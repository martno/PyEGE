/* Generated by Cython 0.11.2 on Mon Apr 05 21:39:36 2010 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#include "structmember.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#if PY_VERSION_HEX < 0x02040000
  #define METH_COEXIST 0
  #define PyDict_CheckExact(op) (Py_TYPE(op) == &PyDict_Type)
#endif
#if PY_VERSION_HEX < 0x02050000
  typedef int Py_ssize_t;
  #define PY_SSIZE_T_MAX INT_MAX
  #define PY_SSIZE_T_MIN INT_MIN
  #define PY_FORMAT_SIZE_T ""
  #define PyInt_FromSsize_t(z) PyInt_FromLong(z)
  #define PyInt_AsSsize_t(o)   PyInt_AsLong(o)
  #define PyNumber_Index(o)    PyNumber_Int(o)
  #define PyIndex_Check(o)     PyNumber_Check(o)
#endif
#if PY_VERSION_HEX < 0x02060000
  #define Py_REFCNT(ob) (((PyObject*)(ob))->ob_refcnt)
  #define Py_TYPE(ob)   (((PyObject*)(ob))->ob_type)
  #define Py_SIZE(ob)   (((PyVarObject*)(ob))->ob_size)
  #define PyVarObject_HEAD_INIT(type, size) \
          PyObject_HEAD_INIT(type) size,
  #define PyType_Modified(t)

  typedef struct {
       void *buf;
       PyObject *obj;
       Py_ssize_t len;
       Py_ssize_t itemsize;
       int readonly;
       int ndim;
       char *format;
       Py_ssize_t *shape;
       Py_ssize_t *strides;
       Py_ssize_t *suboffsets;
       void *internal;
  } Py_buffer;

  #define PyBUF_SIMPLE 0
  #define PyBUF_WRITABLE 0x0001
  #define PyBUF_FORMAT 0x0004
  #define PyBUF_ND 0x0008
  #define PyBUF_STRIDES (0x0010 | PyBUF_ND)
  #define PyBUF_C_CONTIGUOUS (0x0020 | PyBUF_STRIDES)
  #define PyBUF_F_CONTIGUOUS (0x0040 | PyBUF_STRIDES)
  #define PyBUF_ANY_CONTIGUOUS (0x0080 | PyBUF_STRIDES)
  #define PyBUF_INDIRECT (0x0100 | PyBUF_STRIDES)

#endif
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#endif
#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#if (PY_VERSION_HEX < 0x02060000) || (PY_MAJOR_VERSION >= 3)
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyString_Type                PyBytes_Type
  #define PyString_CheckExact          PyBytes_CheckExact
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define PyBytes_Type                 PyString_Type
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyMethod_New(func, self, klass) PyInstanceMethod_New(func)
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#else
  #define _USE_MATH_DEFINES
#endif
#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),((char *)(n)))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),((char *)(n)),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),((char *)(n)))
#else
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),(n))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),(n),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),(n))
#endif
#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_NAMESTR(n) ((char *)(n))
  #define __Pyx_DOCSTR(n)  ((char *)(n))
#else
  #define __Pyx_NAMESTR(n) (n)
  #define __Pyx_DOCSTR(n)  (n)
#endif
#ifdef __cplusplus
#define __PYX_EXTERN_C extern "C"
#else
#define __PYX_EXTERN_C extern
#endif
#include <math.h>
#define __PYX_HAVE_API__ege
#include "stdlib.h"
#include "numpy/arrayobject.h"
#include "WindowHandler.h"
#include "ConnectionHandler.h"
#include "SoundHandler.h"
#include "Image.h"
#include "Timer.h"
#include "Sound.h"
#define __PYX_USE_C99_COMPLEX defined(_Complex_I)


#ifdef __GNUC__
#define INLINE __inline__
#elif _WIN32
#define INLINE __inline
#else
#define INLINE 
#endif

typedef struct {PyObject **p; char *s; long n; char is_unicode; char intern; char is_identifier;} __Pyx_StringTabEntry; /*proto*/



static int __pyx_skip_dispatch = 0;


/* Type Conversion Predeclarations */

#if PY_MAJOR_VERSION < 3
#define __Pyx_PyBytes_FromString          PyString_FromString
#define __Pyx_PyBytes_FromStringAndSize   PyString_FromStringAndSize
#define __Pyx_PyBytes_AsString            PyString_AsString
#else
#define __Pyx_PyBytes_FromString          PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize   PyBytes_FromStringAndSize
#define __Pyx_PyBytes_AsString            PyBytes_AsString
#endif

#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);

#if !defined(T_PYSSIZET)
#if PY_VERSION_HEX < 0x02050000
#define T_PYSSIZET T_INT
#elif !defined(T_LONGLONG)
#define T_PYSSIZET \
        ((sizeof(Py_ssize_t) == sizeof(int))  ? T_INT  : \
        ((sizeof(Py_ssize_t) == sizeof(long)) ? T_LONG : -1))
#else
#define T_PYSSIZET \
        ((sizeof(Py_ssize_t) == sizeof(int))          ? T_INT      : \
        ((sizeof(Py_ssize_t) == sizeof(long))         ? T_LONG     : \
        ((sizeof(Py_ssize_t) == sizeof(PY_LONG_LONG)) ? T_LONGLONG : -1)))
#endif
#endif

#if !defined(T_SIZET)
#if !defined(T_ULONGLONG)
#define T_SIZET \
        ((sizeof(size_t) == sizeof(unsigned int))  ? T_UINT  : \
        ((sizeof(size_t) == sizeof(unsigned long)) ? T_ULONG : -1))
#else
#define T_SIZET \
        ((sizeof(size_t) == sizeof(unsigned int))          ? T_UINT      : \
        ((sizeof(size_t) == sizeof(unsigned long))         ? T_ULONG     : \
        ((sizeof(size_t) == sizeof(unsigned PY_LONG_LONG)) ? T_ULONGLONG : -1)))
#endif
#endif

static INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static INLINE size_t __Pyx_PyInt_AsSize_t(PyObject*);

#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))


#ifdef __GNUC__
/* Test for GCC > 2.95 */
#if __GNUC__ > 2 ||               (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)) 
#define likely(x)   __builtin_expect(!!(x), 1)
#define unlikely(x) __builtin_expect(!!(x), 0)
#else /* __GNUC__ > 2 ... */
#define likely(x)   (x)
#define unlikely(x) (x)
#endif /* __GNUC__ > 2 ... */
#else /* __GNUC__ */
#define likely(x)   (x)
#define unlikely(x) (x)
#endif /* __GNUC__ */
    
static PyObject *__pyx_m;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;
static const char **__pyx_f;


#ifdef CYTHON_REFNANNY
typedef struct {
  void (*INCREF)(void*, PyObject*, int);
  void (*DECREF)(void*, PyObject*, int);
  void (*GOTREF)(void*, PyObject*, int);
  void (*GIVEREF)(void*, PyObject*, int);
  void* (*NewContext)(const char*, int, const char*);
  void (*FinishContext)(void**);
} __Pyx_RefnannyAPIStruct;
static __Pyx_RefnannyAPIStruct *__Pyx_Refnanny = NULL;
#define __Pyx_ImportRefcountAPI(name)   (__Pyx_RefnannyAPIStruct *) PyCObject_Import((char *)name, (char *)"RefnannyAPI")
#define __Pyx_INCREF(r) __Pyx_Refnanny->INCREF(__pyx_refchk, (PyObject *)(r), __LINE__)
#define __Pyx_DECREF(r) __Pyx_Refnanny->DECREF(__pyx_refchk, (PyObject *)(r), __LINE__)
#define __Pyx_GOTREF(r) __Pyx_Refnanny->GOTREF(__pyx_refchk, (PyObject *)(r), __LINE__)
#define __Pyx_GIVEREF(r) __Pyx_Refnanny->GIVEREF(__pyx_refchk, (PyObject *)(r), __LINE__)
#define __Pyx_XDECREF(r) if((r) == NULL) ; else __Pyx_DECREF(r)
#define __Pyx_SetupRefcountContext(name)   void* __pyx_refchk = __Pyx_Refnanny->NewContext((name), __LINE__, __FILE__)
#define __Pyx_FinishRefcountContext()   __Pyx_Refnanny->FinishContext(&__pyx_refchk)
#else
#define __Pyx_INCREF(r) Py_INCREF(r)
#define __Pyx_DECREF(r) Py_DECREF(r)
#define __Pyx_GOTREF(r)
#define __Pyx_GIVEREF(r)
#define __Pyx_XDECREF(r) Py_XDECREF(r)
#define __Pyx_SetupRefcountContext(name)
#define __Pyx_FinishRefcountContext()
#endif /* CYTHON_REFNANNY */
#define __Pyx_XGIVEREF(r) if((r) == NULL) ; else __Pyx_GIVEREF(r)
#define __Pyx_XGOTREF(r) if((r) == NULL) ; else __Pyx_GOTREF(r)

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name, PyObject* kw_name); /*proto*/

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found); /*proto*/

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],     PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,     const char* function_name); /*proto*/

static int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type); /*proto*/


static INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}


#define __Pyx_GetItemInt_List(o, i, size, to_py_func) ((size <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_List_Fast(o, i, size <= sizeof(long)) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))

static INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i, int fits_long) {
    if (likely(o != Py_None)) {
        if (likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
            PyObject *r = PyList_GET_ITEM(o, i);
            Py_INCREF(r);
            return r;
        }
        else if ((-PyList_GET_SIZE(o) <= i) & (i < 0)) {
            PyObject *r = PyList_GET_ITEM(o, PyList_GET_SIZE(o) + i);
            Py_INCREF(r);
            return r;
        }
    }
    return __Pyx_GetItemInt_Generic(o, fits_long ? PyInt_FromLong(i) : PyLong_FromLongLong(i));
}

#define __Pyx_GetItemInt_Tuple(o, i, size, to_py_func) ((size <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Tuple_Fast(o, i, size <= sizeof(long)) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))

static INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i, int fits_long) {
    if (likely(o != Py_None)) {
        if (likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, i);
            Py_INCREF(r);
            return r;
        }
        else if ((-PyTuple_GET_SIZE(o) <= i) & (i < 0)) {
            PyObject *r = PyTuple_GET_ITEM(o, PyTuple_GET_SIZE(o) + i);
            Py_INCREF(r);
            return r;
        }
    }
    return __Pyx_GetItemInt_Generic(o, fits_long ? PyInt_FromLong(i) : PyLong_FromLongLong(i));
}


#define __Pyx_GetItemInt(o, i, size, to_py_func) ((size <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Fast(o, i, size <= sizeof(long)) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))

static INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int fits_long) {
    PyObject *r;
    if (PyList_CheckExact(o) && ((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
    }
    else if (PyTuple_CheckExact(o) && ((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
    }
    else if (Py_TYPE(o)->tp_as_sequence && Py_TYPE(o)->tp_as_sequence->sq_item && (likely(i >= 0))) {
        r = PySequence_GetItem(o, i);
    }
    else {
        r = __Pyx_GetItemInt_Generic(o, fits_long ? PyInt_FromLong(i) : PyLong_FromLongLong(i));
    }
    return r;
}

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact); /*proto*/

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name); /*proto*/

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list); /*proto*/

#if __PYX_USE_C99_COMPLEX
    #define __Pyx_REAL_PART(z) __real__(z)
    #define __Pyx_IMAG_PART(z) __imag__(z)
#else
    #define __Pyx_REAL_PART(z) ((z).real)
    #define __Pyx_IMAG_PART(z) ((z).imag)
#endif

#define __pyx_PyObject_from_complex(z) PyComplex_FromDoubles((double)__Pyx_REAL_PART(z), (double)__Pyx_IMAG_PART(z))

#if __PYX_USE_C99_COMPLEX

    typedef float _Complex __pyx_t_float_complex;
    static INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
    
    #define __pyx_t_float_complex_is_zero(a) ((a) == 0)
    #define __pyx_t_float_complex_eq(a, b) ((a) == (b))
    #define __pyx_t_float_complex_add(a, b) ((a)+(b))
    #define __pyx_t_float_complex_sub(a, b) ((a)-(b))
    #define __pyx_t_float_complex_mul(a, b) ((a)*(b))
    #define __pyx_t_float_complex_div(a, b) ((a)/(b))
    #define __pyx_t_float_complex_neg(a) (-(a))

#else

    typedef struct { float real, imag; } __pyx_t_float_complex;
    static INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex c; c.real = x; c.imag = y; return c;
    }
    
    static INLINE int __pyx_t_float_complex_is_zero(__pyx_t_float_complex a) {
       return (a.real == 0) & (a.imag == 0);
    }

    static INLINE int __pyx_t_float_complex_eq(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) & (a.imag == b.imag);
    }

    static INLINE __pyx_t_float_complex __pyx_t_float_complex_add(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }

    static INLINE __pyx_t_float_complex __pyx_t_float_complex_sub(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }

    static INLINE __pyx_t_float_complex __pyx_t_float_complex_mul(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }

    static INLINE __pyx_t_float_complex __pyx_t_float_complex_div(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        float denom = b.real*b.real + b.imag*b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }

    static INLINE __pyx_t_float_complex __pyx_t_float_complex_neg(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }

#endif

#if __PYX_USE_C99_COMPLEX

    typedef double _Complex __pyx_t_double_complex;
    static INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
    
    #define __pyx_t_double_complex_is_zero(a) ((a) == 0)
    #define __pyx_t_double_complex_eq(a, b) ((a) == (b))
    #define __pyx_t_double_complex_add(a, b) ((a)+(b))
    #define __pyx_t_double_complex_sub(a, b) ((a)-(b))
    #define __pyx_t_double_complex_mul(a, b) ((a)*(b))
    #define __pyx_t_double_complex_div(a, b) ((a)/(b))
    #define __pyx_t_double_complex_neg(a) (-(a))

#else

    typedef struct { double real, imag; } __pyx_t_double_complex;
    static INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex c; c.real = x; c.imag = y; return c;
    }
    
    static INLINE int __pyx_t_double_complex_is_zero(__pyx_t_double_complex a) {
       return (a.real == 0) & (a.imag == 0);
    }

    static INLINE int __pyx_t_double_complex_eq(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) & (a.imag == b.imag);
    }

    static INLINE __pyx_t_double_complex __pyx_t_double_complex_add(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }

    static INLINE __pyx_t_double_complex __pyx_t_double_complex_sub(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }

    static INLINE __pyx_t_double_complex __pyx_t_double_complex_mul(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }

    static INLINE __pyx_t_double_complex __pyx_t_double_complex_div(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        double denom = b.real*b.real + b.imag*b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }

    static INLINE __pyx_t_double_complex __pyx_t_double_complex_neg(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }

#endif

#if __PYX_USE_C99_COMPLEX

    typedef long double _Complex __pyx_t_long__double_complex;
    static INLINE __pyx_t_long__double_complex __pyx_t_long__double_complex_from_parts(long double x, long double y) {
      return x + y*(__pyx_t_long__double_complex)_Complex_I;
    }
    
    #define __pyx_t_long__double_complex_is_zero(a) ((a) == 0)
    #define __pyx_t_long__double_complex_eq(a, b) ((a) == (b))
    #define __pyx_t_long__double_complex_add(a, b) ((a)+(b))
    #define __pyx_t_long__double_complex_sub(a, b) ((a)-(b))
    #define __pyx_t_long__double_complex_mul(a, b) ((a)*(b))
    #define __pyx_t_long__double_complex_div(a, b) ((a)/(b))
    #define __pyx_t_long__double_complex_neg(a) (-(a))

#else

    typedef struct { long double real, imag; } __pyx_t_long__double_complex;
    static INLINE __pyx_t_long__double_complex __pyx_t_long__double_complex_from_parts(long double x, long double y) {
      __pyx_t_long__double_complex c; c.real = x; c.imag = y; return c;
    }
    
    static INLINE int __pyx_t_long__double_complex_is_zero(__pyx_t_long__double_complex a) {
       return (a.real == 0) & (a.imag == 0);
    }

    static INLINE int __pyx_t_long__double_complex_eq(__pyx_t_long__double_complex a, __pyx_t_long__double_complex b) {
       return (a.real == b.real) & (a.imag == b.imag);
    }

    static INLINE __pyx_t_long__double_complex __pyx_t_long__double_complex_add(__pyx_t_long__double_complex a, __pyx_t_long__double_complex b) {
        __pyx_t_long__double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }

    static INLINE __pyx_t_long__double_complex __pyx_t_long__double_complex_sub(__pyx_t_long__double_complex a, __pyx_t_long__double_complex b) {
        __pyx_t_long__double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }

    static INLINE __pyx_t_long__double_complex __pyx_t_long__double_complex_mul(__pyx_t_long__double_complex a, __pyx_t_long__double_complex b) {
        __pyx_t_long__double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }

    static INLINE __pyx_t_long__double_complex __pyx_t_long__double_complex_div(__pyx_t_long__double_complex a, __pyx_t_long__double_complex b) {
        __pyx_t_long__double_complex z;
        long double denom = b.real*b.real + b.imag*b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }

    static INLINE __pyx_t_long__double_complex __pyx_t_long__double_complex_neg(__pyx_t_long__double_complex a) {
        __pyx_t_long__double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }

#endif

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb); /*proto*/

static INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb); /*proto*/
static INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

static INLINE int __Pyx_StrEq(const char *, const char *); /*proto*/

static INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject *);

static INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject *);

static INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject *);

static INLINE char __Pyx_PyInt_AsChar(PyObject *);

static INLINE short __Pyx_PyInt_AsShort(PyObject *);

static INLINE int __Pyx_PyInt_AsInt(PyObject *);

static INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject *);

static INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject *);

static INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject *);

static INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject *);

static INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject *);

static INLINE long __Pyx_PyInt_AsLong(PyObject *);

static INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject *);

static INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject *);

static INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject *);

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, long size);  /*proto*/

static PyObject *__Pyx_ImportModule(const char *name); /*proto*/

static void __Pyx_AddTraceback(const char *funcname); /*proto*/

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/

/* Type declarations */

typedef npy_int8 __pyx_t_5numpy_int8_t;

typedef npy_int16 __pyx_t_5numpy_int16_t;

typedef npy_int32 __pyx_t_5numpy_int32_t;

typedef npy_int64 __pyx_t_5numpy_int64_t;

typedef npy_uint8 __pyx_t_5numpy_uint8_t;

typedef npy_uint16 __pyx_t_5numpy_uint16_t;

typedef npy_uint32 __pyx_t_5numpy_uint32_t;

typedef npy_uint64 __pyx_t_5numpy_uint64_t;

typedef npy_float32 __pyx_t_5numpy_float32_t;

typedef npy_float64 __pyx_t_5numpy_float64_t;

typedef npy_complex64 __pyx_t_5numpy_complex64_t;

typedef npy_complex128 __pyx_t_5numpy_complex128_t;

typedef npy_long __pyx_t_5numpy_int_t;

typedef npy_longlong __pyx_t_5numpy_long_t;

typedef npy_ulong __pyx_t_5numpy_uint_t;

typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

typedef npy_double __pyx_t_5numpy_float_t;

typedef npy_double __pyx_t_5numpy_double_t;

typedef npy_longdouble __pyx_t_5numpy_longdouble_t;

typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* "C:\Python26\Lib\site-packages\ege.pyx":749
 * 
 * 
 * cdef class Timer:             # <<<<<<<<<<<<<<
 *     cdef c_Timer *thisPtr
 *     def __cinit__(self, double time = 0, bint start = True):
 */

struct __pyx_obj_3ege_Timer {
  PyObject_HEAD
  Timer *thisPtr;
};

/* "C:\Python26\Lib\site-packages\ege.pyx":843
 * 
 * 
 * cdef class Sound:             # <<<<<<<<<<<<<<
 *     cdef c_Sound *thisPtr
 *     def __cinit__(self, filename, bint stream):
 */

struct __pyx_obj_3ege_Sound {
  PyObject_HEAD
  Sound *thisPtr;
};

/* "C:\Python26\Lib\site-packages\ege.pyx":559
 * 
 * 
 * cdef class Image:	# test if an image can be generated from wh instead             # <<<<<<<<<<<<<<
 *     cdef c_Image *thisPtr
 *     def __cinit__(self, I, II = None, III = None, IV = None, V = None):
 */

struct __pyx_obj_3ege_Image {
  PyObject_HEAD
  Image *thisPtr;
};
/* Module declarations from python_buffer */

/* Module declarations from stdlib */

/* Module declarations from numpy */

/* Module declarations from numpy */

static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/
/* Module declarations from ege */

static PyTypeObject *__pyx_ptype_3ege_Image = 0;
static PyTypeObject *__pyx_ptype_3ege_Timer = 0;
static PyTypeObject *__pyx_ptype_3ege_Sound = 0;
static WindowHandler *__pyx_v_3ege_wh;
static SoundHandler *__pyx_v_3ege_sh;
static ConnectionHandler *__pyx_v_3ege_conH;
static int __pyx_k_69;
static int __pyx_k_70;
static PyObject *__pyx_k_71 = 0;
static int __pyx_k_72;
static PyObject *__pyx_k_73 = 0;
static PyObject *__pyx_k_74 = 0;
static int __pyx_k_75;
static PyObject *__pyx_k_76 = 0;
#define __Pyx_MODULE_NAME "ege"
int __pyx_module_is_main_ege = 0;

/* Implementation of ege */
static char __pyx_k_67[] = "";
static char __pyx_k_68[] = "";
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_256;
static PyObject *__pyx_int_neg_1;
static PyObject *__pyx_int_32;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_4;
static PyObject *__pyx_int_5;
static PyObject *__pyx_int_6;
static PyObject *__pyx_int_7;
static PyObject *__pyx_int_8;
static PyObject *__pyx_int_9;
static PyObject *__pyx_int_10;
static PyObject *__pyx_int_11;
static PyObject *__pyx_int_12;
static PyObject *__pyx_int_13;
static PyObject *__pyx_int_14;
static PyObject *__pyx_int_15;
static PyObject *__pyx_int_16;
static PyObject *__pyx_int_17;
static PyObject *__pyx_int_18;
static PyObject *__pyx_int_19;
static PyObject *__pyx_int_20;
static PyObject *__pyx_int_21;
static PyObject *__pyx_int_22;
static PyObject *__pyx_int_23;
static PyObject *__pyx_int_24;
static PyObject *__pyx_int_25;
static PyObject *__pyx_int_26;
static PyObject *__pyx_int_27;
static PyObject *__pyx_int_28;
static PyObject *__pyx_int_29;
static PyObject *__pyx_int_30;
static PyObject *__pyx_int_31;
static PyObject *__pyx_int_33;
static PyObject *__pyx_int_34;
static PyObject *__pyx_int_35;
static PyObject *__pyx_int_36;
static PyObject *__pyx_int_37;
static PyObject *__pyx_int_38;
static PyObject *__pyx_int_39;
static PyObject *__pyx_int_40;
static PyObject *__pyx_int_41;
static PyObject *__pyx_int_42;
static PyObject *__pyx_int_43;
static PyObject *__pyx_int_44;
static PyObject *__pyx_int_45;
static PyObject *__pyx_int_46;
static PyObject *__pyx_int_47;
static PyObject *__pyx_int_48;
static PyObject *__pyx_int_49;
static PyObject *__pyx_int_50;
static PyObject *__pyx_int_51;
static PyObject *__pyx_int_52;
static PyObject *__pyx_int_53;
static PyObject *__pyx_int_54;
static PyObject *__pyx_int_55;
static PyObject *__pyx_int_56;
static PyObject *__pyx_int_57;
static PyObject *__pyx_int_58;
static PyObject *__pyx_int_59;
static PyObject *__pyx_int_60;
static PyObject *__pyx_int_61;
static PyObject *__pyx_int_62;
static PyObject *__pyx_int_255;
static PyObject *__pyx_int_0xFFFF;
static char __pyx_k___main__[] = "__main__";
static PyObject *__pyx_kp___main__;
static char __pyx_k___cinit__[] = "__cinit__";
static PyObject *__pyx_kp___cinit__;
static char __pyx_k___dealloc__[] = "__dealloc__";
static PyObject *__pyx_kp___dealloc__;
static char __pyx_k_draw[] = "draw";
static PyObject *__pyx_kp_draw;
static char __pyx_k_getWidth[] = "getWidth";
static PyObject *__pyx_kp_getWidth;
static char __pyx_k_getHeight[] = "getHeight";
static PyObject *__pyx_kp_getHeight;
static char __pyx_k_drawPoints[] = "drawPoints";
static PyObject *__pyx_kp_drawPoints;
static char __pyx_k_drawLines[] = "drawLines";
static PyObject *__pyx_kp_drawLines;
static char __pyx_k_drawTriangles[] = "drawTriangles";
static PyObject *__pyx_kp_drawTriangles;
static char __pyx_k_drawPolygon[] = "drawPolygon";
static PyObject *__pyx_kp_drawPolygon;
static char __pyx_k_subImage[] = "subImage";
static PyObject *__pyx_kp_subImage;
static char __pyx_k_resume[] = "resume";
static PyObject *__pyx_kp_resume;
static char __pyx_k_pause[] = "pause";
static PyObject *__pyx_kp_pause;
static char __pyx_k_togglePause[] = "togglePause";
static PyObject *__pyx_kp_togglePause;
static char __pyx_k_stop[] = "stop";
static PyObject *__pyx_kp_stop;
static char __pyx_k_setTime[] = "setTime";
static PyObject *__pyx_kp_setTime;
static char __pyx_k_getTime[] = "getTime";
static PyObject *__pyx_kp_getTime;
static char __pyx_k_addTime[] = "addTime";
static PyObject *__pyx_kp_addTime;
static char __pyx_k_isRunning[] = "isRunning";
static PyObject *__pyx_kp_isRunning;
static char __pyx_k_play[] = "play";
static PyObject *__pyx_kp_play;
static char __pyx_k_setPosition[] = "setPosition";
static PyObject *__pyx_kp_setPosition;
static char __pyx_k_setFrequency[] = "setFrequency";
static PyObject *__pyx_kp_setFrequency;
static char __pyx_k_setPan[] = "setPan";
static PyObject *__pyx_kp_setPan;
static char __pyx_k_setVolume[] = "setVolume";
static PyObject *__pyx_kp_setVolume;
static char __pyx_k_getPosition[] = "getPosition";
static PyObject *__pyx_kp_getPosition;
static char __pyx_k_getFrequency[] = "getFrequency";
static PyObject *__pyx_kp_getFrequency;
static char __pyx_k_isPlaying[] = "isPlaying";
static PyObject *__pyx_kp_isPlaying;
static char __pyx_k_31[] = "maxConnectionsAllowed";
static PyObject *__pyx_kp_31;
static char __pyx_k_behindNAT[] = "behindNAT";
static PyObject *__pyx_kp_behindNAT;
static char __pyx_k_facilitatorAddress[] = "facilitatorAddress";
static PyObject *__pyx_kp_facilitatorAddress;
static char __pyx_k_serverIP[] = "serverIP";
static PyObject *__pyx_kp_serverIP;
static char __pyx_k_serverBehindNAT[] = "serverBehindNAT";
static PyObject *__pyx_kp_serverBehindNAT;
static char __pyx_k_data[] = "data";
static PyObject *__pyx_kp_data;
static char __pyx_k_priority[] = "priority";
static PyObject *__pyx_kp_priority;
static char __pyx_k_reliability[] = "reliability";
static PyObject *__pyx_kp_reliability;
static char __pyx_k_channel[] = "channel";
static PyObject *__pyx_kp_channel;
static char __pyx_k_timeStamp[] = "timeStamp";
static PyObject *__pyx_kp_timeStamp;
static char __pyx_k_svUsers[] = "svUsers";
static PyObject *__pyx_kp_svUsers;
static char __pyx_k_svBroadcast[] = "svBroadcast";
static PyObject *__pyx_kp_svBroadcast;
static char __pyx_k_width[] = "width";
static PyObject *__pyx_kp_width;
static char __pyx_k_height[] = "height";
static PyObject *__pyx_kp_height;
static char __pyx_k_fullscreen[] = "fullscreen";
static PyObject *__pyx_kp_fullscreen;
static char __pyx_k_newFPS[] = "newFPS";
static PyObject *__pyx_kp_newFPS;
static char __pyx_k_show[] = "show";
static PyObject *__pyx_kp_show;
static char __pyx_k_coords[] = "coords";
static PyObject *__pyx_kp_coords;
static char __pyx_k_color[] = "color";
static PyObject *__pyx_kp_color;
static char __pyx_k_size[] = "size";
static PyObject *__pyx_kp_size;
static char __pyx_k_antiAliasing[] = "antiAliasing";
static PyObject *__pyx_kp_antiAliasing;
static char __pyx_k_loop[] = "loop";
static PyObject *__pyx_kp_loop;
static char __pyx_k_stipple[] = "stipple";
static PyObject *__pyx_kp_stipple;
static char __pyx_k_form[] = "form";
static PyObject *__pyx_kp_form;
static char __pyx_k_a[] = "a";
static PyObject *__pyx_kp_a;
static char __pyx_k_b[] = "b";
static PyObject *__pyx_kp_b;
static char __pyx_k_rotate[] = "rotate";
static PyObject *__pyx_kp_rotate;
static char __pyx_k_type[] = "type";
static PyObject *__pyx_kp_type;
static char __pyx_k_key[] = "key";
static PyObject *__pyx_kp_key;
static char __pyx_k_I[] = "I";
static PyObject *__pyx_kp_I;
static char __pyx_k_II[] = "II";
static PyObject *__pyx_kp_II;
static char __pyx_k_III[] = "III";
static PyObject *__pyx_kp_III;
static char __pyx_k_IV[] = "IV";
static PyObject *__pyx_kp_IV;
static char __pyx_k_V[] = "V";
static PyObject *__pyx_kp_V;
static char __pyx_k_x[] = "x";
static PyObject *__pyx_kp_x;
static char __pyx_k_y[] = "y";
static PyObject *__pyx_kp_y;
static char __pyx_k_x_0[] = "x_0";
static PyObject *__pyx_kp_x_0;
static char __pyx_k_y_0[] = "y_0";
static PyObject *__pyx_kp_y_0;
static char __pyx_k_bilinear[] = "bilinear";
static PyObject *__pyx_kp_bilinear;
static char __pyx_k_scaleX[] = "scaleX";
static PyObject *__pyx_kp_scaleX;
static char __pyx_k_scaleY[] = "scaleY";
static PyObject *__pyx_kp_scaleY;
static char __pyx_k_rotatePtX[] = "rotatePtX";
static PyObject *__pyx_kp_rotatePtX;
static char __pyx_k_rotatePtY[] = "rotatePtY";
static PyObject *__pyx_kp_rotatePtY;
static char __pyx_k_src[] = "src";
static PyObject *__pyx_kp_src;
static char __pyx_k_time[] = "time";
static PyObject *__pyx_kp_time;
static char __pyx_k_start[] = "start";
static PyObject *__pyx_kp_start;
static char __pyx_k_filename[] = "filename";
static PyObject *__pyx_kp_filename;
static char __pyx_k_stream[] = "stream";
static PyObject *__pyx_kp_stream;
static char __pyx_k_pos[] = "pos";
static PyObject *__pyx_kp_pos;
static char __pyx_k_hz[] = "hz";
static PyObject *__pyx_kp_hz;
static char __pyx_k_pan[] = "pan";
static PyObject *__pyx_kp_pan;
static char __pyx_k_volume[] = "volume";
static PyObject *__pyx_kp_volume;
static char __pyx_k_SEPARATE[] = "SEPARATE";
static PyObject *__pyx_kp_SEPARATE;
static char __pyx_k_STRIP[] = "STRIP";
static PyObject *__pyx_kp_STRIP;
static char __pyx_k_FAN[] = "FAN";
static PyObject *__pyx_kp_FAN;
static char __pyx_k_MAX_SIZE_OF_PACKET[] = "MAX_SIZE_OF_PACKET";
static PyObject *__pyx_kp_MAX_SIZE_OF_PACKET;
static char __pyx_k_WINDOW[] = "WINDOW";
static PyObject *__pyx_kp_WINDOW;
static char __pyx_k_FULLSCREEN[] = "FULLSCREEN";
static PyObject *__pyx_kp_FULLSCREEN;
static char __pyx_k_MOUSE_BUTTON_LEFT[] = "MOUSE_BUTTON_LEFT";
static PyObject *__pyx_kp_MOUSE_BUTTON_LEFT;
static char __pyx_k_MOUSE_BUTTON_RIGHT[] = "MOUSE_BUTTON_RIGHT";
static PyObject *__pyx_kp_MOUSE_BUTTON_RIGHT;
static char __pyx_k_MOUSE_BUTTON_MIDDLE[] = "MOUSE_BUTTON_MIDDLE";
static PyObject *__pyx_kp_MOUSE_BUTTON_MIDDLE;
static char __pyx_k_KEY_UNKNOWN[] = "KEY_UNKNOWN";
static PyObject *__pyx_kp_KEY_UNKNOWN;
static char __pyx_k_KEY_SPACE[] = "KEY_SPACE";
static PyObject *__pyx_kp_KEY_SPACE;
static char __pyx_k_KEY_SPECIAL[] = "KEY_SPECIAL";
static PyObject *__pyx_kp_KEY_SPECIAL;
static char __pyx_k_KEY_ESC[] = "KEY_ESC";
static PyObject *__pyx_kp_KEY_ESC;
static char __pyx_k_32[] = "KEY_F1";
static PyObject *__pyx_kp_32;
static char __pyx_k_33[] = "KEY_F2";
static PyObject *__pyx_kp_33;
static char __pyx_k_34[] = "KEY_F3";
static PyObject *__pyx_kp_34;
static char __pyx_k_35[] = "KEY_F4";
static PyObject *__pyx_kp_35;
static char __pyx_k_36[] = "KEY_F5";
static PyObject *__pyx_kp_36;
static char __pyx_k_37[] = "KEY_F6";
static PyObject *__pyx_kp_37;
static char __pyx_k_38[] = "KEY_F7";
static PyObject *__pyx_kp_38;
static char __pyx_k_39[] = "KEY_F8";
static PyObject *__pyx_kp_39;
static char __pyx_k_40[] = "KEY_F9";
static PyObject *__pyx_kp_40;
static char __pyx_k_41[] = "KEY_F10";
static PyObject *__pyx_kp_41;
static char __pyx_k_42[] = "KEY_F11";
static PyObject *__pyx_kp_42;
static char __pyx_k_43[] = "KEY_F12";
static PyObject *__pyx_kp_43;
static char __pyx_k_44[] = "KEY_F13";
static PyObject *__pyx_kp_44;
static char __pyx_k_45[] = "KEY_F14";
static PyObject *__pyx_kp_45;
static char __pyx_k_46[] = "KEY_F15";
static PyObject *__pyx_kp_46;
static char __pyx_k_47[] = "KEY_F16";
static PyObject *__pyx_kp_47;
static char __pyx_k_48[] = "KEY_F17";
static PyObject *__pyx_kp_48;
static char __pyx_k_49[] = "KEY_F18";
static PyObject *__pyx_kp_49;
static char __pyx_k_50[] = "KEY_F19";
static PyObject *__pyx_kp_50;
static char __pyx_k_51[] = "KEY_F20";
static PyObject *__pyx_kp_51;
static char __pyx_k_52[] = "KEY_F21";
static PyObject *__pyx_kp_52;
static char __pyx_k_53[] = "KEY_F22";
static PyObject *__pyx_kp_53;
static char __pyx_k_54[] = "KEY_F23";
static PyObject *__pyx_kp_54;
static char __pyx_k_55[] = "KEY_F24";
static PyObject *__pyx_kp_55;
static char __pyx_k_56[] = "KEY_F25";
static PyObject *__pyx_kp_56;
static char __pyx_k_KEY_UP[] = "KEY_UP";
static PyObject *__pyx_kp_KEY_UP;
static char __pyx_k_KEY_DOWN[] = "KEY_DOWN";
static PyObject *__pyx_kp_KEY_DOWN;
static char __pyx_k_KEY_LEFT[] = "KEY_LEFT";
static PyObject *__pyx_kp_KEY_LEFT;
static char __pyx_k_KEY_RIGHT[] = "KEY_RIGHT";
static PyObject *__pyx_kp_KEY_RIGHT;
static char __pyx_k_KEY_LSHIFT[] = "KEY_LSHIFT";
static PyObject *__pyx_kp_KEY_LSHIFT;
static char __pyx_k_KEY_RSHIFT[] = "KEY_RSHIFT";
static PyObject *__pyx_kp_KEY_RSHIFT;
static char __pyx_k_KEY_LCTRL[] = "KEY_LCTRL";
static PyObject *__pyx_kp_KEY_LCTRL;
static char __pyx_k_KEY_RCTRL[] = "KEY_RCTRL";
static PyObject *__pyx_kp_KEY_RCTRL;
static char __pyx_k_KEY_LALT[] = "KEY_LALT";
static PyObject *__pyx_kp_KEY_LALT;
static char __pyx_k_KEY_RALT[] = "KEY_RALT";
static PyObject *__pyx_kp_KEY_RALT;
static char __pyx_k_KEY_TAB[] = "KEY_TAB";
static PyObject *__pyx_kp_KEY_TAB;
static char __pyx_k_KEY_ENTER[] = "KEY_ENTER";
static PyObject *__pyx_kp_KEY_ENTER;
static char __pyx_k_KEY_BACKSPACE[] = "KEY_BACKSPACE";
static PyObject *__pyx_kp_KEY_BACKSPACE;
static char __pyx_k_KEY_INSERT[] = "KEY_INSERT";
static PyObject *__pyx_kp_KEY_INSERT;
static char __pyx_k_KEY_DEL[] = "KEY_DEL";
static PyObject *__pyx_kp_KEY_DEL;
static char __pyx_k_KEY_PAGEUP[] = "KEY_PAGEUP";
static PyObject *__pyx_kp_KEY_PAGEUP;
static char __pyx_k_KEY_PAGEDOWN[] = "KEY_PAGEDOWN";
static PyObject *__pyx_kp_KEY_PAGEDOWN;
static char __pyx_k_KEY_HOME[] = "KEY_HOME";
static PyObject *__pyx_kp_KEY_HOME;
static char __pyx_k_KEY_END[] = "KEY_END";
static PyObject *__pyx_kp_KEY_END;
static char __pyx_k_KEY_KP_0[] = "KEY_KP_0";
static PyObject *__pyx_kp_KEY_KP_0;
static char __pyx_k_57[] = "KEY_KP_1";
static PyObject *__pyx_kp_57;
static char __pyx_k_58[] = "KEY_KP_2";
static PyObject *__pyx_kp_58;
static char __pyx_k_59[] = "KEY_KP_3";
static PyObject *__pyx_kp_59;
static char __pyx_k_60[] = "KEY_KP_4";
static PyObject *__pyx_kp_60;
static char __pyx_k_61[] = "KEY_KP_5";
static PyObject *__pyx_kp_61;
static char __pyx_k_62[] = "KEY_KP_6";
static PyObject *__pyx_kp_62;
static char __pyx_k_63[] = "KEY_KP_7";
static PyObject *__pyx_kp_63;
static char __pyx_k_64[] = "KEY_KP_8";
static PyObject *__pyx_kp_64;
static char __pyx_k_65[] = "KEY_KP_9";
static PyObject *__pyx_kp_65;
static char __pyx_k_KEY_KP_DIVIDE[] = "KEY_KP_DIVIDE";
static PyObject *__pyx_kp_KEY_KP_DIVIDE;
static char __pyx_k_KEY_KP_MULTIPLY[] = "KEY_KP_MULTIPLY";
static PyObject *__pyx_kp_KEY_KP_MULTIPLY;
static char __pyx_k_KEY_KP_SUBTRACT[] = "KEY_KP_SUBTRACT";
static PyObject *__pyx_kp_KEY_KP_SUBTRACT;
static char __pyx_k_KEY_KP_ADD[] = "KEY_KP_ADD";
static PyObject *__pyx_kp_KEY_KP_ADD;
static char __pyx_k_KEY_KP_DECIMAL[] = "KEY_KP_DECIMAL";
static PyObject *__pyx_kp_KEY_KP_DECIMAL;
static char __pyx_k_KEY_KP_EQUAL[] = "KEY_KP_EQUAL";
static PyObject *__pyx_kp_KEY_KP_EQUAL;
static char __pyx_k_KEY_KP_ENTER[] = "KEY_KP_ENTER";
static PyObject *__pyx_kp_KEY_KP_ENTER;
static char __pyx_k_KEY_LAST[] = "KEY_LAST";
static PyObject *__pyx_kp_KEY_LAST;
static char __pyx_k_WHITE[] = "WHITE";
static PyObject *__pyx_kp_WHITE;
static char __pyx_k_RED[] = "RED";
static PyObject *__pyx_kp_RED;
static char __pyx_k_GREEN[] = "GREEN";
static PyObject *__pyx_kp_GREEN;
static char __pyx_k_BLUE[] = "BLUE";
static PyObject *__pyx_kp_BLUE;
static char __pyx_k_YELLOW[] = "YELLOW";
static PyObject *__pyx_kp_YELLOW;
static char __pyx_k_PINK[] = "PINK";
static PyObject *__pyx_kp_PINK;
static char __pyx_k_CYAN[] = "CYAN";
static PyObject *__pyx_kp_CYAN;
static char __pyx_k_BLACK[] = "BLACK";
static PyObject *__pyx_kp_BLACK;
static char __pyx_k_HIGH_PRIORITY[] = "HIGH_PRIORITY";
static PyObject *__pyx_kp_HIGH_PRIORITY;
static char __pyx_k_MEDIUM_PRIORITY[] = "MEDIUM_PRIORITY";
static PyObject *__pyx_kp_MEDIUM_PRIORITY;
static char __pyx_k_LOW_PRIORITY[] = "LOW_PRIORITY";
static PyObject *__pyx_kp_LOW_PRIORITY;
static char __pyx_k_UNRELIABLE[] = "UNRELIABLE";
static PyObject *__pyx_kp_UNRELIABLE;
static char __pyx_k_66[] = "UNRELIABLE_SEQUENCED";
static PyObject *__pyx_kp_66;
static char __pyx_k_RELIABLE[] = "RELIABLE";
static PyObject *__pyx_kp_RELIABLE;
static char __pyx_k_RELIABLE_ORDERED[] = "RELIABLE_ORDERED";
static PyObject *__pyx_kp_RELIABLE_ORDERED;
static char __pyx_k_RELIABLE_SEQUENCED[] = "RELIABLE_SEQUENCED";
static PyObject *__pyx_kp_RELIABLE_SEQUENCED;
static char __pyx_k_numpy[] = "numpy";
static PyObject *__pyx_kp_numpy;
static char __pyx_k_cPickle[] = "cPickle";
static PyObject *__pyx_kp_cPickle;
static char __pyx_k_dumps[] = "dumps";
static PyObject *__pyx_kp_dumps;
static char __pyx_k_77[] = "userDefinedData";
static PyObject *__pyx_kp_77;
static char __pyx_k_loads[] = "loads";
static PyObject *__pyx_kp_loads;
static char __pyx_k_78[] = "type";
static PyObject *__pyx_kp_78;
static char __pyx_k_79[] = "data";
static PyObject *__pyx_kp_79;
static char __pyx_k_80[] = "delay";
static PyObject *__pyx_kp_80;
static char __pyx_k_81[] = "from";
static PyObject *__pyx_kp_81;
static char __pyx_k_82[] = "type";
static PyObject *__pyx_kp_82;
static char __pyx_k_83[] = "data";
static PyObject *__pyx_kp_83;
static char __pyx_k_84[] = "delay";
static PyObject *__pyx_kp_84;
static char __pyx_k_85[] = "from";
static PyObject *__pyx_kp_85;
static char __pyx_k_86[] = "type";
static PyObject *__pyx_kp_86;
static char __pyx_k_87[] = "data";
static PyObject *__pyx_kp_87;
static char __pyx_k_88[] = "delay";
static PyObject *__pyx_kp_88;
static char __pyx_k_89[] = "from";
static PyObject *__pyx_kp_89;
static char __pyx_k_90[] = "system";
static PyObject *__pyx_kp_90;
static char __pyx_k_array[] = "array";
static PyObject *__pyx_kp_array;
static char __pyx_k_dtype[] = "dtype";
static PyObject *__pyx_kp_dtype;
static char __pyx_k_91[] = "x";
static PyObject *__pyx_kp_91;
static char __pyx_k_92[] = "y";
static PyObject *__pyx_kp_92;
static char __pyx_k_93[] = "left";
static PyObject *__pyx_kp_93;
static char __pyx_k_94[] = "right";
static PyObject *__pyx_kp_94;
static char __pyx_k_95[] = "middle";
static PyObject *__pyx_kp_95;
static char __pyx_k_96[] = "wheel";
static PyObject *__pyx_kp_96;
static char __pyx_k_ord[] = "ord";
static PyObject *__pyx_kp_ord;
static PyObject *__pyx_kp_67;
static PyObject *__pyx_kp_68;
static PyObject *__pyx_builtin_ord;
static char __pyx_k___getbuffer__[] = "__getbuffer__";
static PyObject *__pyx_kp___getbuffer__;
static char __pyx_k___releasebuffer__[] = "__releasebuffer__";
static PyObject *__pyx_kp___releasebuffer__;
static char __pyx_k_info[] = "info";
static PyObject *__pyx_kp_info;
static char __pyx_k_flags[] = "flags";
static PyObject *__pyx_kp_flags;
static char __pyx_k_ValueError[] = "ValueError";
static PyObject *__pyx_kp_ValueError;
static char __pyx_k_range[] = "range";
static PyObject *__pyx_kp_range;
static char __pyx_k_itervalues[] = "itervalues";
static PyObject *__pyx_kp_itervalues;
static char __pyx_k_RuntimeError[] = "RuntimeError";
static PyObject *__pyx_kp_RuntimeError;
static PyObject *__pyx_kp_1;
static PyObject *__pyx_kp_2;
static PyObject *__pyx_kp_5;
static PyObject *__pyx_kp_23;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_RuntimeError;
static char __pyx_k_1[] = "ndarray is not C contiguous";
static char __pyx_k_2[] = "ndarray is not Fortran contiguous";
static char __pyx_k_3[] = ">";
static char __pyx_k_4[] = "<";
static char __pyx_k_5[] = "Non-native byte order not supported";
static char __pyx_k_6[] = "b";
static char __pyx_k_7[] = "B";
static char __pyx_k_8[] = "h";
static char __pyx_k_9[] = "H";
static char __pyx_k_10[] = "i";
static char __pyx_k_11[] = "I";
static char __pyx_k_12[] = "l";
static char __pyx_k_13[] = "L";
static char __pyx_k_14[] = "q";
static char __pyx_k_15[] = "Q";
static char __pyx_k_16[] = "f";
static char __pyx_k_17[] = "d";
static char __pyx_k_18[] = "g";
static char __pyx_k_19[] = "Zf";
static char __pyx_k_20[] = "Zd";
static char __pyx_k_21[] = "Zg";
static char __pyx_k_22[] = "O";
static char __pyx_k_23[] = "unknown dtype code in numpy.pxd (%d)";
static char __pyx_k_24[] = "^";
static PyObject *__pyx_kp_25;
static PyObject *__pyx_kp_28;
static PyObject *__pyx_kp_29;
static PyObject *__pyx_kp_30;
static char __pyx_k_25[] = "Format string allocated too short, see comment in numpy.pxd";
static char __pyx_k_26[] = ">";
static char __pyx_k_27[] = "<";
static char __pyx_k_28[] = "Non-native byte order not supported";
static char __pyx_k_29[] = "Format string allocated too short.";
static char __pyx_k_30[] = "unknown dtype code in numpy.pxd (%d)";

/* "C:\Python26\Lib\site-packages\ege.pyx":207
 * 
 * 
 * def externalStartServer(int maxConnectionsAllowed, bint behindNAT, facilitatorAddress=''):             # <<<<<<<<<<<<<<
 * #    cdef char *guidString
 * #    guidString = conH.startServer(maxConnectionsAllowed, behindNAT, facilitatorAddress)
 */

static PyObject *__pyx_pf_3ege_externalStartServer(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_3ege_externalStartServer(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_maxConnectionsAllowed;
  int __pyx_v_behindNAT;
  PyObject *__pyx_v_facilitatorAddress = 0;
  PyObject *__pyx_r = NULL;
  char *__pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_31,&__pyx_kp_behindNAT,&__pyx_kp_facilitatorAddress,0};
  __Pyx_SetupRefcountContext("externalStartServer");
  __pyx_self = __pyx_self;
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    values[2] = __pyx_kp_67;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_kp_31);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_kp_behindNAT);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("externalStartServer", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_facilitatorAddress);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "externalStartServer") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_maxConnectionsAllowed = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_maxConnectionsAllowed == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_behindNAT = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_behindNAT == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_facilitatorAddress = values[2];
  } else {
    __pyx_v_facilitatorAddress = __pyx_kp_67;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3:
      __pyx_v_facilitatorAddress = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2:
      __pyx_v_behindNAT = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_behindNAT == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_maxConnectionsAllowed = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_maxConnectionsAllowed == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("externalStartServer", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.externalStartServer");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":215
 * #    else:
 * #        return None
 *     conH.startServer(maxConnectionsAllowed, behindNAT, facilitatorAddress)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyBytes_AsString(__pyx_v_facilitatorAddress); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_3ege_conH->startServer(__pyx_v_maxConnectionsAllowed, __pyx_v_behindNAT, __pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("ege.externalStartServer");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":219
 * 
 * 
 * def externalStartFacilitator():             # <<<<<<<<<<<<<<
 *     conH.startFacilitator()
 * 
 */

static PyObject *__pyx_pf_3ege_externalStartFacilitator(PyObject *__pyx_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_externalStartFacilitator(PyObject *__pyx_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("externalStartFacilitator");
  __pyx_self = __pyx_self;

  /* "C:\Python26\Lib\site-packages\ege.pyx":220
 * 
 * def externalStartFacilitator():
 *     conH.startFacilitator()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_3ege_conH->startFacilitator();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":223
 * 
 * 
 * def externalStartClient(char *serverIP, bint serverBehindNAT, facilitatorAddress=''):             # <<<<<<<<<<<<<<
 * #    cdef char *guidString
 * #    guidString = conH.startClient(serverIP, serverBehindNAT, facilitatorAddress)
 */

static PyObject *__pyx_pf_3ege_externalStartClient(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_3ege_externalStartClient(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_serverIP;
  int __pyx_v_serverBehindNAT;
  PyObject *__pyx_v_facilitatorAddress = 0;
  PyObject *__pyx_r = NULL;
  char *__pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_serverIP,&__pyx_kp_serverBehindNAT,&__pyx_kp_facilitatorAddress,0};
  __Pyx_SetupRefcountContext("externalStartClient");
  __pyx_self = __pyx_self;
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    values[2] = __pyx_kp_68;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_kp_serverIP);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_kp_serverBehindNAT);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("externalStartClient", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_facilitatorAddress);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "externalStartClient") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_serverIP = __Pyx_PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_serverIP) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_serverBehindNAT = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_serverBehindNAT == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_facilitatorAddress = values[2];
  } else {
    __pyx_v_facilitatorAddress = __pyx_kp_68;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3:
      __pyx_v_facilitatorAddress = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2:
      __pyx_v_serverBehindNAT = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_serverBehindNAT == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_serverIP = __Pyx_PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_serverIP) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("externalStartClient", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.externalStartClient");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":231
 * #    else:
 * #        return None
 *     conH.startClient(serverIP, serverBehindNAT, facilitatorAddress)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyBytes_AsString(__pyx_v_facilitatorAddress); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_3ege_conH->startClient(__pyx_v_serverIP, __pyx_v_serverBehindNAT, __pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("ege.externalStartClient");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":241
 * 
 * 
 * def sendData(data, int priority=HIGH_PRIORITY, int reliability=RELIABLE_ORDERED, int channel=0, bint timeStamp=True, svUsers=None, bint svBroadcast=True):             # <<<<<<<<<<<<<<
 *     pickledObject = cPickle.dumps(data)
 * 
 */

static PyObject *__pyx_pf_3ege_sendData(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_3ege_sendData(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_data = 0;
  int __pyx_v_priority;
  int __pyx_v_reliability;
  int __pyx_v_channel;
  int __pyx_v_timeStamp;
  PyObject *__pyx_v_svUsers = 0;
  int __pyx_v_svBroadcast;
  PyObject *__pyx_v_pickledObject;
  char *__pyx_v_cSvUsers;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_1 = 0;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  char *__pyx_t_8;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_data,&__pyx_kp_priority,&__pyx_kp_reliability,&__pyx_kp_channel,&__pyx_kp_timeStamp,&__pyx_kp_svUsers,&__pyx_kp_svBroadcast,0};
  __Pyx_SetupRefcountContext("sendData");
  __pyx_self = __pyx_self;
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[7] = {0,0,0,0,0,0,0};
    values[5] = Py_None;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_kp_data);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_priority);
        if (unlikely(value)) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_reliability);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_channel);
        if (unlikely(value)) { values[3] = value; kw_args--; }
      }
      case  4:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_timeStamp);
        if (unlikely(value)) { values[4] = value; kw_args--; }
      }
      case  5:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_svUsers);
        if (unlikely(value)) { values[5] = value; kw_args--; }
      }
      case  6:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_svBroadcast);
        if (unlikely(value)) { values[6] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "sendData") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_data = values[0];
    if (values[1]) {
      __pyx_v_priority = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_priority == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_priority = __pyx_k_69;
    }
    if (values[2]) {
      __pyx_v_reliability = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_reliability == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_reliability = __pyx_k_70;
    }
    if (values[3]) {
      __pyx_v_channel = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_channel == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_channel = 0;
    }
    if (values[4]) {
      __pyx_v_timeStamp = __Pyx_PyObject_IsTrue(values[4]); if (unlikely((__pyx_v_timeStamp == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_timeStamp = 1;
    }
    __pyx_v_svUsers = values[5];
    if (values[6]) {
      __pyx_v_svBroadcast = __Pyx_PyObject_IsTrue(values[6]); if (unlikely((__pyx_v_svBroadcast == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_svBroadcast = 1;
    }
  } else {
    __pyx_v_priority = __pyx_k_69;
    __pyx_v_reliability = __pyx_k_70;
    __pyx_v_channel = 0;
    __pyx_v_timeStamp = 1;
    __pyx_v_svUsers = Py_None;
    __pyx_v_svBroadcast = 1;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  7: __pyx_v_svBroadcast = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 6)); if (unlikely((__pyx_v_svBroadcast == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  6: __pyx_v_svUsers = PyTuple_GET_ITEM(__pyx_args, 5);
      case  5: __pyx_v_timeStamp = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 4)); if (unlikely((__pyx_v_timeStamp == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  4: __pyx_v_channel = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_channel == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3: __pyx_v_reliability = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_reliability == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2: __pyx_v_priority = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_priority == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_data = PyTuple_GET_ITEM(__pyx_args, 0);
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sendData", 0, 1, 7, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.sendData");
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_pickledObject = Py_None; __Pyx_INCREF(Py_None);

  /* "C:\Python26\Lib\site-packages\ege.pyx":242
 * 
 * def sendData(data, int priority=HIGH_PRIORITY, int reliability=RELIABLE_ORDERED, int channel=0, bint timeStamp=True, svUsers=None, bint svBroadcast=True):
 *     pickledObject = cPickle.dumps(data)             # <<<<<<<<<<<<<<
 * 
 *     cdef char *cSvUsers
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_cPickle); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyObject_GetAttr(__pyx_1, __pyx_kp_dumps); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_v_data);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_data);
  __Pyx_GIVEREF(__pyx_v_data);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_v_pickledObject);
  __pyx_v_pickledObject = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":246
 *     cdef char *cSvUsers
 * 
 *     if( len(pickledObject) < MAX_SIZE_OF_PACKET and priority>=0 and priority<=2 and reliability>=0 and reliability<=5 and channel>=0 and channel<=31):             # <<<<<<<<<<<<<<
 *         if(svUsers is None):
 *              cSvUsers = NULL
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_pickledObject); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = PyInt_FromSsize_t(__pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_MAX_SIZE_OF_PACKET); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_3, __pyx_1, Py_LT); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_5) {
    if ((__pyx_v_priority >= 0)) {
      if ((__pyx_v_priority <= 2)) {
        if ((__pyx_v_reliability >= 0)) {
          if ((__pyx_v_reliability <= 5)) {
            if ((__pyx_v_channel >= 0)) {
              __pyx_t_6 = (__pyx_v_channel <= 31);
            } else {
              __pyx_t_6 = (__pyx_v_channel >= 0);
            }
            __pyx_t_7 = __pyx_t_6;
          } else {
            __pyx_t_7 = (__pyx_v_reliability <= 5);
          }
          __pyx_t_6 = __pyx_t_7;
        } else {
          __pyx_t_6 = (__pyx_v_reliability >= 0);
        }
        __pyx_t_7 = __pyx_t_6;
      } else {
        __pyx_t_7 = (__pyx_v_priority <= 2);
      }
      __pyx_t_6 = __pyx_t_7;
    } else {
      __pyx_t_6 = (__pyx_v_priority >= 0);
    }
    __pyx_t_7 = __pyx_t_6;
  } else {
    __pyx_t_7 = __pyx_t_5;
  }
  if (__pyx_t_7) {

    /* "C:\Python26\Lib\site-packages\ege.pyx":247
 * 
 *     if( len(pickledObject) < MAX_SIZE_OF_PACKET and priority>=0 and priority<=2 and reliability>=0 and reliability<=5 and channel>=0 and channel<=31):
 *         if(svUsers is None):             # <<<<<<<<<<<<<<
 *              cSvUsers = NULL
 *         else:
 */
    __pyx_t_7 = (__pyx_v_svUsers == Py_None);
    if (__pyx_t_7) {

      /* "C:\Python26\Lib\site-packages\ege.pyx":248
 *     if( len(pickledObject) < MAX_SIZE_OF_PACKET and priority>=0 and priority<=2 and reliability>=0 and reliability<=5 and channel>=0 and channel<=31):
 *         if(svUsers is None):
 *              cSvUsers = NULL             # <<<<<<<<<<<<<<
 *         else:
 *              cSvUsers = svUsers
 */
      __pyx_v_cSvUsers = NULL;
      goto __pyx_L7;
    }
    /*else*/ {

      /* "C:\Python26\Lib\site-packages\ege.pyx":250
 *              cSvUsers = NULL
 *         else:
 *              cSvUsers = svUsers             # <<<<<<<<<<<<<<
 * 
 *         conH.sendData(pickledObject, priority, reliability, channel, timeStamp, cSvUsers, svBroadcast)
 */
      __pyx_t_8 = __Pyx_PyBytes_AsString(__pyx_v_svUsers); if (unlikely((!__pyx_t_8) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 250; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_v_cSvUsers = __pyx_t_8;
    }
    __pyx_L7:;

    /* "C:\Python26\Lib\site-packages\ege.pyx":252
 *              cSvUsers = svUsers
 * 
 *         conH.sendData(pickledObject, priority, reliability, channel, timeStamp, cSvUsers, svBroadcast)             # <<<<<<<<<<<<<<
 * 
 *     else:
 */
    __pyx_t_8 = __Pyx_PyBytes_AsString(__pyx_v_pickledObject); if (unlikely((!__pyx_t_8) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_3ege_conH->sendData(__pyx_t_8, __pyx_v_priority, __pyx_v_reliability, __pyx_v_channel, __pyx_v_timeStamp, __pyx_v_cSvUsers, __pyx_v_svBroadcast);
    goto __pyx_L6;
  }
  /*else*/ {
  }
  __pyx_L6:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_1);
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("ege.sendData");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_pickledObject);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":260
 * 
 * 
 * def receiveData():             # <<<<<<<<<<<<<<
 *     cdef char type[512]
 *     cdef char data[512]
 */

static PyObject *__pyx_pf_3ege_receiveData(PyObject *__pyx_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_receiveData(PyObject *__pyx_self, PyObject *unused) {
  char __pyx_v_type[512];
  char __pyx_v_data[512];
  int __pyx_v_delay;
  int __pyx_v_timeStamped;
  char __pyx_v_fromUser[512];
  int __pyx_v_packetArrived;
  PyObject *__pyx_v_pType;
  PyObject *__pyx_v_userData;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_1 = 0;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_SetupRefcountContext("receiveData");
  __pyx_self = __pyx_self;
  __pyx_v_pType = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_userData = Py_None; __Pyx_INCREF(Py_None);

  /* "C:\Python26\Lib\site-packages\ege.pyx":268
 *     cdef bint packetArrived
 * 
 *     conH.receiveData(type, data, &delay, &timeStamped, fromUser, &packetArrived)             # <<<<<<<<<<<<<<
 * 
 *     if packetArrived:
 */
  __pyx_v_3ege_conH->receiveData(__pyx_v_type, __pyx_v_data, (&__pyx_v_delay), (&__pyx_v_timeStamped), __pyx_v_fromUser, (&__pyx_v_packetArrived));

  /* "C:\Python26\Lib\site-packages\ege.pyx":270
 *     conH.receiveData(type, data, &delay, &timeStamped, fromUser, &packetArrived)
 * 
 *     if packetArrived:             # <<<<<<<<<<<<<<
 *         pType = type	# to pythonobject
 *         if(pType == 'userDefinedData'):
 */
  __pyx_t_1 = __pyx_v_packetArrived;
  if (__pyx_t_1) {

    /* "C:\Python26\Lib\site-packages\ege.pyx":271
 * 
 *     if packetArrived:
 *         pType = type	# to pythonobject             # <<<<<<<<<<<<<<
 *         if(pType == 'userDefinedData'):
 *             userData = cPickle.loads(data)
 */
    __pyx_t_2 = __Pyx_PyBytes_FromString(__pyx_v_type); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_v_pType);
    __pyx_v_pType = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "C:\Python26\Lib\site-packages\ege.pyx":272
 *     if packetArrived:
 *         pType = type	# to pythonobject
 *         if(pType == 'userDefinedData'):             # <<<<<<<<<<<<<<
 *             userData = cPickle.loads(data)
 *             if(timeStamped):
 */
    __pyx_t_2 = PyObject_RichCompare(__pyx_v_pType, __pyx_kp_77, Py_EQ); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_1) {

      /* "C:\Python26\Lib\site-packages\ege.pyx":273
 *         pType = type	# to pythonobject
 *         if(pType == 'userDefinedData'):
 *             userData = cPickle.loads(data)             # <<<<<<<<<<<<<<
 *             if(timeStamped):
 *                 return {'type': pType, 'data': userData, 'delay': delay, 'from': fromUser}
 */
      __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_cPickle); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_1);
      __pyx_t_2 = PyObject_GetAttr(__pyx_1, __pyx_kp_loads); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
      __pyx_t_3 = __Pyx_PyBytes_FromString(__pyx_v_data); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_4));
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_v_userData);
      __pyx_v_userData = __pyx_t_3;
      __pyx_t_3 = 0;

      /* "C:\Python26\Lib\site-packages\ege.pyx":274
 *         if(pType == 'userDefinedData'):
 *             userData = cPickle.loads(data)
 *             if(timeStamped):             # <<<<<<<<<<<<<<
 *                 return {'type': pType, 'data': userData, 'delay': delay, 'from': fromUser}
 *             else:
 */
      __pyx_t_1 = __pyx_v_timeStamped;
      if (__pyx_t_1) {

        /* "C:\Python26\Lib\site-packages\ege.pyx":275
 *             userData = cPickle.loads(data)
 *             if(timeStamped):
 *                 return {'type': pType, 'data': userData, 'delay': delay, 'from': fromUser}             # <<<<<<<<<<<<<<
 *             else:
 *                 return {'type': pType, 'data': userData, 'delay': None, 'from': fromUser}
 */
        __Pyx_XDECREF(__pyx_r);
        __pyx_1 = PyDict_New(); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(((PyObject *)__pyx_1));
        if (PyDict_SetItem(__pyx_1, __pyx_kp_78, __pyx_v_pType) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        if (PyDict_SetItem(__pyx_1, __pyx_kp_79, __pyx_v_userData) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_3 = PyInt_FromLong(__pyx_v_delay); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        if (PyDict_SetItem(__pyx_1, __pyx_kp_80, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyBytes_FromString(__pyx_v_fromUser); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        if (PyDict_SetItem(__pyx_1, __pyx_kp_81, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = ((PyObject *)__pyx_1);
        __pyx_1 = 0;
        goto __pyx_L0;
        goto __pyx_L7;
      }
      /*else*/ {

        /* "C:\Python26\Lib\site-packages\ege.pyx":277
 *                 return {'type': pType, 'data': userData, 'delay': delay, 'from': fromUser}
 *             else:
 *                 return {'type': pType, 'data': userData, 'delay': None, 'from': fromUser}             # <<<<<<<<<<<<<<
 * 
 *         else:
 */
        __Pyx_XDECREF(__pyx_r);
        __pyx_1 = PyDict_New(); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(((PyObject *)__pyx_1));
        if (PyDict_SetItem(__pyx_1, __pyx_kp_82, __pyx_v_pType) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        if (PyDict_SetItem(__pyx_1, __pyx_kp_83, __pyx_v_userData) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        if (PyDict_SetItem(__pyx_1, __pyx_kp_84, Py_None) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_3 = __Pyx_PyBytes_FromString(__pyx_v_fromUser); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        if (PyDict_SetItem(__pyx_1, __pyx_kp_85, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = ((PyObject *)__pyx_1);
        __pyx_1 = 0;
        goto __pyx_L0;
      }
      __pyx_L7:;
      goto __pyx_L6;
    }
    /*else*/ {

      /* "C:\Python26\Lib\site-packages\ege.pyx":280
 * 
 *         else:
 *             return {'type': pType, 'data': None, 'delay': None, 'from': 'system'}             # <<<<<<<<<<<<<<
 *     else:
 *         return None
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_1 = PyDict_New(); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_1));
      if (PyDict_SetItem(__pyx_1, __pyx_kp_86, __pyx_v_pType) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      if (PyDict_SetItem(__pyx_1, __pyx_kp_87, Py_None) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      if (PyDict_SetItem(__pyx_1, __pyx_kp_88, Py_None) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      if (PyDict_SetItem(__pyx_1, __pyx_kp_89, __pyx_kp_90) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_r = ((PyObject *)__pyx_1);
      __pyx_1 = 0;
      goto __pyx_L0;
    }
    __pyx_L6:;
    goto __pyx_L5;
  }
  /*else*/ {

    /* "C:\Python26\Lib\site-packages\ege.pyx":282
 *             return {'type': pType, 'data': None, 'delay': None, 'from': 'system'}
 *     else:
 *         return None             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
  }
  __pyx_L5:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("ege.receiveData");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_pType);
  __Pyx_DECREF(__pyx_v_userData);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":286
 * 
 * 
 * def isServer():             # <<<<<<<<<<<<<<
 *     return conH.getIsServer()
 * 
 */

static PyObject *__pyx_pf_3ege_isServer(PyObject *__pyx_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_isServer(PyObject *__pyx_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_SetupRefcountContext("isServer");
  __pyx_self = __pyx_self;

  /* "C:\Python26\Lib\site-packages\ege.pyx":287
 * 
 * def isServer():
 *     return conH.getIsServer()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_3ege_conH->getIsServer()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("ege.isServer");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":319
 * cdef c_ConnectionHandler *conH
 * 
 * def externalInitAll():             # <<<<<<<<<<<<<<
 *     global wh
 *     global sh
 */

static PyObject *__pyx_pf_3ege_externalInitAll(PyObject *__pyx_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_externalInitAll(PyObject *__pyx_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("externalInitAll");
  __pyx_self = __pyx_self;

  /* "C:\Python26\Lib\site-packages\ege.pyx":323
 *     global sh
 *     global conH
 *     wh = new_WindowHandler()             # <<<<<<<<<<<<<<
 *     sh = new_SoundHandler()
 *     conH = new_ConnectionHandler()
 */
  __pyx_v_3ege_wh = new WindowHandler();

  /* "C:\Python26\Lib\site-packages\ege.pyx":324
 *     global conH
 *     wh = new_WindowHandler()
 *     sh = new_SoundHandler()             # <<<<<<<<<<<<<<
 *     conH = new_ConnectionHandler()
 * 
 */
  __pyx_v_3ege_sh = new SoundHandler();

  /* "C:\Python26\Lib\site-packages\ege.pyx":325
 *     wh = new_WindowHandler()
 *     sh = new_SoundHandler()
 *     conH = new_ConnectionHandler()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_3ege_conH = new ConnectionHandler();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":328
 * 
 * 
 * def externalCloseAll():             # <<<<<<<<<<<<<<
 *     del_WindowHandler(wh)
 *     del_SoundHandler(sh)
 */

static PyObject *__pyx_pf_3ege_externalCloseAll(PyObject *__pyx_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_externalCloseAll(PyObject *__pyx_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("externalCloseAll");
  __pyx_self = __pyx_self;

  /* "C:\Python26\Lib\site-packages\ege.pyx":329
 * 
 * def externalCloseAll():
 *     del_WindowHandler(wh)             # <<<<<<<<<<<<<<
 *     del_SoundHandler(sh)
 *     del_ConnectionHandler(conH)
 */
  delete(__pyx_v_3ege_wh);

  /* "C:\Python26\Lib\site-packages\ege.pyx":330
 * def externalCloseAll():
 *     del_WindowHandler(wh)
 *     del_SoundHandler(sh)             # <<<<<<<<<<<<<<
 *     del_ConnectionHandler(conH)
 * 
 */
  delete(__pyx_v_3ege_sh);

  /* "C:\Python26\Lib\site-packages\ege.pyx":331
 *     del_WindowHandler(wh)
 *     del_SoundHandler(sh)
 *     del_ConnectionHandler(conH)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete(__pyx_v_3ege_conH);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":334
 * 
 * 
 * def update():             # <<<<<<<<<<<<<<
 *     wh.cUpdate()
 *     sh.update()
 */

static PyObject *__pyx_pf_3ege_update(PyObject *__pyx_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_update(PyObject *__pyx_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("update");
  __pyx_self = __pyx_self;

  /* "C:\Python26\Lib\site-packages\ege.pyx":335
 * 
 * def update():
 *     wh.cUpdate()             # <<<<<<<<<<<<<<
 *     sh.update()
 * 
 */
  __pyx_v_3ege_wh->cUpdate();

  /* "C:\Python26\Lib\site-packages\ege.pyx":336
 * def update():
 *     wh.cUpdate()
 *     sh.update()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_3ege_sh->update();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":342
 * 
 * 
 * def newWindow(int width, int height, bint fullscreen = False):             # <<<<<<<<<<<<<<
 *     wh.cNewWindow(width, height, fullscreen)
 * 
 */

static PyObject *__pyx_pf_3ege_newWindow(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_3ege_newWindow(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_width;
  int __pyx_v_height;
  int __pyx_v_fullscreen;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_width,&__pyx_kp_height,&__pyx_kp_fullscreen,0};
  __Pyx_SetupRefcountContext("newWindow");
  __pyx_self = __pyx_self;
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_kp_width);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_kp_height);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("newWindow", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_fullscreen);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "newWindow") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_width = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_height = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[2]) {
      __pyx_v_fullscreen = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_fullscreen == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_fullscreen = 0;
    }
  } else {
    __pyx_v_fullscreen = 0;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3:
      __pyx_v_fullscreen = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_fullscreen == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2:
      __pyx_v_height = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_width = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("newWindow", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.newWindow");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":343
 * 
 * def newWindow(int width, int height, bint fullscreen = False):
 *     wh.cNewWindow(width, height, fullscreen)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_3ege_wh->cNewWindow(__pyx_v_width, __pyx_v_height, __pyx_v_fullscreen);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":346
 * 
 * 
 * def closeWindow():             # <<<<<<<<<<<<<<
 *     wh.cCloseWindow()
 * 
 */

static PyObject *__pyx_pf_3ege_closeWindow(PyObject *__pyx_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_closeWindow(PyObject *__pyx_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("closeWindow");
  __pyx_self = __pyx_self;

  /* "C:\Python26\Lib\site-packages\ege.pyx":347
 * 
 * def closeWindow():
 *     wh.cCloseWindow()             # <<<<<<<<<<<<<<
 * 
 * def setWindowSize(int width, int height):
 */
  __pyx_v_3ege_wh->cCloseWindow();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":349
 *     wh.cCloseWindow()
 * 
 * def setWindowSize(int width, int height):             # <<<<<<<<<<<<<<
 *     wh.cSetWindowSize(width, height)
 * 
 */

static PyObject *__pyx_pf_3ege_setWindowSize(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_3ege_setWindowSize(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_width;
  int __pyx_v_height;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_width,&__pyx_kp_height,0};
  __Pyx_SetupRefcountContext("setWindowSize");
  __pyx_self = __pyx_self;
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_kp_width);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_kp_height);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("setWindowSize", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "setWindowSize") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_width = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_height = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_width = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_height = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setWindowSize", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.setWindowSize");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":350
 * 
 * def setWindowSize(int width, int height):
 *     wh.cSetWindowSize(width, height)             # <<<<<<<<<<<<<<
 * 
 * def setFPS(int newFPS):
 */
  __pyx_v_3ege_wh->cSetWindowSize(__pyx_v_width, __pyx_v_height);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":352
 *     wh.cSetWindowSize(width, height)
 * 
 * def setFPS(int newFPS):             # <<<<<<<<<<<<<<
 *     wh.cSetFPS(newFPS)
 * 
 */

static PyObject *__pyx_pf_3ege_setFPS(PyObject *__pyx_self, PyObject *__pyx_arg_newFPS); /*proto*/
static PyObject *__pyx_pf_3ege_setFPS(PyObject *__pyx_self, PyObject *__pyx_arg_newFPS) {
  int __pyx_v_newFPS;
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("setFPS");
  __pyx_self = __pyx_self;
  assert(__pyx_arg_newFPS); {
    __pyx_v_newFPS = __Pyx_PyInt_AsInt(__pyx_arg_newFPS); if (unlikely((__pyx_v_newFPS == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.setFPS");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":353
 * 
 * def setFPS(int newFPS):
 *     wh.cSetFPS(newFPS)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_3ege_wh->cSetFPS(__pyx_v_newFPS);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":357
 * 
 * 
 * def showMouseCursor(bint show): # doesn't seem to work..             # <<<<<<<<<<<<<<
 *     wh.cShowMouseCursor(show)
 * 
 */

static PyObject *__pyx_pf_3ege_showMouseCursor(PyObject *__pyx_self, PyObject *__pyx_arg_show); /*proto*/
static PyObject *__pyx_pf_3ege_showMouseCursor(PyObject *__pyx_self, PyObject *__pyx_arg_show) {
  int __pyx_v_show;
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("showMouseCursor");
  __pyx_self = __pyx_self;
  assert(__pyx_arg_show); {
    __pyx_v_show = __Pyx_PyObject_IsTrue(__pyx_arg_show); if (unlikely((__pyx_v_show == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.showMouseCursor");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":358
 * 
 * def showMouseCursor(bint show): # doesn't seem to work..
 *     wh.cShowMouseCursor(show)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_3ege_wh->cShowMouseCursor(__pyx_v_show);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":362
 * 
 * 
 * def drawPoints(coords, color, float size = 1.0, bint antiAliasing = False):             # <<<<<<<<<<<<<<
 * 
 *     cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 */

static PyObject *__pyx_pf_3ege_drawPoints(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_3ege_drawPoints(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_coords = 0;
  PyObject *__pyx_v_color = 0;
  float __pyx_v_size;
  int __pyx_v_antiAliasing;
  PyArrayObject *__pyx_v_newCoords = 0;
  double *__pyx_v_cCoords;
  int __pyx_v_ndim;
  int __pyx_v_shape;
  int __pyx_v_dim;
  int __pyx_v_colorLength;
  unsigned char *__pyx_v_arrayColor;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_1 = 0;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  unsigned char __pyx_t_6;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_coords,&__pyx_kp_color,&__pyx_kp_size,&__pyx_kp_antiAliasing,0};
  __Pyx_SetupRefcountContext("drawPoints");
  __pyx_self = __pyx_self;
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_kp_coords);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_kp_color);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("drawPoints", 0, 2, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_size);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_antiAliasing);
        if (unlikely(value)) { values[3] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "drawPoints") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_coords = values[0];
    __pyx_v_color = values[1];
    if (values[2]) {
      __pyx_v_size = __pyx_PyFloat_AsDouble(values[2]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_size = ((float)1.0);
    }
    if (values[3]) {
      __pyx_v_antiAliasing = __Pyx_PyObject_IsTrue(values[3]); if (unlikely((__pyx_v_antiAliasing == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_antiAliasing = 0;
    }
  } else {
    __pyx_v_size = ((float)1.0);
    __pyx_v_antiAliasing = 0;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4:
      __pyx_v_antiAliasing = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_antiAliasing == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3:
      __pyx_v_size = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2:
      __pyx_v_color = PyTuple_GET_ITEM(__pyx_args, 1);
      __pyx_v_coords = PyTuple_GET_ITEM(__pyx_args, 0);
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("drawPoints", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.drawPoints");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":364
 * def drawPoints(coords, color, float size = 1.0, bint antiAliasing = False):
 * 
 *     cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)             # <<<<<<<<<<<<<<
 * 
 *     cdef double *cCoords = <double *>newCoords.data
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_numpy); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyObject_GetAttr(__pyx_1, __pyx_kp_array); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_v_coords);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_coords);
  __Pyx_GIVEREF(__pyx_v_coords);
  __pyx_1 = PyDict_New(); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_1));
  if (PyDict_SetItem(__pyx_1, __pyx_kp_dtype, ((PyObject *)((PyObject*)&PyFloat_Type))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = PyEval_CallObjectWithKeywords(__pyx_t_1, ((PyObject *)__pyx_t_2), ((PyObject *)__pyx_1)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_1)); __pyx_1 = 0;
  if (!(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_newCoords = ((PyArrayObject *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":366
 *     cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 * 
 *     cdef double *cCoords = <double *>newCoords.data             # <<<<<<<<<<<<<<
 *     cdef int ndim = newCoords.ndim
 *     cdef int shape = newCoords.shape[0]
 */
  __pyx_v_cCoords = ((double *)__pyx_v_newCoords->data);

  /* "C:\Python26\Lib\site-packages\ege.pyx":367
 * 
 *     cdef double *cCoords = <double *>newCoords.data
 *     cdef int ndim = newCoords.ndim             # <<<<<<<<<<<<<<
 *     cdef int shape = newCoords.shape[0]
 *     cdef int dim
 */
  __pyx_v_ndim = __pyx_v_newCoords->nd;

  /* "C:\Python26\Lib\site-packages\ege.pyx":368
 *     cdef double *cCoords = <double *>newCoords.data
 *     cdef int ndim = newCoords.ndim
 *     cdef int shape = newCoords.shape[0]             # <<<<<<<<<<<<<<
 *     cdef int dim
 *     if ndim == 1:	# I really don't lik this, there gotta be an easier way...
 */
  __pyx_v_shape = (__pyx_v_newCoords->dimensions[0]);

  /* "C:\Python26\Lib\site-packages\ege.pyx":370
 *     cdef int shape = newCoords.shape[0]
 *     cdef int dim
 *     if ndim == 1:	# I really don't lik this, there gotta be an easier way...             # <<<<<<<<<<<<<<
 *         dim = 1
 *     else:
 */
  __pyx_t_4 = (__pyx_v_ndim == 1);
  if (__pyx_t_4) {

    /* "C:\Python26\Lib\site-packages\ege.pyx":371
 *     cdef int dim
 *     if ndim == 1:	# I really don't lik this, there gotta be an easier way...
 *         dim = 1             # <<<<<<<<<<<<<<
 *     else:
 *         dim = shape
 */
    __pyx_v_dim = 1;
    goto __pyx_L6;
  }
  /*else*/ {

    /* "C:\Python26\Lib\site-packages\ege.pyx":373
 *         dim = 1
 *     else:
 *         dim = shape             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_dim = __pyx_v_shape;
  }
  __pyx_L6:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":376
 * 
 * 
 *     cdef int colorLength = len(color)             # <<<<<<<<<<<<<<
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *     arrayColor[0] = color[0]
 */
  __pyx_t_5 = PyObject_Length(__pyx_v_color); if (unlikely(__pyx_t_5 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_colorLength = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":377
 * 
 *     cdef int colorLength = len(color)
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))             # <<<<<<<<<<<<<<
 *     arrayColor[0] = color[0]
 *     arrayColor[1] = color[1]
 */
  __pyx_v_arrayColor = ((unsigned char *)malloc((4 * (sizeof(unsigned char)))));

  /* "C:\Python26\Lib\site-packages\ege.pyx":378
 *     cdef int colorLength = len(color)
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *     arrayColor[0] = color[0]             # <<<<<<<<<<<<<<
 *     arrayColor[1] = color[1]
 *     arrayColor[2] = color[2]
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 0, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 378; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_6 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_6 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 378; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[0]) = __pyx_t_6;

  /* "C:\Python26\Lib\site-packages\ege.pyx":379
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *     arrayColor[0] = color[0]
 *     arrayColor[1] = color[1]             # <<<<<<<<<<<<<<
 *     arrayColor[2] = color[2]
 *     if( colorLength == 3):
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 1, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_6 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_6 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[1]) = __pyx_t_6;

  /* "C:\Python26\Lib\site-packages\ege.pyx":380
 *     arrayColor[0] = color[0]
 *     arrayColor[1] = color[1]
 *     arrayColor[2] = color[2]             # <<<<<<<<<<<<<<
 *     if( colorLength == 3):
 *         arrayColor[3] = 255
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 2, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_6 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_6 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[2]) = __pyx_t_6;

  /* "C:\Python26\Lib\site-packages\ege.pyx":381
 *     arrayColor[1] = color[1]
 *     arrayColor[2] = color[2]
 *     if( colorLength == 3):             # <<<<<<<<<<<<<<
 *         arrayColor[3] = 255
 *     elif( colorLength == 4):
 */
  switch (__pyx_v_colorLength) {
    case 3:

    /* "C:\Python26\Lib\site-packages\ege.pyx":382
 *     arrayColor[2] = color[2]
 *     if( colorLength == 3):
 *         arrayColor[3] = 255             # <<<<<<<<<<<<<<
 *     elif( colorLength == 4):
 *         arrayColor[3] = color[3]
 */
    (__pyx_v_arrayColor[3]) = 255;
    break;

    /* "C:\Python26\Lib\site-packages\ege.pyx":383
 *     if( colorLength == 3):
 *         arrayColor[3] = 255
 *     elif( colorLength == 4):             # <<<<<<<<<<<<<<
 *         arrayColor[3] = color[3]
 *     #else:
 */
    case 4:

    /* "C:\Python26\Lib\site-packages\ege.pyx":384
 *         arrayColor[3] = 255
 *     elif( colorLength == 4):
 *         arrayColor[3] = color[3]             # <<<<<<<<<<<<<<
 *     #else:
 *     #    kasta exception
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 3, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_6 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_6 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[3]) = __pyx_t_6;
    break;
  }

  /* "C:\Python26\Lib\site-packages\ege.pyx":388
 *     #    kasta exception
 * 
 *     wh.cDrawPoints(cCoords, dim, arrayColor, size, antiAliasing)             # <<<<<<<<<<<<<<
 *     free(arrayColor)
 * 
 */
  __pyx_v_3ege_wh->cDrawPoints(__pyx_v_cCoords, __pyx_v_dim, __pyx_v_arrayColor, __pyx_v_size, __pyx_v_antiAliasing);

  /* "C:\Python26\Lib\site-packages\ege.pyx":389
 * 
 *     wh.cDrawPoints(cCoords, dim, arrayColor, size, antiAliasing)
 *     free(arrayColor)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  free(__pyx_v_arrayColor);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_1);
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("ege.drawPoints");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_newCoords);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":393
 * 
 * 
 * def drawLines(coords, color, float width = 1, bint loop = False, stipple = False, bint antiAliasing = False):             # <<<<<<<<<<<<<<
 * 
 *     cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 */

static PyObject *__pyx_pf_3ege_drawLines(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_3ege_drawLines(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_coords = 0;
  PyObject *__pyx_v_color = 0;
  float __pyx_v_width;
  int __pyx_v_loop;
  PyObject *__pyx_v_stipple = 0;
  int __pyx_v_antiAliasing;
  PyArrayObject *__pyx_v_newCoords = 0;
  double *__pyx_v_cCoords;
  int __pyx_v_dim;
  int __pyx_v_colorLength;
  unsigned char *__pyx_v_arrayColor;
  PyObject *__pyx_v_stippleFactor;
  PyObject *__pyx_v_stipplePattern;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_1 = 0;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  unsigned char __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_coords,&__pyx_kp_color,&__pyx_kp_width,&__pyx_kp_loop,&__pyx_kp_stipple,&__pyx_kp_antiAliasing,0};
  __Pyx_SetupRefcountContext("drawLines");
  __pyx_self = __pyx_self;
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[6] = {0,0,0,0,0,0};
    values[4] = __pyx_k_71;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_kp_coords);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_kp_color);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("drawLines", 0, 2, 6, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_width);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_loop);
        if (unlikely(value)) { values[3] = value; kw_args--; }
      }
      case  4:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_stipple);
        if (unlikely(value)) { values[4] = value; kw_args--; }
      }
      case  5:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_antiAliasing);
        if (unlikely(value)) { values[5] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "drawLines") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_coords = values[0];
    __pyx_v_color = values[1];
    if (values[2]) {
      __pyx_v_width = __pyx_PyFloat_AsDouble(values[2]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_width = ((float)1);
    }
    if (values[3]) {
      __pyx_v_loop = __Pyx_PyObject_IsTrue(values[3]); if (unlikely((__pyx_v_loop == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_loop = 0;
    }
    __pyx_v_stipple = values[4];
    if (values[5]) {
      __pyx_v_antiAliasing = __Pyx_PyObject_IsTrue(values[5]); if (unlikely((__pyx_v_antiAliasing == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_antiAliasing = 0;
    }
  } else {
    __pyx_v_width = ((float)1);
    __pyx_v_loop = 0;
    __pyx_v_stipple = __pyx_k_71;
    __pyx_v_antiAliasing = 0;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  6:
      __pyx_v_antiAliasing = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 5)); if (unlikely((__pyx_v_antiAliasing == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  5:
      __pyx_v_stipple = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4:
      __pyx_v_loop = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_loop == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3:
      __pyx_v_width = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2:
      __pyx_v_color = PyTuple_GET_ITEM(__pyx_args, 1);
      __pyx_v_coords = PyTuple_GET_ITEM(__pyx_args, 0);
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("drawLines", 0, 2, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.drawLines");
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_stippleFactor = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_stipplePattern = Py_None; __Pyx_INCREF(Py_None);

  /* "C:\Python26\Lib\site-packages\ege.pyx":395
 * def drawLines(coords, color, float width = 1, bint loop = False, stipple = False, bint antiAliasing = False):
 * 
 *     cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)             # <<<<<<<<<<<<<<
 * 
 *     cdef double *cCoords = <double *>newCoords.data
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_numpy); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyObject_GetAttr(__pyx_1, __pyx_kp_array); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_v_coords);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_coords);
  __Pyx_GIVEREF(__pyx_v_coords);
  __pyx_1 = PyDict_New(); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_1));
  if (PyDict_SetItem(__pyx_1, __pyx_kp_dtype, ((PyObject *)((PyObject*)&PyFloat_Type))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = PyEval_CallObjectWithKeywords(__pyx_t_1, ((PyObject *)__pyx_t_2), ((PyObject *)__pyx_1)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_1)); __pyx_1 = 0;
  if (!(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_newCoords = ((PyArrayObject *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":397
 *     cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 * 
 *     cdef double *cCoords = <double *>newCoords.data             # <<<<<<<<<<<<<<
 *     cdef int dim = newCoords.shape[0]
 * 
 */
  __pyx_v_cCoords = ((double *)__pyx_v_newCoords->data);

  /* "C:\Python26\Lib\site-packages\ege.pyx":398
 * 
 *     cdef double *cCoords = <double *>newCoords.data
 *     cdef int dim = newCoords.shape[0]             # <<<<<<<<<<<<<<
 * 
 *     cdef int colorLength = len(color)
 */
  __pyx_v_dim = (__pyx_v_newCoords->dimensions[0]);

  /* "C:\Python26\Lib\site-packages\ege.pyx":400
 *     cdef int dim = newCoords.shape[0]
 * 
 *     cdef int colorLength = len(color)             # <<<<<<<<<<<<<<
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *     arrayColor[0] = color[0]
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_color); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_colorLength = __pyx_t_4;

  /* "C:\Python26\Lib\site-packages\ege.pyx":401
 * 
 *     cdef int colorLength = len(color)
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))             # <<<<<<<<<<<<<<
 *     arrayColor[0] = color[0]
 *     arrayColor[1] = color[1]
 */
  __pyx_v_arrayColor = ((unsigned char *)malloc((4 * (sizeof(unsigned char)))));

  /* "C:\Python26\Lib\site-packages\ege.pyx":402
 *     cdef int colorLength = len(color)
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *     arrayColor[0] = color[0]             # <<<<<<<<<<<<<<
 *     arrayColor[1] = color[1]
 *     arrayColor[2] = color[2]
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 0, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[0]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":403
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *     arrayColor[0] = color[0]
 *     arrayColor[1] = color[1]             # <<<<<<<<<<<<<<
 *     arrayColor[2] = color[2]
 *     if( colorLength == 3):
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 1, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[1]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":404
 *     arrayColor[0] = color[0]
 *     arrayColor[1] = color[1]
 *     arrayColor[2] = color[2]             # <<<<<<<<<<<<<<
 *     if( colorLength == 3):
 *         arrayColor[3] = 255
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 2, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[2]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":405
 *     arrayColor[1] = color[1]
 *     arrayColor[2] = color[2]
 *     if( colorLength == 3):             # <<<<<<<<<<<<<<
 *         arrayColor[3] = 255
 *     elif( colorLength == 4):
 */
  switch (__pyx_v_colorLength) {
    case 3:

    /* "C:\Python26\Lib\site-packages\ege.pyx":406
 *     arrayColor[2] = color[2]
 *     if( colorLength == 3):
 *         arrayColor[3] = 255             # <<<<<<<<<<<<<<
 *     elif( colorLength == 4):
 *         arrayColor[3] = color[3]
 */
    (__pyx_v_arrayColor[3]) = 255;
    break;

    /* "C:\Python26\Lib\site-packages\ege.pyx":407
 *     if( colorLength == 3):
 *         arrayColor[3] = 255
 *     elif( colorLength == 4):             # <<<<<<<<<<<<<<
 *         arrayColor[3] = color[3]
 *     #else:
 */
    case 4:

    /* "C:\Python26\Lib\site-packages\ege.pyx":408
 *         arrayColor[3] = 255
 *     elif( colorLength == 4):
 *         arrayColor[3] = color[3]             # <<<<<<<<<<<<<<
 *     #else:
 *     #    kasta exception
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 3, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[3]) = __pyx_t_5;
    break;
  }

  /* "C:\Python26\Lib\site-packages\ege.pyx":412
 *     #    kasta exception
 * 
 *     if( stipple and len(stipple)==2 ):             # <<<<<<<<<<<<<<
 *         stippleFactor = stipple[0]
 *         stipplePattern = stipple[1]
 */
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_stipple); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_6) {
    __pyx_t_4 = PyObject_Length(__pyx_v_stipple); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_7 = (__pyx_t_4 == 2);
    __pyx_t_8 = __pyx_t_7;
  } else {
    __pyx_t_8 = __pyx_t_6;
  }
  if (__pyx_t_8) {

    /* "C:\Python26\Lib\site-packages\ege.pyx":413
 * 
 *     if( stipple and len(stipple)==2 ):
 *         stippleFactor = stipple[0]             # <<<<<<<<<<<<<<
 *         stipplePattern = stipple[1]
 *     else:    # Aer so illa tvungen att ge dessa ett vaerde...
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_stipple, 0, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 413; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __Pyx_DECREF(__pyx_v_stippleFactor);
    __pyx_v_stippleFactor = __pyx_1;
    __pyx_1 = 0;

    /* "C:\Python26\Lib\site-packages\ege.pyx":414
 *     if( stipple and len(stipple)==2 ):
 *         stippleFactor = stipple[0]
 *         stipplePattern = stipple[1]             # <<<<<<<<<<<<<<
 *     else:    # Aer so illa tvungen att ge dessa ett vaerde...
 *         stippleFactor = 1
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_stipple, 1, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __Pyx_DECREF(__pyx_v_stipplePattern);
    __pyx_v_stipplePattern = __pyx_1;
    __pyx_1 = 0;
    goto __pyx_L6;
  }
  /*else*/ {

    /* "C:\Python26\Lib\site-packages\ege.pyx":416
 *         stipplePattern = stipple[1]
 *     else:    # Aer so illa tvungen att ge dessa ett vaerde...
 *         stippleFactor = 1             # <<<<<<<<<<<<<<
 *         stipplePattern = 0xFFFF
 * 
 */
    __Pyx_INCREF(__pyx_int_1);
    __Pyx_DECREF(__pyx_v_stippleFactor);
    __pyx_v_stippleFactor = __pyx_int_1;

    /* "C:\Python26\Lib\site-packages\ege.pyx":417
 *     else:    # Aer so illa tvungen att ge dessa ett vaerde...
 *         stippleFactor = 1
 *         stipplePattern = 0xFFFF             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __Pyx_INCREF(__pyx_int_0xFFFF);
    __Pyx_DECREF(__pyx_v_stipplePattern);
    __pyx_v_stipplePattern = __pyx_int_0xFFFF;
  }
  __pyx_L6:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":420
 * 
 * 
 *     wh.cDrawLines(cCoords, dim, arrayColor, width, loop, stipple, stippleFactor, stipplePattern, antiAliasing)             # <<<<<<<<<<<<<<
 *     free(arrayColor)
 * 
 */
  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_v_stipple); if (unlikely((__pyx_t_8 == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_9 = __Pyx_PyInt_AsInt(__pyx_v_stippleFactor); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_10 = __Pyx_PyInt_AsInt(__pyx_v_stipplePattern); if (unlikely((__pyx_t_10 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_3ege_wh->cDrawLines(__pyx_v_cCoords, __pyx_v_dim, __pyx_v_arrayColor, __pyx_v_width, __pyx_v_loop, __pyx_t_8, __pyx_t_9, __pyx_t_10, __pyx_v_antiAliasing);

  /* "C:\Python26\Lib\site-packages\ege.pyx":421
 * 
 *     wh.cDrawLines(cCoords, dim, arrayColor, width, loop, stipple, stippleFactor, stipplePattern, antiAliasing)
 *     free(arrayColor)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  free(__pyx_v_arrayColor);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_1);
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("ege.drawLines");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_newCoords);
  __Pyx_DECREF(__pyx_v_stippleFactor);
  __Pyx_DECREF(__pyx_v_stipplePattern);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":425
 * 
 * 
 * def drawTriangles(coords, color, int form = SEPARATE):             # <<<<<<<<<<<<<<
 * 
 *     cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 */

static PyObject *__pyx_pf_3ege_drawTriangles(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_3ege_drawTriangles(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_coords = 0;
  PyObject *__pyx_v_color = 0;
  int __pyx_v_form;
  PyArrayObject *__pyx_v_newCoords = 0;
  double *__pyx_v_cCoords;
  int __pyx_v_dim;
  int __pyx_v_colorLength;
  unsigned char *__pyx_v_arrayColor;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_1 = 0;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  unsigned char __pyx_t_5;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_coords,&__pyx_kp_color,&__pyx_kp_form,0};
  __Pyx_SetupRefcountContext("drawTriangles");
  __pyx_self = __pyx_self;
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_kp_coords);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_kp_color);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("drawTriangles", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_form);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "drawTriangles") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_coords = values[0];
    __pyx_v_color = values[1];
    if (values[2]) {
      __pyx_v_form = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_form == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_form = __pyx_k_72;
    }
  } else {
    __pyx_v_form = __pyx_k_72;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3:
      __pyx_v_form = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_form == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2:
      __pyx_v_color = PyTuple_GET_ITEM(__pyx_args, 1);
      __pyx_v_coords = PyTuple_GET_ITEM(__pyx_args, 0);
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("drawTriangles", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.drawTriangles");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":427
 * def drawTriangles(coords, color, int form = SEPARATE):
 * 
 *     cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)             # <<<<<<<<<<<<<<
 * 
 *     cdef double *cCoords = <double *>newCoords.data
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_numpy); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyObject_GetAttr(__pyx_1, __pyx_kp_array); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_v_coords);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_coords);
  __Pyx_GIVEREF(__pyx_v_coords);
  __pyx_1 = PyDict_New(); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_1));
  if (PyDict_SetItem(__pyx_1, __pyx_kp_dtype, ((PyObject *)((PyObject*)&PyFloat_Type))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = PyEval_CallObjectWithKeywords(__pyx_t_1, ((PyObject *)__pyx_t_2), ((PyObject *)__pyx_1)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_1)); __pyx_1 = 0;
  if (!(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_newCoords = ((PyArrayObject *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":429
 *     cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 * 
 *     cdef double *cCoords = <double *>newCoords.data             # <<<<<<<<<<<<<<
 *     cdef int dim = newCoords.shape[0]
 * 
 */
  __pyx_v_cCoords = ((double *)__pyx_v_newCoords->data);

  /* "C:\Python26\Lib\site-packages\ege.pyx":430
 * 
 *     cdef double *cCoords = <double *>newCoords.data
 *     cdef int dim = newCoords.shape[0]             # <<<<<<<<<<<<<<
 * 
 *     cdef int colorLength = len(color)
 */
  __pyx_v_dim = (__pyx_v_newCoords->dimensions[0]);

  /* "C:\Python26\Lib\site-packages\ege.pyx":432
 *     cdef int dim = newCoords.shape[0]
 * 
 *     cdef int colorLength = len(color)             # <<<<<<<<<<<<<<
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *     arrayColor[0] = color[0]
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_color); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_colorLength = __pyx_t_4;

  /* "C:\Python26\Lib\site-packages\ege.pyx":433
 * 
 *     cdef int colorLength = len(color)
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))             # <<<<<<<<<<<<<<
 *     arrayColor[0] = color[0]
 *     arrayColor[1] = color[1]
 */
  __pyx_v_arrayColor = ((unsigned char *)malloc((4 * (sizeof(unsigned char)))));

  /* "C:\Python26\Lib\site-packages\ege.pyx":434
 *     cdef int colorLength = len(color)
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *     arrayColor[0] = color[0]             # <<<<<<<<<<<<<<
 *     arrayColor[1] = color[1]
 *     arrayColor[2] = color[2]
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 0, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[0]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":435
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *     arrayColor[0] = color[0]
 *     arrayColor[1] = color[1]             # <<<<<<<<<<<<<<
 *     arrayColor[2] = color[2]
 *     if( colorLength == 3):
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 1, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[1]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":436
 *     arrayColor[0] = color[0]
 *     arrayColor[1] = color[1]
 *     arrayColor[2] = color[2]             # <<<<<<<<<<<<<<
 *     if( colorLength == 3):
 *         arrayColor[3] = 255
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 2, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[2]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":437
 *     arrayColor[1] = color[1]
 *     arrayColor[2] = color[2]
 *     if( colorLength == 3):             # <<<<<<<<<<<<<<
 *         arrayColor[3] = 255
 *     elif( colorLength == 4):
 */
  switch (__pyx_v_colorLength) {
    case 3:

    /* "C:\Python26\Lib\site-packages\ege.pyx":438
 *     arrayColor[2] = color[2]
 *     if( colorLength == 3):
 *         arrayColor[3] = 255             # <<<<<<<<<<<<<<
 *     elif( colorLength == 4):
 *         arrayColor[3] = color[3]
 */
    (__pyx_v_arrayColor[3]) = 255;
    break;

    /* "C:\Python26\Lib\site-packages\ege.pyx":439
 *     if( colorLength == 3):
 *         arrayColor[3] = 255
 *     elif( colorLength == 4):             # <<<<<<<<<<<<<<
 *         arrayColor[3] = color[3]
 *     #else:
 */
    case 4:

    /* "C:\Python26\Lib\site-packages\ege.pyx":440
 *         arrayColor[3] = 255
 *     elif( colorLength == 4):
 *         arrayColor[3] = color[3]             # <<<<<<<<<<<<<<
 *     #else:
 *     #    kasta exception
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 3, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[3]) = __pyx_t_5;
    break;
  }

  /* "C:\Python26\Lib\site-packages\ege.pyx":444
 *     #    kasta exception
 * 
 *     wh.cDrawTriangles(cCoords, dim, arrayColor, form)             # <<<<<<<<<<<<<<
 *     free(arrayColor)
 * 
 */
  __pyx_v_3ege_wh->cDrawTriangles(__pyx_v_cCoords, __pyx_v_dim, __pyx_v_arrayColor, __pyx_v_form);

  /* "C:\Python26\Lib\site-packages\ege.pyx":445
 * 
 *     wh.cDrawTriangles(cCoords, dim, arrayColor, form)
 *     free(arrayColor)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  free(__pyx_v_arrayColor);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_1);
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("ege.drawTriangles");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_newCoords);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":449
 * 
 * 
 * def drawEllipse(coords, color, double a, double b, double rotate):             # <<<<<<<<<<<<<<
 *     cdef double x = coords[0]
 *     cdef double y = coords[1]
 */

static PyObject *__pyx_pf_3ege_drawEllipse(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_3ege_drawEllipse(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_coords = 0;
  PyObject *__pyx_v_color = 0;
  double __pyx_v_a;
  double __pyx_v_b;
  double __pyx_v_rotate;
  double __pyx_v_x;
  double __pyx_v_y;
  int __pyx_v_colorLength;
  unsigned char *__pyx_v_arrayColor;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_1 = 0;
  double __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  unsigned char __pyx_t_3;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_coords,&__pyx_kp_color,&__pyx_kp_a,&__pyx_kp_b,&__pyx_kp_rotate,0};
  __Pyx_SetupRefcountContext("drawEllipse");
  __pyx_self = __pyx_self;
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[5] = {0,0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_kp_coords);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_kp_color);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("drawEllipse", 1, 5, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_kp_a);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("drawEllipse", 1, 5, 5, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_kp_b);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("drawEllipse", 1, 5, 5, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  4:
      values[4] = PyDict_GetItem(__pyx_kwds, __pyx_kp_rotate);
      if (likely(values[4])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("drawEllipse", 1, 5, 5, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "drawEllipse") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_coords = values[0];
    __pyx_v_color = values[1];
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[2]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[3]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_rotate = __pyx_PyFloat_AsDouble(values[4]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_coords = PyTuple_GET_ITEM(__pyx_args, 0);
    __pyx_v_color = PyTuple_GET_ITEM(__pyx_args, 1);
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_rotate = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 4)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("drawEllipse", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.drawEllipse");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":450
 * 
 * def drawEllipse(coords, color, double a, double b, double rotate):
 *     cdef double x = coords[0]             # <<<<<<<<<<<<<<
 *     cdef double y = coords[1]
 * 
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_coords, 0, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_v_x = __pyx_t_1;

  /* "C:\Python26\Lib\site-packages\ege.pyx":451
 * def drawEllipse(coords, color, double a, double b, double rotate):
 *     cdef double x = coords[0]
 *     cdef double y = coords[1]             # <<<<<<<<<<<<<<
 * 
 *     cdef int colorLength = len(color)
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_coords, 1, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_v_y = __pyx_t_1;

  /* "C:\Python26\Lib\site-packages\ege.pyx":453
 *     cdef double y = coords[1]
 * 
 *     cdef int colorLength = len(color)             # <<<<<<<<<<<<<<
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *     arrayColor[0] = color[0]
 */
  __pyx_t_2 = PyObject_Length(__pyx_v_color); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_colorLength = __pyx_t_2;

  /* "C:\Python26\Lib\site-packages\ege.pyx":454
 * 
 *     cdef int colorLength = len(color)
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))             # <<<<<<<<<<<<<<
 *     arrayColor[0] = color[0]
 *     arrayColor[1] = color[1]
 */
  __pyx_v_arrayColor = ((unsigned char *)malloc((4 * (sizeof(unsigned char)))));

  /* "C:\Python26\Lib\site-packages\ege.pyx":455
 *     cdef int colorLength = len(color)
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *     arrayColor[0] = color[0]             # <<<<<<<<<<<<<<
 *     arrayColor[1] = color[1]
 *     arrayColor[2] = color[2]
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 0, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_3 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_3 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[0]) = __pyx_t_3;

  /* "C:\Python26\Lib\site-packages\ege.pyx":456
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *     arrayColor[0] = color[0]
 *     arrayColor[1] = color[1]             # <<<<<<<<<<<<<<
 *     arrayColor[2] = color[2]
 *     if( colorLength == 3):
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 1, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_3 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_3 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[1]) = __pyx_t_3;

  /* "C:\Python26\Lib\site-packages\ege.pyx":457
 *     arrayColor[0] = color[0]
 *     arrayColor[1] = color[1]
 *     arrayColor[2] = color[2]             # <<<<<<<<<<<<<<
 *     if( colorLength == 3):
 *         arrayColor[3] = 255
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 2, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_3 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_3 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[2]) = __pyx_t_3;

  /* "C:\Python26\Lib\site-packages\ege.pyx":458
 *     arrayColor[1] = color[1]
 *     arrayColor[2] = color[2]
 *     if( colorLength == 3):             # <<<<<<<<<<<<<<
 *         arrayColor[3] = 255
 *     elif( colorLength == 4):
 */
  switch (__pyx_v_colorLength) {
    case 3:

    /* "C:\Python26\Lib\site-packages\ege.pyx":459
 *     arrayColor[2] = color[2]
 *     if( colorLength == 3):
 *         arrayColor[3] = 255             # <<<<<<<<<<<<<<
 *     elif( colorLength == 4):
 *         arrayColor[3] = color[3]
 */
    (__pyx_v_arrayColor[3]) = 255;
    break;

    /* "C:\Python26\Lib\site-packages\ege.pyx":460
 *     if( colorLength == 3):
 *         arrayColor[3] = 255
 *     elif( colorLength == 4):             # <<<<<<<<<<<<<<
 *         arrayColor[3] = color[3]
 *     #else:
 */
    case 4:

    /* "C:\Python26\Lib\site-packages\ege.pyx":461
 *         arrayColor[3] = 255
 *     elif( colorLength == 4):
 *         arrayColor[3] = color[3]             # <<<<<<<<<<<<<<
 *     #else:
 *     #    kasta exception
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 3, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_3 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_3 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[3]) = __pyx_t_3;
    break;
  }

  /* "C:\Python26\Lib\site-packages\ege.pyx":465
 *     #    kasta exception
 * 
 *     wh.cDrawEllipse(x, y, a, b, rotate, arrayColor)             # <<<<<<<<<<<<<<
 *     free(arrayColor)
 * 
 */
  __pyx_v_3ege_wh->cDrawEllipse(__pyx_v_x, __pyx_v_y, __pyx_v_a, __pyx_v_b, __pyx_v_rotate, __pyx_v_arrayColor);

  /* "C:\Python26\Lib\site-packages\ege.pyx":466
 * 
 *     wh.cDrawEllipse(x, y, a, b, rotate, arrayColor)
 *     free(arrayColor)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  free(__pyx_v_arrayColor);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_1);
  __Pyx_AddTraceback("ege.drawEllipse");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":470
 * 
 * 
 * def drawPolygon(coords, color, int type = 0):             # <<<<<<<<<<<<<<
 *     cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 * 
 */

static PyObject *__pyx_pf_3ege_drawPolygon(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_3ege_drawPolygon(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_coords = 0;
  PyObject *__pyx_v_color = 0;
  int __pyx_v_type;
  PyArrayObject *__pyx_v_newCoords = 0;
  double *__pyx_v_cCoords;
  int __pyx_v_dim;
  int __pyx_v_colorLength;
  unsigned char *__pyx_v_arrayColor;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_1 = 0;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  unsigned char __pyx_t_5;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_coords,&__pyx_kp_color,&__pyx_kp_type,0};
  __Pyx_SetupRefcountContext("drawPolygon");
  __pyx_self = __pyx_self;
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_kp_coords);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_kp_color);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("drawPolygon", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_type);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "drawPolygon") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_coords = values[0];
    __pyx_v_color = values[1];
    if (values[2]) {
      __pyx_v_type = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_type == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_type = 0;
    }
  } else {
    __pyx_v_type = 0;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3:
      __pyx_v_type = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_type == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2:
      __pyx_v_color = PyTuple_GET_ITEM(__pyx_args, 1);
      __pyx_v_coords = PyTuple_GET_ITEM(__pyx_args, 0);
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("drawPolygon", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.drawPolygon");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":471
 * 
 * def drawPolygon(coords, color, int type = 0):
 *     cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)             # <<<<<<<<<<<<<<
 * 
 *     cdef double *cCoords = <double *>newCoords.data
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_numpy); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 471; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyObject_GetAttr(__pyx_1, __pyx_kp_array); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 471; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 471; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_v_coords);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_coords);
  __Pyx_GIVEREF(__pyx_v_coords);
  __pyx_1 = PyDict_New(); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 471; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_1));
  if (PyDict_SetItem(__pyx_1, __pyx_kp_dtype, ((PyObject *)((PyObject*)&PyFloat_Type))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 471; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = PyEval_CallObjectWithKeywords(__pyx_t_1, ((PyObject *)__pyx_t_2), ((PyObject *)__pyx_1)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 471; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_1)); __pyx_1 = 0;
  if (!(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 471; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_newCoords = ((PyArrayObject *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":473
 *     cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 * 
 *     cdef double *cCoords = <double *>newCoords.data             # <<<<<<<<<<<<<<
 *     cdef int dim = newCoords.shape[0]
 * 
 */
  __pyx_v_cCoords = ((double *)__pyx_v_newCoords->data);

  /* "C:\Python26\Lib\site-packages\ege.pyx":474
 * 
 *     cdef double *cCoords = <double *>newCoords.data
 *     cdef int dim = newCoords.shape[0]             # <<<<<<<<<<<<<<
 * 
 *     cdef int colorLength = len(color)
 */
  __pyx_v_dim = (__pyx_v_newCoords->dimensions[0]);

  /* "C:\Python26\Lib\site-packages\ege.pyx":476
 *     cdef int dim = newCoords.shape[0]
 * 
 *     cdef int colorLength = len(color)             # <<<<<<<<<<<<<<
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *     arrayColor[0] = color[0]
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_color); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_colorLength = __pyx_t_4;

  /* "C:\Python26\Lib\site-packages\ege.pyx":477
 * 
 *     cdef int colorLength = len(color)
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))             # <<<<<<<<<<<<<<
 *     arrayColor[0] = color[0]
 *     arrayColor[1] = color[1]
 */
  __pyx_v_arrayColor = ((unsigned char *)malloc((4 * (sizeof(unsigned char)))));

  /* "C:\Python26\Lib\site-packages\ege.pyx":478
 *     cdef int colorLength = len(color)
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *     arrayColor[0] = color[0]             # <<<<<<<<<<<<<<
 *     arrayColor[1] = color[1]
 *     arrayColor[2] = color[2]
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 0, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[0]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":479
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *     arrayColor[0] = color[0]
 *     arrayColor[1] = color[1]             # <<<<<<<<<<<<<<
 *     arrayColor[2] = color[2]
 *     if( colorLength == 3):
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 1, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[1]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":480
 *     arrayColor[0] = color[0]
 *     arrayColor[1] = color[1]
 *     arrayColor[2] = color[2]             # <<<<<<<<<<<<<<
 *     if( colorLength == 3):
 *         arrayColor[3] = 255
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 2, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[2]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":481
 *     arrayColor[1] = color[1]
 *     arrayColor[2] = color[2]
 *     if( colorLength == 3):             # <<<<<<<<<<<<<<
 *         arrayColor[3] = 255
 *     elif( colorLength == 4):
 */
  switch (__pyx_v_colorLength) {
    case 3:

    /* "C:\Python26\Lib\site-packages\ege.pyx":482
 *     arrayColor[2] = color[2]
 *     if( colorLength == 3):
 *         arrayColor[3] = 255             # <<<<<<<<<<<<<<
 *     elif( colorLength == 4):
 *         arrayColor[3] = color[3]
 */
    (__pyx_v_arrayColor[3]) = 255;
    break;

    /* "C:\Python26\Lib\site-packages\ege.pyx":483
 *     if( colorLength == 3):
 *         arrayColor[3] = 255
 *     elif( colorLength == 4):             # <<<<<<<<<<<<<<
 *         arrayColor[3] = color[3]
 *     #else:
 */
    case 4:

    /* "C:\Python26\Lib\site-packages\ege.pyx":484
 *         arrayColor[3] = 255
 *     elif( colorLength == 4):
 *         arrayColor[3] = color[3]             # <<<<<<<<<<<<<<
 *     #else:
 *     #    kasta exception
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 3, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[3]) = __pyx_t_5;
    break;
  }

  /* "C:\Python26\Lib\site-packages\ege.pyx":488
 *     #    kasta exception
 * 
 *     wh.cDrawPolygon(cCoords, dim, arrayColor)             # <<<<<<<<<<<<<<
 *     free(arrayColor)
 * 
 */
  __pyx_v_3ege_wh->cDrawPolygon(__pyx_v_cCoords, __pyx_v_dim, __pyx_v_arrayColor);

  /* "C:\Python26\Lib\site-packages\ege.pyx":489
 * 
 *     wh.cDrawPolygon(cCoords, dim, arrayColor)
 *     free(arrayColor)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  free(__pyx_v_arrayColor);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_1);
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("ege.drawPolygon");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_newCoords);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":492
 * 
 * 
 * def setClearColor(color):             # <<<<<<<<<<<<<<
 *     cdef int colorLength = len(color)
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 */

static PyObject *__pyx_pf_3ege_setClearColor(PyObject *__pyx_self, PyObject *__pyx_v_color); /*proto*/
static PyObject *__pyx_pf_3ege_setClearColor(PyObject *__pyx_self, PyObject *__pyx_v_color) {
  int __pyx_v_colorLength;
  unsigned char *__pyx_v_arrayColor;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_1 = 0;
  Py_ssize_t __pyx_t_1;
  unsigned char __pyx_t_2;
  __Pyx_SetupRefcountContext("setClearColor");
  __pyx_self = __pyx_self;

  /* "C:\Python26\Lib\site-packages\ege.pyx":493
 * 
 * def setClearColor(color):
 *     cdef int colorLength = len(color)             # <<<<<<<<<<<<<<
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *     arrayColor[0] = color[0]
 */
  __pyx_t_1 = PyObject_Length(__pyx_v_color); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_colorLength = __pyx_t_1;

  /* "C:\Python26\Lib\site-packages\ege.pyx":494
 * def setClearColor(color):
 *     cdef int colorLength = len(color)
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))             # <<<<<<<<<<<<<<
 *     arrayColor[0] = color[0]
 *     arrayColor[1] = color[1]
 */
  __pyx_v_arrayColor = ((unsigned char *)malloc((4 * (sizeof(unsigned char)))));

  /* "C:\Python26\Lib\site-packages\ege.pyx":495
 *     cdef int colorLength = len(color)
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *     arrayColor[0] = color[0]             # <<<<<<<<<<<<<<
 *     arrayColor[1] = color[1]
 *     arrayColor[2] = color[2]
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 0, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_2 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_2 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[0]) = __pyx_t_2;

  /* "C:\Python26\Lib\site-packages\ege.pyx":496
 *     cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *     arrayColor[0] = color[0]
 *     arrayColor[1] = color[1]             # <<<<<<<<<<<<<<
 *     arrayColor[2] = color[2]
 *     if( colorLength == 3):
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 1, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_2 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_2 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[1]) = __pyx_t_2;

  /* "C:\Python26\Lib\site-packages\ege.pyx":497
 *     arrayColor[0] = color[0]
 *     arrayColor[1] = color[1]
 *     arrayColor[2] = color[2]             # <<<<<<<<<<<<<<
 *     if( colorLength == 3):
 *         arrayColor[3] = 255
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 2, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_2 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_2 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[2]) = __pyx_t_2;

  /* "C:\Python26\Lib\site-packages\ege.pyx":498
 *     arrayColor[1] = color[1]
 *     arrayColor[2] = color[2]
 *     if( colorLength == 3):             # <<<<<<<<<<<<<<
 *         arrayColor[3] = 255
 *     elif( colorLength == 4):
 */
  switch (__pyx_v_colorLength) {
    case 3:

    /* "C:\Python26\Lib\site-packages\ege.pyx":499
 *     arrayColor[2] = color[2]
 *     if( colorLength == 3):
 *         arrayColor[3] = 255             # <<<<<<<<<<<<<<
 *     elif( colorLength == 4):
 *         arrayColor[3] = color[3]
 */
    (__pyx_v_arrayColor[3]) = 255;
    break;

    /* "C:\Python26\Lib\site-packages\ege.pyx":500
 *     if( colorLength == 3):
 *         arrayColor[3] = 255
 *     elif( colorLength == 4):             # <<<<<<<<<<<<<<
 *         arrayColor[3] = color[3]
 * 
 */
    case 4:

    /* "C:\Python26\Lib\site-packages\ege.pyx":501
 *         arrayColor[3] = 255
 *     elif( colorLength == 4):
 *         arrayColor[3] = color[3]             # <<<<<<<<<<<<<<
 * 
 *     wh.cSetClearColor(arrayColor)
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 3, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_2 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_2 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[3]) = __pyx_t_2;
    break;
  }

  /* "C:\Python26\Lib\site-packages\ege.pyx":503
 *         arrayColor[3] = color[3]
 * 
 *     wh.cSetClearColor(arrayColor)             # <<<<<<<<<<<<<<
 *     free(arrayColor)
 * 
 */
  __pyx_v_3ege_wh->cSetClearColor(__pyx_v_arrayColor);

  /* "C:\Python26\Lib\site-packages\ege.pyx":504
 * 
 *     wh.cSetClearColor(arrayColor)
 *     free(arrayColor)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  free(__pyx_v_arrayColor);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_1);
  __Pyx_AddTraceback("ege.setClearColor");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":507
 * 
 * 
 * def getMouseState():             # <<<<<<<<<<<<<<
 *     global wh
 *     cdef int x
 */

static PyObject *__pyx_pf_3ege_getMouseState(PyObject *__pyx_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_getMouseState(PyObject *__pyx_self, PyObject *unused) {
  int __pyx_v_x;
  int __pyx_v_y;
  PyObject *__pyx_v_left;
  PyObject *__pyx_v_right;
  PyObject *__pyx_v_middle;
  PyObject *__pyx_v_wheel;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_1 = 0;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_SetupRefcountContext("getMouseState");
  __pyx_self = __pyx_self;
  __pyx_v_left = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_right = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_middle = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_wheel = Py_None; __Pyx_INCREF(Py_None);

  /* "C:\Python26\Lib\site-packages\ege.pyx":511
 *     cdef int x
 *     cdef int y
 *     wh.cGetMousePos(&x, &y)             # <<<<<<<<<<<<<<
 *     left = wh.cGetMouseButton(MOUSE_BUTTON_LEFT)
 *     right = wh.cGetMouseButton(MOUSE_BUTTON_RIGHT)
 */
  __pyx_v_3ege_wh->cGetMousePos((&__pyx_v_x), (&__pyx_v_y));

  /* "C:\Python26\Lib\site-packages\ege.pyx":512
 *     cdef int y
 *     wh.cGetMousePos(&x, &y)
 *     left = wh.cGetMouseButton(MOUSE_BUTTON_LEFT)             # <<<<<<<<<<<<<<
 *     right = wh.cGetMouseButton(MOUSE_BUTTON_RIGHT)
 *     middle = wh.cGetMouseButton(MOUSE_BUTTON_MIDDLE)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_MOUSE_BUTTON_LEFT); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_1); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_3ege_wh->cGetMouseButton(__pyx_t_1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_v_left);
  __pyx_v_left = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":513
 *     wh.cGetMousePos(&x, &y)
 *     left = wh.cGetMouseButton(MOUSE_BUTTON_LEFT)
 *     right = wh.cGetMouseButton(MOUSE_BUTTON_RIGHT)             # <<<<<<<<<<<<<<
 *     middle = wh.cGetMouseButton(MOUSE_BUTTON_MIDDLE)
 *     wheel = wh.cGetMouseWheel()
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_MOUSE_BUTTON_RIGHT); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_1); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_3ege_wh->cGetMouseButton(__pyx_t_1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_v_right);
  __pyx_v_right = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":514
 *     left = wh.cGetMouseButton(MOUSE_BUTTON_LEFT)
 *     right = wh.cGetMouseButton(MOUSE_BUTTON_RIGHT)
 *     middle = wh.cGetMouseButton(MOUSE_BUTTON_MIDDLE)             # <<<<<<<<<<<<<<
 *     wheel = wh.cGetMouseWheel()
 *     return {"x" : x, "y" : y, "left" : left, "right" : right, "middle" : middle, "wheel" : wheel}
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_MOUSE_BUTTON_MIDDLE); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_1); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_3ege_wh->cGetMouseButton(__pyx_t_1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_v_middle);
  __pyx_v_middle = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":515
 *     right = wh.cGetMouseButton(MOUSE_BUTTON_RIGHT)
 *     middle = wh.cGetMouseButton(MOUSE_BUTTON_MIDDLE)
 *     wheel = wh.cGetMouseWheel()             # <<<<<<<<<<<<<<
 *     return {"x" : x, "y" : y, "left" : left, "right" : right, "middle" : middle, "wheel" : wheel}
 * 
 */
  __pyx_t_2 = PyInt_FromLong(__pyx_v_3ege_wh->cGetMouseWheel()); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 515; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_v_wheel);
  __pyx_v_wheel = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":516
 *     middle = wh.cGetMouseButton(MOUSE_BUTTON_MIDDLE)
 *     wheel = wh.cGetMouseWheel()
 *     return {"x" : x, "y" : y, "left" : left, "right" : right, "middle" : middle, "wheel" : wheel}             # <<<<<<<<<<<<<<
 * 
 * def getKey(key):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_1 = PyDict_New(); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_1));
  __pyx_t_2 = PyInt_FromLong(__pyx_v_x); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_1, __pyx_kp_91, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyInt_FromLong(__pyx_v_y); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_1, __pyx_kp_92, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_1, __pyx_kp_93, __pyx_v_left) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_1, __pyx_kp_94, __pyx_v_right) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_1, __pyx_kp_95, __pyx_v_middle) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_1, __pyx_kp_96, __pyx_v_wheel) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = ((PyObject *)__pyx_1);
  __pyx_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("ege.getMouseState");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_left);
  __Pyx_DECREF(__pyx_v_right);
  __Pyx_DECREF(__pyx_v_middle);
  __Pyx_DECREF(__pyx_v_wheel);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":518
 *     return {"x" : x, "y" : y, "left" : left, "right" : right, "middle" : middle, "wheel" : wheel}
 * 
 * def getKey(key):             # <<<<<<<<<<<<<<
 *     if isinstance(key, str):
 *         key = ord(key)
 */

static PyObject *__pyx_pf_3ege_getKey(PyObject *__pyx_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pf_3ege_getKey(PyObject *__pyx_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __Pyx_SetupRefcountContext("getKey");
  __pyx_self = __pyx_self;
  __Pyx_INCREF(__pyx_v_key);

  /* "C:\Python26\Lib\site-packages\ege.pyx":519
 * 
 * def getKey(key):
 *     if isinstance(key, str):             # <<<<<<<<<<<<<<
 *         key = ord(key)
 *     return wh.cGetKey(key)
 */
  __pyx_t_1 = PyObject_TypeCheck(__pyx_v_key, ((PyTypeObject *)((PyObject*)&PyString_Type))); 
  if (__pyx_t_1) {

    /* "C:\Python26\Lib\site-packages\ege.pyx":520
 * def getKey(key):
 *     if isinstance(key, str):
 *         key = ord(key)             # <<<<<<<<<<<<<<
 *     return wh.cGetKey(key)
 * 
 */
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_2));
    __Pyx_INCREF(__pyx_v_key);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_key);
    __Pyx_GIVEREF(__pyx_v_key);
    __pyx_t_3 = PyObject_Call(__pyx_builtin_ord, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_v_key);
    __pyx_v_key = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":521
 *     if isinstance(key, str):
 *         key = ord(key)
 *     return wh.cGetKey(key)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_4 = __Pyx_PyInt_AsInt(__pyx_v_key); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_3ege_wh->cGetKey(__pyx_t_4)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("ege.getKey");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_key);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":561
 * cdef class Image:	# test if an image can be generated from wh instead
 *     cdef c_Image *thisPtr
 *     def __cinit__(self, I, II = None, III = None, IV = None, V = None):             # <<<<<<<<<<<<<<
 *         cdef int width
 *         cdef int height
 */

static int __pyx_pf_3ege_5Image___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_3ege_5Image___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_I = 0;
  PyObject *__pyx_v_II = 0;
  PyObject *__pyx_v_III = 0;
  PyObject *__pyx_v_IV = 0;
  PyObject *__pyx_v_V = 0;
  int __pyx_v_width;
  int __pyx_v_height;
  int __pyx_v_colorLength;
  unsigned char *__pyx_v_arrayColor;
  PyObject *__pyx_v_color;
  int __pyx_r;
  PyObject *__pyx_1 = 0;
  int __pyx_t_1;
  char *__pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  unsigned char __pyx_t_5;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_I,&__pyx_kp_II,&__pyx_kp_III,&__pyx_kp_IV,&__pyx_kp_V,0};
  __Pyx_SetupRefcountContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[5] = {0,0,0,0,0};
    values[1] = Py_None;
    values[2] = Py_None;
    values[3] = Py_None;
    values[4] = Py_None;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_kp_I);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_II);
        if (unlikely(value)) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_III);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_IV);
        if (unlikely(value)) { values[3] = value; kw_args--; }
      }
      case  4:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_V);
        if (unlikely(value)) { values[4] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_I = values[0];
    __pyx_v_II = values[1];
    __pyx_v_III = values[2];
    __pyx_v_IV = values[3];
    __pyx_v_V = values[4];
  } else {
    __pyx_v_II = Py_None;
    __pyx_v_III = Py_None;
    __pyx_v_IV = Py_None;
    __pyx_v_V = Py_None;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: __pyx_v_V = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: __pyx_v_IV = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: __pyx_v_III = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: __pyx_v_II = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: __pyx_v_I = PyTuple_GET_ITEM(__pyx_args, 0);
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.Image.__cinit__");
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_color = Py_None; __Pyx_INCREF(Py_None);

  /* "C:\Python26\Lib\site-packages\ege.pyx":567
 *         cdef unsigned char *arrayColor
 * 
 *         if isinstance(I, str):             # <<<<<<<<<<<<<<
 *             if isinstance(II, int):        #(char *text, int size)
 *                 self.thisPtr = new_ImageIII( I, II )
 */
  __pyx_t_1 = PyObject_TypeCheck(__pyx_v_I, ((PyTypeObject *)((PyObject*)&PyString_Type))); 
  if (__pyx_t_1) {

    /* "C:\Python26\Lib\site-packages\ege.pyx":568
 * 
 *         if isinstance(I, str):
 *             if isinstance(II, int):        #(char *text, int size)             # <<<<<<<<<<<<<<
 *                 self.thisPtr = new_ImageIII( I, II )
 *                 return
 */
    __pyx_t_1 = PyObject_TypeCheck(__pyx_v_II, ((PyTypeObject *)((PyObject*)&PyInt_Type))); 
    if (__pyx_t_1) {

      /* "C:\Python26\Lib\site-packages\ege.pyx":569
 *         if isinstance(I, str):
 *             if isinstance(II, int):        #(char *text, int size)
 *                 self.thisPtr = new_ImageIII( I, II )             # <<<<<<<<<<<<<<
 *                 return
 *             else:        #(char *file)
 */
      __pyx_t_2 = __Pyx_PyBytes_AsString(__pyx_v_I); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_v_II); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      ((struct __pyx_obj_3ege_Image *)__pyx_v_self)->thisPtr = new Image(__pyx_t_2, __pyx_t_3);

      /* "C:\Python26\Lib\site-packages\ege.pyx":570
 *             if isinstance(II, int):        #(char *text, int size)
 *                 self.thisPtr = new_ImageIII( I, II )
 *                 return             # <<<<<<<<<<<<<<
 *             else:        #(char *file)
 *                 self.thisPtr = new_ImageII( I )
 */
      __pyx_r = 0;
      goto __pyx_L0;
      goto __pyx_L7;
    }
    /*else*/ {

      /* "C:\Python26\Lib\site-packages\ege.pyx":572
 *                 return
 *             else:        #(char *file)
 *                 self.thisPtr = new_ImageII( I )             # <<<<<<<<<<<<<<
 *                 return
 *         elif isinstance(I, int):        #(int width, int height, unsigned char *arrayColor)
 */
      __pyx_t_2 = __Pyx_PyBytes_AsString(__pyx_v_I); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      ((struct __pyx_obj_3ege_Image *)__pyx_v_self)->thisPtr = new Image(__pyx_t_2);

      /* "C:\Python26\Lib\site-packages\ege.pyx":573
 *             else:        #(char *file)
 *                 self.thisPtr = new_ImageII( I )
 *                 return             # <<<<<<<<<<<<<<
 *         elif isinstance(I, int):        #(int width, int height, unsigned char *arrayColor)
 *             width = I
 */
      __pyx_r = 0;
      goto __pyx_L0;
    }
    __pyx_L7:;
    goto __pyx_L6;
  }

  /* "C:\Python26\Lib\site-packages\ege.pyx":574
 *                 self.thisPtr = new_ImageII( I )
 *                 return
 *         elif isinstance(I, int):        #(int width, int height, unsigned char *arrayColor)             # <<<<<<<<<<<<<<
 *             width = I
 *             height = II
 */
  __pyx_t_1 = PyObject_TypeCheck(__pyx_v_I, ((PyTypeObject *)((PyObject*)&PyInt_Type))); 
  if (__pyx_t_1) {

    /* "C:\Python26\Lib\site-packages\ege.pyx":575
 *                 return
 *         elif isinstance(I, int):        #(int width, int height, unsigned char *arrayColor)
 *             width = I             # <<<<<<<<<<<<<<
 *             height = II
 *             color = III
 */
    __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_v_I); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_width = __pyx_t_3;

    /* "C:\Python26\Lib\site-packages\ege.pyx":576
 *         elif isinstance(I, int):        #(int width, int height, unsigned char *arrayColor)
 *             width = I
 *             height = II             # <<<<<<<<<<<<<<
 *             color = III
 * 
 */
    __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_v_II); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_height = __pyx_t_3;

    /* "C:\Python26\Lib\site-packages\ege.pyx":577
 *             width = I
 *             height = II
 *             color = III             # <<<<<<<<<<<<<<
 * 
 *             colorLength = len( color )
 */
    __Pyx_INCREF(__pyx_v_III);
    __Pyx_DECREF(__pyx_v_color);
    __pyx_v_color = __pyx_v_III;

    /* "C:\Python26\Lib\site-packages\ege.pyx":579
 *             color = III
 * 
 *             colorLength = len( color )             # <<<<<<<<<<<<<<
 *             arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *             arrayColor[0] = color[0]
 */
    __pyx_t_4 = PyObject_Length(__pyx_v_color); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_colorLength = __pyx_t_4;

    /* "C:\Python26\Lib\site-packages\ege.pyx":580
 * 
 *             colorLength = len( color )
 *             arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))             # <<<<<<<<<<<<<<
 *             arrayColor[0] = color[0]
 *             arrayColor[1] = color[1]
 */
    __pyx_v_arrayColor = ((unsigned char *)malloc((4 * (sizeof(unsigned char)))));

    /* "C:\Python26\Lib\site-packages\ege.pyx":581
 *             colorLength = len( color )
 *             arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *             arrayColor[0] = color[0]             # <<<<<<<<<<<<<<
 *             arrayColor[1] = color[1]
 *             arrayColor[2] = color[2]
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 0, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[0]) = __pyx_t_5;

    /* "C:\Python26\Lib\site-packages\ege.pyx":582
 *             arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *             arrayColor[0] = color[0]
 *             arrayColor[1] = color[1]             # <<<<<<<<<<<<<<
 *             arrayColor[2] = color[2]
 *             if( colorLength == 3):
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 1, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 582; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 582; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[1]) = __pyx_t_5;

    /* "C:\Python26\Lib\site-packages\ege.pyx":583
 *             arrayColor[0] = color[0]
 *             arrayColor[1] = color[1]
 *             arrayColor[2] = color[2]             # <<<<<<<<<<<<<<
 *             if( colorLength == 3):
 *                 arrayColor[3] = 255
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 2, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 583; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 583; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[2]) = __pyx_t_5;

    /* "C:\Python26\Lib\site-packages\ege.pyx":584
 *             arrayColor[1] = color[1]
 *             arrayColor[2] = color[2]
 *             if( colorLength == 3):             # <<<<<<<<<<<<<<
 *                 arrayColor[3] = 255
 *             elif( colorLength == 4):
 */
    switch (__pyx_v_colorLength) {
      case 3:

      /* "C:\Python26\Lib\site-packages\ege.pyx":585
 *             arrayColor[2] = color[2]
 *             if( colorLength == 3):
 *                 arrayColor[3] = 255             # <<<<<<<<<<<<<<
 *             elif( colorLength == 4):
 *                 arrayColor[3] = color[3]
 */
      (__pyx_v_arrayColor[3]) = 255;
      break;

      /* "C:\Python26\Lib\site-packages\ege.pyx":586
 *             if( colorLength == 3):
 *                 arrayColor[3] = 255
 *             elif( colorLength == 4):             # <<<<<<<<<<<<<<
 *                 arrayColor[3] = color[3]
 *             #else:
 */
      case 4:

      /* "C:\Python26\Lib\site-packages\ege.pyx":587
 *                 arrayColor[3] = 255
 *             elif( colorLength == 4):
 *                 arrayColor[3] = color[3]             # <<<<<<<<<<<<<<
 *             #else:
 *             #    kasta exception
 */
      __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 3, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_1);
      __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
      (__pyx_v_arrayColor[3]) = __pyx_t_5;
      break;
    }

    /* "C:\Python26\Lib\site-packages\ege.pyx":590
 *             #else:
 *             #    kasta exception
 *             self.thisPtr = new_ImageI( width, height, arrayColor )             # <<<<<<<<<<<<<<
 *             return
 *         #else:
 */
    ((struct __pyx_obj_3ege_Image *)__pyx_v_self)->thisPtr = new Image(__pyx_v_width, __pyx_v_height, __pyx_v_arrayColor);

    /* "C:\Python26\Lib\site-packages\ege.pyx":591
 *             #    kasta exception
 *             self.thisPtr = new_ImageI( width, height, arrayColor )
 *             return             # <<<<<<<<<<<<<<
 *         #else:
 *         #    kasta exception
 */
    __pyx_r = 0;
    goto __pyx_L0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_1);
  __Pyx_AddTraceback("ege.Image.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_color);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":595
 *         #    kasta exception
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del_Image(self.thisPtr)
 * 
 */

static void __pyx_pf_3ege_5Image___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_3ege_5Image___dealloc__(PyObject *__pyx_v_self) {
  __Pyx_SetupRefcountContext("__dealloc__");

  /* "C:\Python26\Lib\site-packages\ege.pyx":596
 * 
 *     def __dealloc__(self):
 *         del_Image(self.thisPtr)             # <<<<<<<<<<<<<<
 * 
 *     def draw(self, double x, double y, double x_0=0, double y_0=0, double width=-1, double height=-1, bint bilinear = False, double scaleX = 1.0, double scaleY = 1.0, double rotate = 0.0, double rotatePtX = 0.0, double rotatePtY = 0.0, color = False):
 */
  delete(((struct __pyx_obj_3ege_Image *)__pyx_v_self)->thisPtr);

  __Pyx_FinishRefcountContext();
}

/* "C:\Python26\Lib\site-packages\ege.pyx":598
 *         del_Image(self.thisPtr)
 * 
 *     def draw(self, double x, double y, double x_0=0, double y_0=0, double width=-1, double height=-1, bint bilinear = False, double scaleX = 1.0, double scaleY = 1.0, double rotate = 0.0, double rotatePtX = 0.0, double rotatePtY = 0.0, color = False):             # <<<<<<<<<<<<<<
 *         cdef int colorLength
 *         cdef unsigned char *arrayColor
 */

static PyObject *__pyx_pf_3ege_5Image_draw(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_3ege_5Image_draw(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_x;
  double __pyx_v_y;
  double __pyx_v_x_0;
  double __pyx_v_y_0;
  double __pyx_v_width;
  double __pyx_v_height;
  int __pyx_v_bilinear;
  double __pyx_v_scaleX;
  double __pyx_v_scaleY;
  double __pyx_v_rotate;
  double __pyx_v_rotatePtX;
  double __pyx_v_rotatePtY;
  PyObject *__pyx_v_color = 0;
  int __pyx_v_colorLength;
  unsigned char *__pyx_v_arrayColor;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_1 = 0;
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  unsigned char __pyx_t_3;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_x,&__pyx_kp_y,&__pyx_kp_x_0,&__pyx_kp_y_0,&__pyx_kp_width,&__pyx_kp_height,&__pyx_kp_bilinear,&__pyx_kp_scaleX,&__pyx_kp_scaleY,&__pyx_kp_rotate,&__pyx_kp_rotatePtX,&__pyx_kp_rotatePtY,&__pyx_kp_color,0};
  __Pyx_SetupRefcountContext("draw");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[13] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
    values[12] = __pyx_k_73;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_kp_x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_kp_y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("draw", 0, 2, 13, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_x_0);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_y_0);
        if (unlikely(value)) { values[3] = value; kw_args--; }
      }
      case  4:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_width);
        if (unlikely(value)) { values[4] = value; kw_args--; }
      }
      case  5:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_height);
        if (unlikely(value)) { values[5] = value; kw_args--; }
      }
      case  6:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_bilinear);
        if (unlikely(value)) { values[6] = value; kw_args--; }
      }
      case  7:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_scaleX);
        if (unlikely(value)) { values[7] = value; kw_args--; }
      }
      case  8:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_scaleY);
        if (unlikely(value)) { values[8] = value; kw_args--; }
      }
      case  9:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_rotate);
        if (unlikely(value)) { values[9] = value; kw_args--; }
      }
      case 10:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_rotatePtX);
        if (unlikely(value)) { values[10] = value; kw_args--; }
      }
      case 11:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_rotatePtY);
        if (unlikely(value)) { values[11] = value; kw_args--; }
      }
      case 12:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_color);
        if (unlikely(value)) { values[12] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "draw") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = __pyx_PyFloat_AsDouble(values[0]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(values[1]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[2]) {
      __pyx_v_x_0 = __pyx_PyFloat_AsDouble(values[2]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_x_0 = ((double)0);
    }
    if (values[3]) {
      __pyx_v_y_0 = __pyx_PyFloat_AsDouble(values[3]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_y_0 = ((double)0);
    }
    if (values[4]) {
      __pyx_v_width = __pyx_PyFloat_AsDouble(values[4]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_width = ((double)-1);
    }
    if (values[5]) {
      __pyx_v_height = __pyx_PyFloat_AsDouble(values[5]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_height = ((double)-1);
    }
    if (values[6]) {
      __pyx_v_bilinear = __Pyx_PyObject_IsTrue(values[6]); if (unlikely((__pyx_v_bilinear == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_bilinear = 0;
    }
    if (values[7]) {
      __pyx_v_scaleX = __pyx_PyFloat_AsDouble(values[7]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_scaleX = 1.0;
    }
    if (values[8]) {
      __pyx_v_scaleY = __pyx_PyFloat_AsDouble(values[8]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_scaleY = 1.0;
    }
    if (values[9]) {
      __pyx_v_rotate = __pyx_PyFloat_AsDouble(values[9]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_rotate = 0.0;
    }
    if (values[10]) {
      __pyx_v_rotatePtX = __pyx_PyFloat_AsDouble(values[10]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_rotatePtX = 0.0;
    }
    if (values[11]) {
      __pyx_v_rotatePtY = __pyx_PyFloat_AsDouble(values[11]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_rotatePtY = 0.0;
    }
    __pyx_v_color = values[12];
  } else {
    __pyx_v_x_0 = ((double)0);
    __pyx_v_y_0 = ((double)0);
    __pyx_v_width = ((double)-1);
    __pyx_v_height = ((double)-1);
    __pyx_v_bilinear = 0;
    __pyx_v_scaleX = 1.0;
    __pyx_v_scaleY = 1.0;
    __pyx_v_rotate = 0.0;
    __pyx_v_rotatePtX = 0.0;
    __pyx_v_rotatePtY = 0.0;
    __pyx_v_color = __pyx_k_73;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case 13:
      __pyx_v_color = PyTuple_GET_ITEM(__pyx_args, 12);
      case 12:
      __pyx_v_rotatePtY = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 11)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case 11:
      __pyx_v_rotatePtX = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 10)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case 10:
      __pyx_v_rotate = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 9)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  9:
      __pyx_v_scaleY = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 8)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  8:
      __pyx_v_scaleX = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 7)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  7:
      __pyx_v_bilinear = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 6)); if (unlikely((__pyx_v_bilinear == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  6:
      __pyx_v_height = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 5)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  5:
      __pyx_v_width = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 4)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  4:
      __pyx_v_y_0 = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3:
      __pyx_v_x_0 = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2:
      __pyx_v_y = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_x = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("draw", 0, 2, 13, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.Image.draw");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":601
 *         cdef int colorLength
 *         cdef unsigned char *arrayColor
 *         if(color):             # <<<<<<<<<<<<<<
 *             colorLength = len( color )
 *             arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_color); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 601; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "C:\Python26\Lib\site-packages\ege.pyx":602
 *         cdef unsigned char *arrayColor
 *         if(color):
 *             colorLength = len( color )             # <<<<<<<<<<<<<<
 *             arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *             arrayColor[0] = color[0]
 */
    __pyx_t_2 = PyObject_Length(__pyx_v_color); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 602; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_colorLength = __pyx_t_2;

    /* "C:\Python26\Lib\site-packages\ege.pyx":603
 *         if(color):
 *             colorLength = len( color )
 *             arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))             # <<<<<<<<<<<<<<
 *             arrayColor[0] = color[0]
 *             arrayColor[1] = color[1]
 */
    __pyx_v_arrayColor = ((unsigned char *)malloc((4 * (sizeof(unsigned char)))));

    /* "C:\Python26\Lib\site-packages\ege.pyx":604
 *             colorLength = len( color )
 *             arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *             arrayColor[0] = color[0]             # <<<<<<<<<<<<<<
 *             arrayColor[1] = color[1]
 *             arrayColor[2] = color[2]
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 0, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_3 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_3 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[0]) = __pyx_t_3;

    /* "C:\Python26\Lib\site-packages\ege.pyx":605
 *             arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *             arrayColor[0] = color[0]
 *             arrayColor[1] = color[1]             # <<<<<<<<<<<<<<
 *             arrayColor[2] = color[2]
 *             if( colorLength == 3):
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 1, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 605; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_3 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_3 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 605; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[1]) = __pyx_t_3;

    /* "C:\Python26\Lib\site-packages\ege.pyx":606
 *             arrayColor[0] = color[0]
 *             arrayColor[1] = color[1]
 *             arrayColor[2] = color[2]             # <<<<<<<<<<<<<<
 *             if( colorLength == 3):
 *                 arrayColor[3] = 255
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 2, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 606; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_3 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_3 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 606; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[2]) = __pyx_t_3;

    /* "C:\Python26\Lib\site-packages\ege.pyx":607
 *             arrayColor[1] = color[1]
 *             arrayColor[2] = color[2]
 *             if( colorLength == 3):             # <<<<<<<<<<<<<<
 *                 arrayColor[3] = 255
 *             elif( colorLength == 4):
 */
    switch (__pyx_v_colorLength) {
      case 3:

      /* "C:\Python26\Lib\site-packages\ege.pyx":608
 *             arrayColor[2] = color[2]
 *             if( colorLength == 3):
 *                 arrayColor[3] = 255             # <<<<<<<<<<<<<<
 *             elif( colorLength == 4):
 *                 arrayColor[3] = color[3]
 */
      (__pyx_v_arrayColor[3]) = 255;
      break;

      /* "C:\Python26\Lib\site-packages\ege.pyx":609
 *             if( colorLength == 3):
 *                 arrayColor[3] = 255
 *             elif( colorLength == 4):             # <<<<<<<<<<<<<<
 *                 arrayColor[3] = color[3]
 *             #else:
 */
      case 4:

      /* "C:\Python26\Lib\site-packages\ege.pyx":610
 *                 arrayColor[3] = 255
 *             elif( colorLength == 4):
 *                 arrayColor[3] = color[3]             # <<<<<<<<<<<<<<
 *             #else:
 *             #    kasta exception
 */
      __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 3, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_1);
      __pyx_t_3 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_3 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
      (__pyx_v_arrayColor[3]) = __pyx_t_3;
      break;
    }
    goto __pyx_L6;
  }
  /*else*/ {

    /* "C:\Python26\Lib\site-packages\ege.pyx":614
 *             #    kasta exception
 *         else:
 *             arrayColor = NULL             # <<<<<<<<<<<<<<
 *         self.thisPtr.draw(x, y, x_0, y_0, width, height, bilinear, scaleX, scaleY, rotate, rotatePtX, rotatePtY, arrayColor)
 * 
 */
    __pyx_v_arrayColor = NULL;
  }
  __pyx_L6:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":615
 *         else:
 *             arrayColor = NULL
 *         self.thisPtr.draw(x, y, x_0, y_0, width, height, bilinear, scaleX, scaleY, rotate, rotatePtX, rotatePtY, arrayColor)             # <<<<<<<<<<<<<<
 * 
 *     def getWidth(self):
 */
  ((struct __pyx_obj_3ege_Image *)__pyx_v_self)->thisPtr->draw(__pyx_v_x, __pyx_v_y, __pyx_v_x_0, __pyx_v_y_0, __pyx_v_width, __pyx_v_height, __pyx_v_bilinear, __pyx_v_scaleX, __pyx_v_scaleY, __pyx_v_rotate, __pyx_v_rotatePtX, __pyx_v_rotatePtY, __pyx_v_arrayColor);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_1);
  __Pyx_AddTraceback("ege.Image.draw");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":617
 *         self.thisPtr.draw(x, y, x_0, y_0, width, height, bilinear, scaleX, scaleY, rotate, rotatePtX, rotatePtY, arrayColor)
 * 
 *     def getWidth(self):             # <<<<<<<<<<<<<<
 *         return self.thisPtr.getWidth()
 * 
 */

static PyObject *__pyx_pf_3ege_5Image_getWidth(PyObject *__pyx_v_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_5Image_getWidth(PyObject *__pyx_v_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_SetupRefcountContext("getWidth");

  /* "C:\Python26\Lib\site-packages\ege.pyx":618
 * 
 *     def getWidth(self):
 *         return self.thisPtr.getWidth()             # <<<<<<<<<<<<<<
 * 
 *     def getHeight(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_3ege_Image *)__pyx_v_self)->thisPtr->getWidth()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("ege.Image.getWidth");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":620
 *         return self.thisPtr.getWidth()
 * 
 *     def getHeight(self):             # <<<<<<<<<<<<<<
 *         return self.thisPtr.getHeight()
 * 
 */

static PyObject *__pyx_pf_3ege_5Image_getHeight(PyObject *__pyx_v_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_5Image_getHeight(PyObject *__pyx_v_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_SetupRefcountContext("getHeight");

  /* "C:\Python26\Lib\site-packages\ege.pyx":621
 * 
 *     def getHeight(self):
 *         return self.thisPtr.getHeight()             # <<<<<<<<<<<<<<
 * 
 *     def drawPoints(self, coords, color, float size = 1.0, bint antiAliasing = False):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_3ege_Image *)__pyx_v_self)->thisPtr->getHeight()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("ege.Image.getHeight");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":623
 *         return self.thisPtr.getHeight()
 * 
 *     def drawPoints(self, coords, color, float size = 1.0, bint antiAliasing = False):             # <<<<<<<<<<<<<<
 *         cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 * 
 */

static PyObject *__pyx_pf_3ege_5Image_drawPoints(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_3ege_5Image_drawPoints(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_coords = 0;
  PyObject *__pyx_v_color = 0;
  float __pyx_v_size;
  int __pyx_v_antiAliasing;
  PyArrayObject *__pyx_v_newCoords = 0;
  double *__pyx_v_cCoords;
  int __pyx_v_dim;
  int __pyx_v_colorLength;
  unsigned char *__pyx_v_arrayColor;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_1 = 0;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  unsigned char __pyx_t_5;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_coords,&__pyx_kp_color,&__pyx_kp_size,&__pyx_kp_antiAliasing,0};
  __Pyx_SetupRefcountContext("drawPoints");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_kp_coords);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_kp_color);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("drawPoints", 0, 2, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 623; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_size);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_antiAliasing);
        if (unlikely(value)) { values[3] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "drawPoints") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 623; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_coords = values[0];
    __pyx_v_color = values[1];
    if (values[2]) {
      __pyx_v_size = __pyx_PyFloat_AsDouble(values[2]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 623; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_size = ((float)1.0);
    }
    if (values[3]) {
      __pyx_v_antiAliasing = __Pyx_PyObject_IsTrue(values[3]); if (unlikely((__pyx_v_antiAliasing == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 623; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_antiAliasing = 0;
    }
  } else {
    __pyx_v_size = ((float)1.0);
    __pyx_v_antiAliasing = 0;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4:
      __pyx_v_antiAliasing = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_antiAliasing == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 623; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3:
      __pyx_v_size = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 623; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2:
      __pyx_v_color = PyTuple_GET_ITEM(__pyx_args, 1);
      __pyx_v_coords = PyTuple_GET_ITEM(__pyx_args, 0);
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("drawPoints", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 623; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.Image.drawPoints");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":624
 * 
 *     def drawPoints(self, coords, color, float size = 1.0, bint antiAliasing = False):
 *         cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)             # <<<<<<<<<<<<<<
 * 
 *         cdef double *cCoords = <double *>newCoords.data
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_numpy); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyObject_GetAttr(__pyx_1, __pyx_kp_array); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_v_coords);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_coords);
  __Pyx_GIVEREF(__pyx_v_coords);
  __pyx_1 = PyDict_New(); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_1));
  if (PyDict_SetItem(__pyx_1, __pyx_kp_dtype, ((PyObject *)((PyObject*)&PyFloat_Type))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = PyEval_CallObjectWithKeywords(__pyx_t_1, ((PyObject *)__pyx_t_2), ((PyObject *)__pyx_1)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_1)); __pyx_1 = 0;
  if (!(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_newCoords = ((PyArrayObject *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":626
 *         cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 * 
 *         cdef double *cCoords = <double *>newCoords.data             # <<<<<<<<<<<<<<
 *         cdef int dim = newCoords.shape[0]
 * 
 */
  __pyx_v_cCoords = ((double *)__pyx_v_newCoords->data);

  /* "C:\Python26\Lib\site-packages\ege.pyx":627
 * 
 *         cdef double *cCoords = <double *>newCoords.data
 *         cdef int dim = newCoords.shape[0]             # <<<<<<<<<<<<<<
 * 
 *         cdef int colorLength = len(color)
 */
  __pyx_v_dim = (__pyx_v_newCoords->dimensions[0]);

  /* "C:\Python26\Lib\site-packages\ege.pyx":629
 *         cdef int dim = newCoords.shape[0]
 * 
 *         cdef int colorLength = len(color)             # <<<<<<<<<<<<<<
 *         cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *         arrayColor[0] = color[0]
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_color); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_colorLength = __pyx_t_4;

  /* "C:\Python26\Lib\site-packages\ege.pyx":630
 * 
 *         cdef int colorLength = len(color)
 *         cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))             # <<<<<<<<<<<<<<
 *         arrayColor[0] = color[0]
 *         arrayColor[1] = color[1]
 */
  __pyx_v_arrayColor = ((unsigned char *)malloc((4 * (sizeof(unsigned char)))));

  /* "C:\Python26\Lib\site-packages\ege.pyx":631
 *         cdef int colorLength = len(color)
 *         cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *         arrayColor[0] = color[0]             # <<<<<<<<<<<<<<
 *         arrayColor[1] = color[1]
 *         arrayColor[2] = color[2]
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 0, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[0]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":632
 *         cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *         arrayColor[0] = color[0]
 *         arrayColor[1] = color[1]             # <<<<<<<<<<<<<<
 *         arrayColor[2] = color[2]
 *         if( colorLength == 3):
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 1, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[1]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":633
 *         arrayColor[0] = color[0]
 *         arrayColor[1] = color[1]
 *         arrayColor[2] = color[2]             # <<<<<<<<<<<<<<
 *         if( colorLength == 3):
 *             arrayColor[3] = 255
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 2, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[2]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":634
 *         arrayColor[1] = color[1]
 *         arrayColor[2] = color[2]
 *         if( colorLength == 3):             # <<<<<<<<<<<<<<
 *             arrayColor[3] = 255
 *         elif( colorLength == 4):
 */
  switch (__pyx_v_colorLength) {
    case 3:

    /* "C:\Python26\Lib\site-packages\ege.pyx":635
 *         arrayColor[2] = color[2]
 *         if( colorLength == 3):
 *             arrayColor[3] = 255             # <<<<<<<<<<<<<<
 *         elif( colorLength == 4):
 *             arrayColor[3] = color[3]
 */
    (__pyx_v_arrayColor[3]) = 255;
    break;

    /* "C:\Python26\Lib\site-packages\ege.pyx":636
 *         if( colorLength == 3):
 *             arrayColor[3] = 255
 *         elif( colorLength == 4):             # <<<<<<<<<<<<<<
 *             arrayColor[3] = color[3]
 *         #else:
 */
    case 4:

    /* "C:\Python26\Lib\site-packages\ege.pyx":637
 *             arrayColor[3] = 255
 *         elif( colorLength == 4):
 *             arrayColor[3] = color[3]             # <<<<<<<<<<<<<<
 *         #else:
 *         #    kasta exception
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 3, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[3]) = __pyx_t_5;
    break;
  }

  /* "C:\Python26\Lib\site-packages\ege.pyx":640
 *         #else:
 *         #    kasta exception
 *         self.thisPtr.drawPoints(cCoords, dim, arrayColor, size, antiAliasing)             # <<<<<<<<<<<<<<
 *         free(arrayColor)
 * 
 */
  ((struct __pyx_obj_3ege_Image *)__pyx_v_self)->thisPtr->drawPoints(__pyx_v_cCoords, __pyx_v_dim, __pyx_v_arrayColor, __pyx_v_size, __pyx_v_antiAliasing);

  /* "C:\Python26\Lib\site-packages\ege.pyx":641
 *         #    kasta exception
 *         self.thisPtr.drawPoints(cCoords, dim, arrayColor, size, antiAliasing)
 *         free(arrayColor)             # <<<<<<<<<<<<<<
 * 
 *     def drawLines(self, coords, color, float width = 1, bint loop = False, stipple = False, bint antiAliasing = False):
 */
  free(__pyx_v_arrayColor);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_1);
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("ege.Image.drawPoints");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_newCoords);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":643
 *         free(arrayColor)
 * 
 *     def drawLines(self, coords, color, float width = 1, bint loop = False, stipple = False, bint antiAliasing = False):             # <<<<<<<<<<<<<<
 *         cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 * 
 */

static PyObject *__pyx_pf_3ege_5Image_drawLines(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_3ege_5Image_drawLines(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_coords = 0;
  PyObject *__pyx_v_color = 0;
  float __pyx_v_width;
  int __pyx_v_loop;
  PyObject *__pyx_v_stipple = 0;
  int __pyx_v_antiAliasing;
  PyArrayObject *__pyx_v_newCoords = 0;
  double *__pyx_v_cCoords;
  int __pyx_v_dim;
  int __pyx_v_colorLength;
  unsigned char *__pyx_v_arrayColor;
  PyObject *__pyx_v_stippleFactor;
  PyObject *__pyx_v_stipplePattern;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_1 = 0;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  unsigned char __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_coords,&__pyx_kp_color,&__pyx_kp_width,&__pyx_kp_loop,&__pyx_kp_stipple,&__pyx_kp_antiAliasing,0};
  __Pyx_SetupRefcountContext("drawLines");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[6] = {0,0,0,0,0,0};
    values[4] = __pyx_k_74;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_kp_coords);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_kp_color);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("drawLines", 0, 2, 6, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_width);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_loop);
        if (unlikely(value)) { values[3] = value; kw_args--; }
      }
      case  4:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_stipple);
        if (unlikely(value)) { values[4] = value; kw_args--; }
      }
      case  5:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_antiAliasing);
        if (unlikely(value)) { values[5] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "drawLines") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_coords = values[0];
    __pyx_v_color = values[1];
    if (values[2]) {
      __pyx_v_width = __pyx_PyFloat_AsDouble(values[2]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_width = ((float)1);
    }
    if (values[3]) {
      __pyx_v_loop = __Pyx_PyObject_IsTrue(values[3]); if (unlikely((__pyx_v_loop == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_loop = 0;
    }
    __pyx_v_stipple = values[4];
    if (values[5]) {
      __pyx_v_antiAliasing = __Pyx_PyObject_IsTrue(values[5]); if (unlikely((__pyx_v_antiAliasing == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_antiAliasing = 0;
    }
  } else {
    __pyx_v_width = ((float)1);
    __pyx_v_loop = 0;
    __pyx_v_stipple = __pyx_k_74;
    __pyx_v_antiAliasing = 0;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  6:
      __pyx_v_antiAliasing = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 5)); if (unlikely((__pyx_v_antiAliasing == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  5:
      __pyx_v_stipple = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4:
      __pyx_v_loop = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_loop == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3:
      __pyx_v_width = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2:
      __pyx_v_color = PyTuple_GET_ITEM(__pyx_args, 1);
      __pyx_v_coords = PyTuple_GET_ITEM(__pyx_args, 0);
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("drawLines", 0, 2, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.Image.drawLines");
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_stippleFactor = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_stipplePattern = Py_None; __Pyx_INCREF(Py_None);

  /* "C:\Python26\Lib\site-packages\ege.pyx":644
 * 
 *     def drawLines(self, coords, color, float width = 1, bint loop = False, stipple = False, bint antiAliasing = False):
 *         cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)             # <<<<<<<<<<<<<<
 * 
 *         cdef double *cCoords = <double *>newCoords.data
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_numpy); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyObject_GetAttr(__pyx_1, __pyx_kp_array); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_v_coords);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_coords);
  __Pyx_GIVEREF(__pyx_v_coords);
  __pyx_1 = PyDict_New(); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_1));
  if (PyDict_SetItem(__pyx_1, __pyx_kp_dtype, ((PyObject *)((PyObject*)&PyFloat_Type))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = PyEval_CallObjectWithKeywords(__pyx_t_1, ((PyObject *)__pyx_t_2), ((PyObject *)__pyx_1)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_1)); __pyx_1 = 0;
  if (!(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_newCoords = ((PyArrayObject *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":646
 *         cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 * 
 *         cdef double *cCoords = <double *>newCoords.data             # <<<<<<<<<<<<<<
 *         cdef int dim = newCoords.shape[0]
 * 
 */
  __pyx_v_cCoords = ((double *)__pyx_v_newCoords->data);

  /* "C:\Python26\Lib\site-packages\ege.pyx":647
 * 
 *         cdef double *cCoords = <double *>newCoords.data
 *         cdef int dim = newCoords.shape[0]             # <<<<<<<<<<<<<<
 * 
 *         cdef int colorLength = len(color)
 */
  __pyx_v_dim = (__pyx_v_newCoords->dimensions[0]);

  /* "C:\Python26\Lib\site-packages\ege.pyx":649
 *         cdef int dim = newCoords.shape[0]
 * 
 *         cdef int colorLength = len(color)             # <<<<<<<<<<<<<<
 *         cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *         arrayColor[0] = color[0]
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_color); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 649; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_colorLength = __pyx_t_4;

  /* "C:\Python26\Lib\site-packages\ege.pyx":650
 * 
 *         cdef int colorLength = len(color)
 *         cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))             # <<<<<<<<<<<<<<
 *         arrayColor[0] = color[0]
 *         arrayColor[1] = color[1]
 */
  __pyx_v_arrayColor = ((unsigned char *)malloc((4 * (sizeof(unsigned char)))));

  /* "C:\Python26\Lib\site-packages\ege.pyx":651
 *         cdef int colorLength = len(color)
 *         cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *         arrayColor[0] = color[0]             # <<<<<<<<<<<<<<
 *         arrayColor[1] = color[1]
 *         arrayColor[2] = color[2]
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 0, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 651; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 651; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[0]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":652
 *         cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *         arrayColor[0] = color[0]
 *         arrayColor[1] = color[1]             # <<<<<<<<<<<<<<
 *         arrayColor[2] = color[2]
 *         if( colorLength == 3):
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 1, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[1]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":653
 *         arrayColor[0] = color[0]
 *         arrayColor[1] = color[1]
 *         arrayColor[2] = color[2]             # <<<<<<<<<<<<<<
 *         if( colorLength == 3):
 *             arrayColor[3] = 255
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 2, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 653; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 653; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[2]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":654
 *         arrayColor[1] = color[1]
 *         arrayColor[2] = color[2]
 *         if( colorLength == 3):             # <<<<<<<<<<<<<<
 *             arrayColor[3] = 255
 *         elif( colorLength == 4):
 */
  switch (__pyx_v_colorLength) {
    case 3:

    /* "C:\Python26\Lib\site-packages\ege.pyx":655
 *         arrayColor[2] = color[2]
 *         if( colorLength == 3):
 *             arrayColor[3] = 255             # <<<<<<<<<<<<<<
 *         elif( colorLength == 4):
 *             arrayColor[3] = color[3]
 */
    (__pyx_v_arrayColor[3]) = 255;
    break;

    /* "C:\Python26\Lib\site-packages\ege.pyx":656
 *         if( colorLength == 3):
 *             arrayColor[3] = 255
 *         elif( colorLength == 4):             # <<<<<<<<<<<<<<
 *             arrayColor[3] = color[3]
 *         #else:
 */
    case 4:

    /* "C:\Python26\Lib\site-packages\ege.pyx":657
 *             arrayColor[3] = 255
 *         elif( colorLength == 4):
 *             arrayColor[3] = color[3]             # <<<<<<<<<<<<<<
 *         #else:
 *         #    kasta exception
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 3, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[3]) = __pyx_t_5;
    break;
  }

  /* "C:\Python26\Lib\site-packages\ege.pyx":661
 *         #    kasta exception
 * 
 *         if( stipple and len(stipple)==2 ):             # <<<<<<<<<<<<<<
 *             stippleFactor = stipple[0]
 *             stipplePattern = stipple[1]
 */
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_stipple); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_6) {
    __pyx_t_4 = PyObject_Length(__pyx_v_stipple); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_7 = (__pyx_t_4 == 2);
    __pyx_t_8 = __pyx_t_7;
  } else {
    __pyx_t_8 = __pyx_t_6;
  }
  if (__pyx_t_8) {

    /* "C:\Python26\Lib\site-packages\ege.pyx":662
 * 
 *         if( stipple and len(stipple)==2 ):
 *             stippleFactor = stipple[0]             # <<<<<<<<<<<<<<
 *             stipplePattern = stipple[1]
 *         else:    # Aer so illa tvungen att ge dessa ett vaerde...
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_stipple, 0, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 662; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __Pyx_DECREF(__pyx_v_stippleFactor);
    __pyx_v_stippleFactor = __pyx_1;
    __pyx_1 = 0;

    /* "C:\Python26\Lib\site-packages\ege.pyx":663
 *         if( stipple and len(stipple)==2 ):
 *             stippleFactor = stipple[0]
 *             stipplePattern = stipple[1]             # <<<<<<<<<<<<<<
 *         else:    # Aer so illa tvungen att ge dessa ett vaerde...
 *             stippleFactor = 1
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_stipple, 1, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __Pyx_DECREF(__pyx_v_stipplePattern);
    __pyx_v_stipplePattern = __pyx_1;
    __pyx_1 = 0;
    goto __pyx_L6;
  }
  /*else*/ {

    /* "C:\Python26\Lib\site-packages\ege.pyx":665
 *             stipplePattern = stipple[1]
 *         else:    # Aer so illa tvungen att ge dessa ett vaerde...
 *             stippleFactor = 1             # <<<<<<<<<<<<<<
 *         stipplePattern = 0xFFFF
 * 
 */
    __Pyx_INCREF(__pyx_int_1);
    __Pyx_DECREF(__pyx_v_stippleFactor);
    __pyx_v_stippleFactor = __pyx_int_1;
  }
  __pyx_L6:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":666
 *         else:    # Aer so illa tvungen att ge dessa ett vaerde...
 *             stippleFactor = 1
 *         stipplePattern = 0xFFFF             # <<<<<<<<<<<<<<
 * 
 *         self.thisPtr.drawLines(cCoords, dim, arrayColor, width, loop, stipple, stippleFactor, stipplePattern, antiAliasing)
 */
  __Pyx_INCREF(__pyx_int_0xFFFF);
  __Pyx_DECREF(__pyx_v_stipplePattern);
  __pyx_v_stipplePattern = __pyx_int_0xFFFF;

  /* "C:\Python26\Lib\site-packages\ege.pyx":668
 *         stipplePattern = 0xFFFF
 * 
 *         self.thisPtr.drawLines(cCoords, dim, arrayColor, width, loop, stipple, stippleFactor, stipplePattern, antiAliasing)             # <<<<<<<<<<<<<<
 *         free(arrayColor)
 * 
 */
  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_v_stipple); if (unlikely((__pyx_t_8 == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 668; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_9 = __Pyx_PyInt_AsInt(__pyx_v_stippleFactor); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 668; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_10 = __Pyx_PyInt_AsInt(__pyx_v_stipplePattern); if (unlikely((__pyx_t_10 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 668; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_3ege_Image *)__pyx_v_self)->thisPtr->drawLines(__pyx_v_cCoords, __pyx_v_dim, __pyx_v_arrayColor, __pyx_v_width, __pyx_v_loop, __pyx_t_8, __pyx_t_9, __pyx_t_10, __pyx_v_antiAliasing);

  /* "C:\Python26\Lib\site-packages\ege.pyx":669
 * 
 *         self.thisPtr.drawLines(cCoords, dim, arrayColor, width, loop, stipple, stippleFactor, stipplePattern, antiAliasing)
 *         free(arrayColor)             # <<<<<<<<<<<<<<
 * 
 *     def drawTriangles(self, coords, color, int form = SEPARATE):
 */
  free(__pyx_v_arrayColor);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_1);
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("ege.Image.drawLines");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_newCoords);
  __Pyx_DECREF(__pyx_v_stippleFactor);
  __Pyx_DECREF(__pyx_v_stipplePattern);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":671
 *         free(arrayColor)
 * 
 *     def drawTriangles(self, coords, color, int form = SEPARATE):             # <<<<<<<<<<<<<<
 *         cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 * 
 */

static PyObject *__pyx_pf_3ege_5Image_drawTriangles(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_3ege_5Image_drawTriangles(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_coords = 0;
  PyObject *__pyx_v_color = 0;
  int __pyx_v_form;
  PyArrayObject *__pyx_v_newCoords = 0;
  double *__pyx_v_cCoords;
  int __pyx_v_dim;
  int __pyx_v_colorLength;
  unsigned char *__pyx_v_arrayColor;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_1 = 0;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  unsigned char __pyx_t_5;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_coords,&__pyx_kp_color,&__pyx_kp_form,0};
  __Pyx_SetupRefcountContext("drawTriangles");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_kp_coords);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_kp_color);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("drawTriangles", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_form);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "drawTriangles") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_coords = values[0];
    __pyx_v_color = values[1];
    if (values[2]) {
      __pyx_v_form = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_form == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_form = __pyx_k_75;
    }
  } else {
    __pyx_v_form = __pyx_k_75;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3:
      __pyx_v_form = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_form == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2:
      __pyx_v_color = PyTuple_GET_ITEM(__pyx_args, 1);
      __pyx_v_coords = PyTuple_GET_ITEM(__pyx_args, 0);
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("drawTriangles", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.Image.drawTriangles");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":672
 * 
 *     def drawTriangles(self, coords, color, int form = SEPARATE):
 *         cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)             # <<<<<<<<<<<<<<
 * 
 *         cdef double *cCoords = <double *>newCoords.data
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_numpy); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyObject_GetAttr(__pyx_1, __pyx_kp_array); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_v_coords);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_coords);
  __Pyx_GIVEREF(__pyx_v_coords);
  __pyx_1 = PyDict_New(); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_1));
  if (PyDict_SetItem(__pyx_1, __pyx_kp_dtype, ((PyObject *)((PyObject*)&PyFloat_Type))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = PyEval_CallObjectWithKeywords(__pyx_t_1, ((PyObject *)__pyx_t_2), ((PyObject *)__pyx_1)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_1)); __pyx_1 = 0;
  if (!(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_newCoords = ((PyArrayObject *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":674
 *         cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 * 
 *         cdef double *cCoords = <double *>newCoords.data             # <<<<<<<<<<<<<<
 *         cdef int dim = newCoords.shape[0]
 * 
 */
  __pyx_v_cCoords = ((double *)__pyx_v_newCoords->data);

  /* "C:\Python26\Lib\site-packages\ege.pyx":675
 * 
 *         cdef double *cCoords = <double *>newCoords.data
 *         cdef int dim = newCoords.shape[0]             # <<<<<<<<<<<<<<
 * 
 *         cdef int colorLength = len(color)
 */
  __pyx_v_dim = (__pyx_v_newCoords->dimensions[0]);

  /* "C:\Python26\Lib\site-packages\ege.pyx":677
 *         cdef int dim = newCoords.shape[0]
 * 
 *         cdef int colorLength = len(color)             # <<<<<<<<<<<<<<
 *         cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *         arrayColor[0] = color[0]
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_color); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_colorLength = __pyx_t_4;

  /* "C:\Python26\Lib\site-packages\ege.pyx":678
 * 
 *         cdef int colorLength = len(color)
 *         cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))             # <<<<<<<<<<<<<<
 *         arrayColor[0] = color[0]
 *         arrayColor[1] = color[1]
 */
  __pyx_v_arrayColor = ((unsigned char *)malloc((4 * (sizeof(unsigned char)))));

  /* "C:\Python26\Lib\site-packages\ege.pyx":679
 *         cdef int colorLength = len(color)
 *         cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *         arrayColor[0] = color[0]             # <<<<<<<<<<<<<<
 *         arrayColor[1] = color[1]
 *         arrayColor[2] = color[2]
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 0, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 679; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 679; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[0]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":680
 *         cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *         arrayColor[0] = color[0]
 *         arrayColor[1] = color[1]             # <<<<<<<<<<<<<<
 *         arrayColor[2] = color[2]
 *         if( colorLength == 3):
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 1, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[1]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":681
 *         arrayColor[0] = color[0]
 *         arrayColor[1] = color[1]
 *         arrayColor[2] = color[2]             # <<<<<<<<<<<<<<
 *         if( colorLength == 3):
 *             arrayColor[3] = 255
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 2, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[2]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":682
 *         arrayColor[1] = color[1]
 *         arrayColor[2] = color[2]
 *         if( colorLength == 3):             # <<<<<<<<<<<<<<
 *             arrayColor[3] = 255
 *         elif( colorLength == 4):
 */
  switch (__pyx_v_colorLength) {
    case 3:

    /* "C:\Python26\Lib\site-packages\ege.pyx":683
 *         arrayColor[2] = color[2]
 *         if( colorLength == 3):
 *             arrayColor[3] = 255             # <<<<<<<<<<<<<<
 *         elif( colorLength == 4):
 *             arrayColor[3] = color[3]
 */
    (__pyx_v_arrayColor[3]) = 255;
    break;

    /* "C:\Python26\Lib\site-packages\ege.pyx":684
 *         if( colorLength == 3):
 *             arrayColor[3] = 255
 *         elif( colorLength == 4):             # <<<<<<<<<<<<<<
 *             arrayColor[3] = color[3]
 *         #else:
 */
    case 4:

    /* "C:\Python26\Lib\site-packages\ege.pyx":685
 *             arrayColor[3] = 255
 *         elif( colorLength == 4):
 *             arrayColor[3] = color[3]             # <<<<<<<<<<<<<<
 *         #else:
 *         #    kasta exception
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 3, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[3]) = __pyx_t_5;
    break;
  }

  /* "C:\Python26\Lib\site-packages\ege.pyx":689
 *         #    kasta exception
 * 
 *         self.thisPtr.drawTriangles(cCoords, dim, arrayColor, form)             # <<<<<<<<<<<<<<
 *         free(arrayColor)
 * 
 */
  ((struct __pyx_obj_3ege_Image *)__pyx_v_self)->thisPtr->drawTriangles(__pyx_v_cCoords, __pyx_v_dim, __pyx_v_arrayColor, __pyx_v_form);

  /* "C:\Python26\Lib\site-packages\ege.pyx":690
 * 
 *         self.thisPtr.drawTriangles(cCoords, dim, arrayColor, form)
 *         free(arrayColor)             # <<<<<<<<<<<<<<
 * 
 *     def drawPolygon(self, coords, color):
 */
  free(__pyx_v_arrayColor);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_1);
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("ege.Image.drawTriangles");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_newCoords);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":692
 *         free(arrayColor)
 * 
 *     def drawPolygon(self, coords, color):             # <<<<<<<<<<<<<<
 *         cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 * 
 */

static PyObject *__pyx_pf_3ege_5Image_drawPolygon(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_3ege_5Image_drawPolygon(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_coords = 0;
  PyObject *__pyx_v_color = 0;
  PyArrayObject *__pyx_v_newCoords = 0;
  double *__pyx_v_cCoords;
  int __pyx_v_dim;
  int __pyx_v_colorLength;
  unsigned char *__pyx_v_arrayColor;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_1 = 0;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  unsigned char __pyx_t_5;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_coords,&__pyx_kp_color,0};
  __Pyx_SetupRefcountContext("drawPolygon");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_kp_coords);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_kp_color);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("drawPolygon", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 692; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "drawPolygon") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 692; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_coords = values[0];
    __pyx_v_color = values[1];
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_coords = PyTuple_GET_ITEM(__pyx_args, 0);
    __pyx_v_color = PyTuple_GET_ITEM(__pyx_args, 1);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("drawPolygon", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 692; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.Image.drawPolygon");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":693
 * 
 *     def drawPolygon(self, coords, color):
 *         cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)             # <<<<<<<<<<<<<<
 * 
 *         cdef double *cCoords = <double *>newCoords.data
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_numpy); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyObject_GetAttr(__pyx_1, __pyx_kp_array); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_v_coords);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_coords);
  __Pyx_GIVEREF(__pyx_v_coords);
  __pyx_1 = PyDict_New(); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_1));
  if (PyDict_SetItem(__pyx_1, __pyx_kp_dtype, ((PyObject *)((PyObject*)&PyFloat_Type))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = PyEval_CallObjectWithKeywords(__pyx_t_1, ((PyObject *)__pyx_t_2), ((PyObject *)__pyx_1)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_1)); __pyx_1 = 0;
  if (!(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_newCoords = ((PyArrayObject *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":695
 *         cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 * 
 *         cdef double *cCoords = <double *>newCoords.data             # <<<<<<<<<<<<<<
 *         cdef int dim = newCoords.shape[0]
 * 
 */
  __pyx_v_cCoords = ((double *)__pyx_v_newCoords->data);

  /* "C:\Python26\Lib\site-packages\ege.pyx":696
 * 
 *         cdef double *cCoords = <double *>newCoords.data
 *         cdef int dim = newCoords.shape[0]             # <<<<<<<<<<<<<<
 * 
 *         cdef int colorLength = len(color)
 */
  __pyx_v_dim = (__pyx_v_newCoords->dimensions[0]);

  /* "C:\Python26\Lib\site-packages\ege.pyx":698
 *         cdef int dim = newCoords.shape[0]
 * 
 *         cdef int colorLength = len(color)             # <<<<<<<<<<<<<<
 *         cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *         arrayColor[0] = color[0]
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_color); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 698; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_colorLength = __pyx_t_4;

  /* "C:\Python26\Lib\site-packages\ege.pyx":699
 * 
 *         cdef int colorLength = len(color)
 *         cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))             # <<<<<<<<<<<<<<
 *         arrayColor[0] = color[0]
 *         arrayColor[1] = color[1]
 */
  __pyx_v_arrayColor = ((unsigned char *)malloc((4 * (sizeof(unsigned char)))));

  /* "C:\Python26\Lib\site-packages\ege.pyx":700
 *         cdef int colorLength = len(color)
 *         cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *         arrayColor[0] = color[0]             # <<<<<<<<<<<<<<
 *         arrayColor[1] = color[1]
 *         arrayColor[2] = color[2]
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 0, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 700; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 700; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[0]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":701
 *         cdef unsigned char *arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *         arrayColor[0] = color[0]
 *         arrayColor[1] = color[1]             # <<<<<<<<<<<<<<
 *         arrayColor[2] = color[2]
 *         if( colorLength == 3):
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 1, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[1]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":702
 *         arrayColor[0] = color[0]
 *         arrayColor[1] = color[1]
 *         arrayColor[2] = color[2]             # <<<<<<<<<<<<<<
 *         if( colorLength == 3):
 *             arrayColor[3] = 255
 */
  __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 2, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  (__pyx_v_arrayColor[2]) = __pyx_t_5;

  /* "C:\Python26\Lib\site-packages\ege.pyx":703
 *         arrayColor[1] = color[1]
 *         arrayColor[2] = color[2]
 *         if( colorLength == 3):             # <<<<<<<<<<<<<<
 *             arrayColor[3] = 255
 *         elif( colorLength == 4):
 */
  switch (__pyx_v_colorLength) {
    case 3:

    /* "C:\Python26\Lib\site-packages\ege.pyx":704
 *         arrayColor[2] = color[2]
 *         if( colorLength == 3):
 *             arrayColor[3] = 255             # <<<<<<<<<<<<<<
 *         elif( colorLength == 4):
 *             arrayColor[3] = color[3]
 */
    (__pyx_v_arrayColor[3]) = 255;
    break;

    /* "C:\Python26\Lib\site-packages\ege.pyx":705
 *         if( colorLength == 3):
 *             arrayColor[3] = 255
 *         elif( colorLength == 4):             # <<<<<<<<<<<<<<
 *             arrayColor[3] = color[3]
 *         #else:
 */
    case 4:

    /* "C:\Python26\Lib\site-packages\ege.pyx":706
 *             arrayColor[3] = 255
 *         elif( colorLength == 4):
 *             arrayColor[3] = color[3]             # <<<<<<<<<<<<<<
 *         #else:
 *         #    kasta exception
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 3, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_5 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_5 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[3]) = __pyx_t_5;
    break;
  }

  /* "C:\Python26\Lib\site-packages\ege.pyx":710
 *         #    kasta exception
 * 
 *         self.thisPtr.drawPolygon(cCoords, dim, arrayColor)             # <<<<<<<<<<<<<<
 *         free(arrayColor)
 * 
 */
  ((struct __pyx_obj_3ege_Image *)__pyx_v_self)->thisPtr->drawPolygon(__pyx_v_cCoords, __pyx_v_dim, __pyx_v_arrayColor);

  /* "C:\Python26\Lib\site-packages\ege.pyx":711
 * 
 *         self.thisPtr.drawPolygon(cCoords, dim, arrayColor)
 *         free(arrayColor)             # <<<<<<<<<<<<<<
 * 
 *     def subImage(self, Image src, int x, int y, bint bilinear = False, double scaleX = 1.0, double scaleY = 1.0, double rotate = 0.0, double rotatePtX = 0.0, double rotatePtY = 0.0, color = False):
 */
  free(__pyx_v_arrayColor);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_1);
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("ege.Image.drawPolygon");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_newCoords);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":713
 *         free(arrayColor)
 * 
 *     def subImage(self, Image src, int x, int y, bint bilinear = False, double scaleX = 1.0, double scaleY = 1.0, double rotate = 0.0, double rotatePtX = 0.0, double rotatePtY = 0.0, color = False):             # <<<<<<<<<<<<<<
 *         cdef int colorLength
 *         cdef unsigned char *arrayColor
 */

static PyObject *__pyx_pf_3ege_5Image_subImage(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_3ege_5Image_subImage(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_3ege_Image *__pyx_v_src = 0;
  int __pyx_v_x;
  int __pyx_v_y;
  int __pyx_v_bilinear;
  double __pyx_v_scaleX;
  double __pyx_v_scaleY;
  double __pyx_v_rotate;
  double __pyx_v_rotatePtX;
  double __pyx_v_rotatePtY;
  PyObject *__pyx_v_color = 0;
  int __pyx_v_colorLength;
  unsigned char *__pyx_v_arrayColor;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_1 = 0;
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  unsigned char __pyx_t_3;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_src,&__pyx_kp_x,&__pyx_kp_y,&__pyx_kp_bilinear,&__pyx_kp_scaleX,&__pyx_kp_scaleY,&__pyx_kp_rotate,&__pyx_kp_rotatePtX,&__pyx_kp_rotatePtY,&__pyx_kp_color,0};
  __Pyx_SetupRefcountContext("subImage");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[10] = {0,0,0,0,0,0,0,0,0,0};
    values[9] = __pyx_k_76;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_kp_src);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_kp_x);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("subImage", 0, 3, 10, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_kp_y);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("subImage", 0, 3, 10, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_bilinear);
        if (unlikely(value)) { values[3] = value; kw_args--; }
      }
      case  4:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_scaleX);
        if (unlikely(value)) { values[4] = value; kw_args--; }
      }
      case  5:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_scaleY);
        if (unlikely(value)) { values[5] = value; kw_args--; }
      }
      case  6:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_rotate);
        if (unlikely(value)) { values[6] = value; kw_args--; }
      }
      case  7:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_rotatePtX);
        if (unlikely(value)) { values[7] = value; kw_args--; }
      }
      case  8:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_rotatePtY);
        if (unlikely(value)) { values[8] = value; kw_args--; }
      }
      case  9:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_color);
        if (unlikely(value)) { values[9] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "subImage") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_src = ((struct __pyx_obj_3ege_Image *)values[0]);
    __pyx_v_x = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[3]) {
      __pyx_v_bilinear = __Pyx_PyObject_IsTrue(values[3]); if (unlikely((__pyx_v_bilinear == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_bilinear = 0;
    }
    if (values[4]) {
      __pyx_v_scaleX = __pyx_PyFloat_AsDouble(values[4]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_scaleX = 1.0;
    }
    if (values[5]) {
      __pyx_v_scaleY = __pyx_PyFloat_AsDouble(values[5]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_scaleY = 1.0;
    }
    if (values[6]) {
      __pyx_v_rotate = __pyx_PyFloat_AsDouble(values[6]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_rotate = 0.0;
    }
    if (values[7]) {
      __pyx_v_rotatePtX = __pyx_PyFloat_AsDouble(values[7]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_rotatePtX = 0.0;
    }
    if (values[8]) {
      __pyx_v_rotatePtY = __pyx_PyFloat_AsDouble(values[8]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_rotatePtY = 0.0;
    }
    __pyx_v_color = values[9];
  } else {
    __pyx_v_bilinear = 0;
    __pyx_v_scaleX = 1.0;
    __pyx_v_scaleY = 1.0;
    __pyx_v_rotate = 0.0;
    __pyx_v_rotatePtX = 0.0;
    __pyx_v_rotatePtY = 0.0;
    __pyx_v_color = __pyx_k_76;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case 10:
      __pyx_v_color = PyTuple_GET_ITEM(__pyx_args, 9);
      case  9:
      __pyx_v_rotatePtY = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 8)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  8:
      __pyx_v_rotatePtX = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 7)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  7:
      __pyx_v_rotate = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 6)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  6:
      __pyx_v_scaleY = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 5)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  5:
      __pyx_v_scaleX = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 4)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  4:
      __pyx_v_bilinear = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_bilinear == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3:
      __pyx_v_y = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_x = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_src = ((struct __pyx_obj_3ege_Image *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("subImage", 0, 3, 10, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.Image.subImage");
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_src), __pyx_ptype_3ege_Image, 1, "src", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":716
 *         cdef int colorLength
 *         cdef unsigned char *arrayColor
 *         if(color):             # <<<<<<<<<<<<<<
 *             colorLength = len( color )
 *             arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_color); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "C:\Python26\Lib\site-packages\ege.pyx":717
 *         cdef unsigned char *arrayColor
 *         if(color):
 *             colorLength = len( color )             # <<<<<<<<<<<<<<
 *             arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *             arrayColor[0] = color[0]
 */
    __pyx_t_2 = PyObject_Length(__pyx_v_color); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_colorLength = __pyx_t_2;

    /* "C:\Python26\Lib\site-packages\ege.pyx":718
 *         if(color):
 *             colorLength = len( color )
 *             arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))             # <<<<<<<<<<<<<<
 *             arrayColor[0] = color[0]
 *             arrayColor[1] = color[1]
 */
    __pyx_v_arrayColor = ((unsigned char *)malloc((4 * (sizeof(unsigned char)))));

    /* "C:\Python26\Lib\site-packages\ege.pyx":719
 *             colorLength = len( color )
 *             arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *             arrayColor[0] = color[0]             # <<<<<<<<<<<<<<
 *             arrayColor[1] = color[1]
 *             arrayColor[2] = color[2]
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 0, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_3 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_3 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[0]) = __pyx_t_3;

    /* "C:\Python26\Lib\site-packages\ege.pyx":720
 *             arrayColor = <unsigned char *>malloc(4 * sizeof(unsigned char))
 *             arrayColor[0] = color[0]
 *             arrayColor[1] = color[1]             # <<<<<<<<<<<<<<
 *             arrayColor[2] = color[2]
 *             if( colorLength == 3):
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 1, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_3 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_3 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[1]) = __pyx_t_3;

    /* "C:\Python26\Lib\site-packages\ege.pyx":721
 *             arrayColor[0] = color[0]
 *             arrayColor[1] = color[1]
 *             arrayColor[2] = color[2]             # <<<<<<<<<<<<<<
 *             if( colorLength == 3):
 *                 arrayColor[3] = 255
 */
    __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 2, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __pyx_t_3 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_3 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
    (__pyx_v_arrayColor[2]) = __pyx_t_3;

    /* "C:\Python26\Lib\site-packages\ege.pyx":722
 *             arrayColor[1] = color[1]
 *             arrayColor[2] = color[2]
 *             if( colorLength == 3):             # <<<<<<<<<<<<<<
 *                 arrayColor[3] = 255
 *             elif( colorLength == 4):
 */
    switch (__pyx_v_colorLength) {
      case 3:

      /* "C:\Python26\Lib\site-packages\ege.pyx":723
 *             arrayColor[2] = color[2]
 *             if( colorLength == 3):
 *                 arrayColor[3] = 255             # <<<<<<<<<<<<<<
 *             elif( colorLength == 4):
 *                 arrayColor[3] = color[3]
 */
      (__pyx_v_arrayColor[3]) = 255;
      break;

      /* "C:\Python26\Lib\site-packages\ege.pyx":724
 *             if( colorLength == 3):
 *                 arrayColor[3] = 255
 *             elif( colorLength == 4):             # <<<<<<<<<<<<<<
 *                 arrayColor[3] = color[3]
 *             #else:
 */
      case 4:

      /* "C:\Python26\Lib\site-packages\ege.pyx":725
 *                 arrayColor[3] = 255
 *             elif( colorLength == 4):
 *                 arrayColor[3] = color[3]             # <<<<<<<<<<<<<<
 *             #else:
 *             #    kasta exception
 */
      __pyx_1 = __Pyx_GetItemInt(__pyx_v_color, 3, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 725; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_1);
      __pyx_t_3 = __Pyx_PyInt_AsUnsignedChar(__pyx_1); if (unlikely((__pyx_t_3 == (unsigned char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 725; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
      (__pyx_v_arrayColor[3]) = __pyx_t_3;
      break;
    }
    goto __pyx_L6;
  }
  /*else*/ {

    /* "C:\Python26\Lib\site-packages\ege.pyx":729
 *             #    kasta exception
 *         else:
 *             arrayColor = NULL             # <<<<<<<<<<<<<<
 *         self.thisPtr.drawSubImg(src.thisPtr, x, y, bilinear, scaleX, scaleY, rotate, rotatePtX, rotatePtY, arrayColor)
 * 
 */
    __pyx_v_arrayColor = NULL;
  }
  __pyx_L6:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":730
 *         else:
 *             arrayColor = NULL
 *         self.thisPtr.drawSubImg(src.thisPtr, x, y, bilinear, scaleX, scaleY, rotate, rotatePtX, rotatePtY, arrayColor)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_3ege_Image *)__pyx_v_self)->thisPtr->drawSubImg(__pyx_v_src->thisPtr, __pyx_v_x, __pyx_v_y, __pyx_v_bilinear, __pyx_v_scaleX, __pyx_v_scaleY, __pyx_v_rotate, __pyx_v_rotatePtX, __pyx_v_rotatePtY, __pyx_v_arrayColor);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_1);
  __Pyx_AddTraceback("ege.Image.subImage");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":751
 * cdef class Timer:
 *     cdef c_Timer *thisPtr
 *     def __cinit__(self, double time = 0, bint start = True):             # <<<<<<<<<<<<<<
 *         self.thisPtr = new_Timer(time, start)
 * 
 */

static int __pyx_pf_3ege_5Timer___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_3ege_5Timer___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_time;
  int __pyx_v_start;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_time,&__pyx_kp_start,0};
  __Pyx_SetupRefcountContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_time);
        if (unlikely(value)) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_kp_start);
        if (unlikely(value)) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 751; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    if (values[0]) {
      __pyx_v_time = __pyx_PyFloat_AsDouble(values[0]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 751; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_time = ((double)0);
    }
    if (values[1]) {
      __pyx_v_start = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_start == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 751; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_start = 1;
    }
  } else {
    __pyx_v_time = ((double)0);
    __pyx_v_start = 1;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_start = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_start == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 751; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_time = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 751; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 751; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.Timer.__cinit__");
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":752
 *     cdef c_Timer *thisPtr
 *     def __cinit__(self, double time = 0, bint start = True):
 *         self.thisPtr = new_Timer(time, start)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_3ege_Timer *)__pyx_v_self)->thisPtr = new Timer(__pyx_v_time, __pyx_v_start);

  __pyx_r = 0;
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":754
 *         self.thisPtr = new_Timer(time, start)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del_Timer(self.thisPtr)
 * 
 */

static void __pyx_pf_3ege_5Timer___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_3ege_5Timer___dealloc__(PyObject *__pyx_v_self) {
  __Pyx_SetupRefcountContext("__dealloc__");

  /* "C:\Python26\Lib\site-packages\ege.pyx":755
 * 
 *     def __dealloc__(self):
 *         del_Timer(self.thisPtr)             # <<<<<<<<<<<<<<
 * 
 *     def resume(self):
 */
  delete(((struct __pyx_obj_3ege_Timer *)__pyx_v_self)->thisPtr);

  __Pyx_FinishRefcountContext();
}

/* "C:\Python26\Lib\site-packages\ege.pyx":757
 *         del_Timer(self.thisPtr)
 * 
 *     def resume(self):             # <<<<<<<<<<<<<<
 *         self.thisPtr.resume()
 * 
 */

static PyObject *__pyx_pf_3ege_5Timer_resume(PyObject *__pyx_v_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_5Timer_resume(PyObject *__pyx_v_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("resume");

  /* "C:\Python26\Lib\site-packages\ege.pyx":758
 * 
 *     def resume(self):
 *         self.thisPtr.resume()             # <<<<<<<<<<<<<<
 * 
 *     def pause(self):
 */
  ((struct __pyx_obj_3ege_Timer *)__pyx_v_self)->thisPtr->resume();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":760
 *         self.thisPtr.resume()
 * 
 *     def pause(self):             # <<<<<<<<<<<<<<
 *         self.thisPtr.pause()
 * 
 */

static PyObject *__pyx_pf_3ege_5Timer_pause(PyObject *__pyx_v_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_5Timer_pause(PyObject *__pyx_v_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("pause");

  /* "C:\Python26\Lib\site-packages\ege.pyx":761
 * 
 *     def pause(self):
 *         self.thisPtr.pause()             # <<<<<<<<<<<<<<
 * 
 *     def togglePause(self):
 */
  ((struct __pyx_obj_3ege_Timer *)__pyx_v_self)->thisPtr->pause();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":763
 *         self.thisPtr.pause()
 * 
 *     def togglePause(self):             # <<<<<<<<<<<<<<
 *         self.thisPtr.togglePause()
 * 
 */

static PyObject *__pyx_pf_3ege_5Timer_togglePause(PyObject *__pyx_v_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_5Timer_togglePause(PyObject *__pyx_v_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("togglePause");

  /* "C:\Python26\Lib\site-packages\ege.pyx":764
 * 
 *     def togglePause(self):
 *         self.thisPtr.togglePause()             # <<<<<<<<<<<<<<
 * 
 *     def stop(self):
 */
  ((struct __pyx_obj_3ege_Timer *)__pyx_v_self)->thisPtr->togglePause();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":766
 *         self.thisPtr.togglePause()
 * 
 *     def stop(self):             # <<<<<<<<<<<<<<
 *         self.thisPtr.stop()
 * 
 */

static PyObject *__pyx_pf_3ege_5Timer_stop(PyObject *__pyx_v_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_5Timer_stop(PyObject *__pyx_v_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("stop");

  /* "C:\Python26\Lib\site-packages\ege.pyx":767
 * 
 *     def stop(self):
 *         self.thisPtr.stop()             # <<<<<<<<<<<<<<
 * 
 *     def setTime(self, double time):
 */
  ((struct __pyx_obj_3ege_Timer *)__pyx_v_self)->thisPtr->stop();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":769
 *         self.thisPtr.stop()
 * 
 *     def setTime(self, double time):             # <<<<<<<<<<<<<<
 *         self.thisPtr.setTime(time)
 * 
 */

static PyObject *__pyx_pf_3ege_5Timer_setTime(PyObject *__pyx_v_self, PyObject *__pyx_arg_time); /*proto*/
static PyObject *__pyx_pf_3ege_5Timer_setTime(PyObject *__pyx_v_self, PyObject *__pyx_arg_time) {
  double __pyx_v_time;
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("setTime");
  assert(__pyx_arg_time); {
    __pyx_v_time = __pyx_PyFloat_AsDouble(__pyx_arg_time); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 769; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.Timer.setTime");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":770
 * 
 *     def setTime(self, double time):
 *         self.thisPtr.setTime(time)             # <<<<<<<<<<<<<<
 * 
 *     def getTime(self):
 */
  ((struct __pyx_obj_3ege_Timer *)__pyx_v_self)->thisPtr->setTime(__pyx_v_time);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":772
 *         self.thisPtr.setTime(time)
 * 
 *     def getTime(self):             # <<<<<<<<<<<<<<
 *         return self.thisPtr.getTime()
 * 
 */

static PyObject *__pyx_pf_3ege_5Timer_getTime(PyObject *__pyx_v_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_5Timer_getTime(PyObject *__pyx_v_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_SetupRefcountContext("getTime");

  /* "C:\Python26\Lib\site-packages\ege.pyx":773
 * 
 *     def getTime(self):
 *         return self.thisPtr.getTime()             # <<<<<<<<<<<<<<
 * 
 *     def addTime(self, double time):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_3ege_Timer *)__pyx_v_self)->thisPtr->getTime()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("ege.Timer.getTime");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":775
 *         return self.thisPtr.getTime()
 * 
 *     def addTime(self, double time):             # <<<<<<<<<<<<<<
 *         self.thisPtr.addTime(time)
 * 
 */

static PyObject *__pyx_pf_3ege_5Timer_addTime(PyObject *__pyx_v_self, PyObject *__pyx_arg_time); /*proto*/
static PyObject *__pyx_pf_3ege_5Timer_addTime(PyObject *__pyx_v_self, PyObject *__pyx_arg_time) {
  double __pyx_v_time;
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("addTime");
  assert(__pyx_arg_time); {
    __pyx_v_time = __pyx_PyFloat_AsDouble(__pyx_arg_time); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 775; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.Timer.addTime");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":776
 * 
 *     def addTime(self, double time):
 *         self.thisPtr.addTime(time)             # <<<<<<<<<<<<<<
 * 
 *     def isRunning(self):
 */
  ((struct __pyx_obj_3ege_Timer *)__pyx_v_self)->thisPtr->addTime(__pyx_v_time);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":778
 *         self.thisPtr.addTime(time)
 * 
 *     def isRunning(self):             # <<<<<<<<<<<<<<
 *         return self.thisPtr.isRunning()
 * 
 */

static PyObject *__pyx_pf_3ege_5Timer_isRunning(PyObject *__pyx_v_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_5Timer_isRunning(PyObject *__pyx_v_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_SetupRefcountContext("isRunning");

  /* "C:\Python26\Lib\site-packages\ege.pyx":779
 * 
 *     def isRunning(self):
 *         return self.thisPtr.isRunning()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_3ege_Timer *)__pyx_v_self)->thisPtr->isRunning()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 779; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("ege.Timer.isRunning");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":845
 * cdef class Sound:
 *     cdef c_Sound *thisPtr
 *     def __cinit__(self, filename, bint stream):             # <<<<<<<<<<<<<<
 *         self.thisPtr = new_Sound(filename, stream)
 * 
 */

static int __pyx_pf_3ege_5Sound___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_3ege_5Sound___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_filename = 0;
  int __pyx_v_stream;
  int __pyx_r;
  char *__pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_kp_filename,&__pyx_kp_stream,0};
  __Pyx_SetupRefcountContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_kp_filename);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_kp_stream);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_filename = values[0];
    __pyx_v_stream = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_stream == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_filename = PyTuple_GET_ITEM(__pyx_args, 0);
    __pyx_v_stream = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_stream == (int)-1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.Sound.__cinit__");
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":846
 *     cdef c_Sound *thisPtr
 *     def __cinit__(self, filename, bint stream):
 *         self.thisPtr = new_Sound(filename, stream)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_1 = __Pyx_PyBytes_AsString(__pyx_v_filename); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 846; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_3ege_Sound *)__pyx_v_self)->thisPtr = new Sound(__pyx_t_1, __pyx_v_stream);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("ege.Sound.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":848
 *         self.thisPtr = new_Sound(filename, stream)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del_Sound(self.thisPtr)
 * 
 */

static void __pyx_pf_3ege_5Sound___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_3ege_5Sound___dealloc__(PyObject *__pyx_v_self) {
  __Pyx_SetupRefcountContext("__dealloc__");

  /* "C:\Python26\Lib\site-packages\ege.pyx":849
 * 
 *     def __dealloc__(self):
 *         del_Sound(self.thisPtr)             # <<<<<<<<<<<<<<
 * 
 *     def play(self):
 */
  delete(((struct __pyx_obj_3ege_Sound *)__pyx_v_self)->thisPtr);

  __Pyx_FinishRefcountContext();
}

/* "C:\Python26\Lib\site-packages\ege.pyx":851
 *         del_Sound(self.thisPtr)
 * 
 *     def play(self):             # <<<<<<<<<<<<<<
 *         self.thisPtr.play()
 * 
 */

static PyObject *__pyx_pf_3ege_5Sound_play(PyObject *__pyx_v_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_5Sound_play(PyObject *__pyx_v_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("play");

  /* "C:\Python26\Lib\site-packages\ege.pyx":852
 * 
 *     def play(self):
 *         self.thisPtr.play()             # <<<<<<<<<<<<<<
 * 
 *     def pause(self):
 */
  ((struct __pyx_obj_3ege_Sound *)__pyx_v_self)->thisPtr->play();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":854
 *         self.thisPtr.play()
 * 
 *     def pause(self):             # <<<<<<<<<<<<<<
 *         self.thisPtr.pause()
 * 
 */

static PyObject *__pyx_pf_3ege_5Sound_pause(PyObject *__pyx_v_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_5Sound_pause(PyObject *__pyx_v_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("pause");

  /* "C:\Python26\Lib\site-packages\ege.pyx":855
 * 
 *     def pause(self):
 *         self.thisPtr.pause()             # <<<<<<<<<<<<<<
 * 
 *     def stop(self):
 */
  ((struct __pyx_obj_3ege_Sound *)__pyx_v_self)->thisPtr->pause();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":857
 *         self.thisPtr.pause()
 * 
 *     def stop(self):             # <<<<<<<<<<<<<<
 *         self.thisPtr.stop()
 * 
 */

static PyObject *__pyx_pf_3ege_5Sound_stop(PyObject *__pyx_v_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_5Sound_stop(PyObject *__pyx_v_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("stop");

  /* "C:\Python26\Lib\site-packages\ege.pyx":858
 * 
 *     def stop(self):
 *         self.thisPtr.stop()             # <<<<<<<<<<<<<<
 * 
 *     def setPosition(self, int pos):
 */
  ((struct __pyx_obj_3ege_Sound *)__pyx_v_self)->thisPtr->stop();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":860
 *         self.thisPtr.stop()
 * 
 *     def setPosition(self, int pos):             # <<<<<<<<<<<<<<
 *         self.thisPtr.setPosition(pos)
 * 
 */

static PyObject *__pyx_pf_3ege_5Sound_setPosition(PyObject *__pyx_v_self, PyObject *__pyx_arg_pos); /*proto*/
static PyObject *__pyx_pf_3ege_5Sound_setPosition(PyObject *__pyx_v_self, PyObject *__pyx_arg_pos) {
  int __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("setPosition");
  assert(__pyx_arg_pos); {
    __pyx_v_pos = __Pyx_PyInt_AsInt(__pyx_arg_pos); if (unlikely((__pyx_v_pos == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 860; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.Sound.setPosition");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":861
 * 
 *     def setPosition(self, int pos):
 *         self.thisPtr.setPosition(pos)             # <<<<<<<<<<<<<<
 * 
 *     def setFrequency(self, float hz):
 */
  ((struct __pyx_obj_3ege_Sound *)__pyx_v_self)->thisPtr->setPosition(__pyx_v_pos);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":863
 *         self.thisPtr.setPosition(pos)
 * 
 *     def setFrequency(self, float hz):             # <<<<<<<<<<<<<<
 *         self.thisPtr.setFrequency(hz)
 * 
 */

static PyObject *__pyx_pf_3ege_5Sound_setFrequency(PyObject *__pyx_v_self, PyObject *__pyx_arg_hz); /*proto*/
static PyObject *__pyx_pf_3ege_5Sound_setFrequency(PyObject *__pyx_v_self, PyObject *__pyx_arg_hz) {
  float __pyx_v_hz;
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("setFrequency");
  assert(__pyx_arg_hz); {
    __pyx_v_hz = __pyx_PyFloat_AsDouble(__pyx_arg_hz); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 863; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.Sound.setFrequency");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":864
 * 
 *     def setFrequency(self, float hz):
 *         self.thisPtr.setFrequency(hz)             # <<<<<<<<<<<<<<
 * 
 *     def setPan(self, float pan):
 */
  ((struct __pyx_obj_3ege_Sound *)__pyx_v_self)->thisPtr->setFrequency(__pyx_v_hz);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":866
 *         self.thisPtr.setFrequency(hz)
 * 
 *     def setPan(self, float pan):             # <<<<<<<<<<<<<<
 *         self.thisPtr.setPan(pan)
 * 
 */

static PyObject *__pyx_pf_3ege_5Sound_setPan(PyObject *__pyx_v_self, PyObject *__pyx_arg_pan); /*proto*/
static PyObject *__pyx_pf_3ege_5Sound_setPan(PyObject *__pyx_v_self, PyObject *__pyx_arg_pan) {
  float __pyx_v_pan;
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("setPan");
  assert(__pyx_arg_pan); {
    __pyx_v_pan = __pyx_PyFloat_AsDouble(__pyx_arg_pan); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 866; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.Sound.setPan");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":867
 * 
 *     def setPan(self, float pan):
 *         self.thisPtr.setPan(pan)             # <<<<<<<<<<<<<<
 * 
 *     def setVolume(self, float volume):
 */
  ((struct __pyx_obj_3ege_Sound *)__pyx_v_self)->thisPtr->setPan(__pyx_v_pan);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":869
 *         self.thisPtr.setPan(pan)
 * 
 *     def setVolume(self, float volume):             # <<<<<<<<<<<<<<
 *         self.thisPtr.setVolume(volume)
 * 
 */

static PyObject *__pyx_pf_3ege_5Sound_setVolume(PyObject *__pyx_v_self, PyObject *__pyx_arg_volume); /*proto*/
static PyObject *__pyx_pf_3ege_5Sound_setVolume(PyObject *__pyx_v_self, PyObject *__pyx_arg_volume) {
  float __pyx_v_volume;
  PyObject *__pyx_r = NULL;
  __Pyx_SetupRefcountContext("setVolume");
  assert(__pyx_arg_volume); {
    __pyx_v_volume = __pyx_PyFloat_AsDouble(__pyx_arg_volume); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 869; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("ege.Sound.setVolume");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "C:\Python26\Lib\site-packages\ege.pyx":870
 * 
 *     def setVolume(self, float volume):
 *         self.thisPtr.setVolume(volume)             # <<<<<<<<<<<<<<
 * 
 *     def getPosition(self):
 */
  ((struct __pyx_obj_3ege_Sound *)__pyx_v_self)->thisPtr->setVolume(__pyx_v_volume);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":872
 *         self.thisPtr.setVolume(volume)
 * 
 *     def getPosition(self):             # <<<<<<<<<<<<<<
 *         return self.thisPtr.getPosition()
 * 
 */

static PyObject *__pyx_pf_3ege_5Sound_getPosition(PyObject *__pyx_v_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_5Sound_getPosition(PyObject *__pyx_v_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_SetupRefcountContext("getPosition");

  /* "C:\Python26\Lib\site-packages\ege.pyx":873
 * 
 *     def getPosition(self):
 *         return self.thisPtr.getPosition()             # <<<<<<<<<<<<<<
 * 
 *     def getFrequency(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_3ege_Sound *)__pyx_v_self)->thisPtr->getPosition()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 873; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("ege.Sound.getPosition");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":875
 *         return self.thisPtr.getPosition()
 * 
 *     def getFrequency(self):             # <<<<<<<<<<<<<<
 *         return self.thisPtr.getFrequency()
 * 
 */

static PyObject *__pyx_pf_3ege_5Sound_getFrequency(PyObject *__pyx_v_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_5Sound_getFrequency(PyObject *__pyx_v_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_SetupRefcountContext("getFrequency");

  /* "C:\Python26\Lib\site-packages\ege.pyx":876
 * 
 *     def getFrequency(self):
 *         return self.thisPtr.getFrequency()             # <<<<<<<<<<<<<<
 * 
 *     def isPlaying(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_3ege_Sound *)__pyx_v_self)->thisPtr->getFrequency()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 876; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("ege.Sound.getFrequency");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\ege.pyx":878
 *         return self.thisPtr.getFrequency()
 * 
 *     def isPlaying(self):             # <<<<<<<<<<<<<<
 *         return self.thisPtr.isPlaying()
 * 
 */

static PyObject *__pyx_pf_3ege_5Sound_isPlaying(PyObject *__pyx_v_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_3ege_5Sound_isPlaying(PyObject *__pyx_v_self, PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_SetupRefcountContext("isPlaying");

  /* "C:\Python26\Lib\site-packages\ege.pyx":879
 * 
 *     def isPlaying(self):
 *         return self.thisPtr.isPlaying()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_3ege_Sound *)__pyx_v_self)->thisPtr->isPlaying()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 879; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("ege.Sound.isPlaying");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":65
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_copy_shape;
  int __pyx_v_i;
  int __pyx_v_ndim;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  int __pyx_v_t;
  char *__pyx_v_f;
  PyArray_Descr *__pyx_v_descr = 0;
  int __pyx_v_offset;
  int __pyx_v_hasfields;
  int __pyx_r;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  char *__pyx_t_7;
  __Pyx_SetupRefcountContext("__getbuffer__");
  if (__pyx_v_info == NULL) return 0;
  __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(__pyx_v_info->obj);

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":71
 *             # of flags
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":72
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":74
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_v_ndim = PyArray_NDIM(((PyArrayObject *)__pyx_v_self));

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":76
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
  __pyx_t_1 = ((sizeof(npy_intp)) != (sizeof(Py_ssize_t)));
  if (__pyx_t_1) {

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":77
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 copy_shape = 1             # <<<<<<<<<<<<<<
 *             else:
 *                 copy_shape = 0
 */
    __pyx_v_copy_shape = 1;
    goto __pyx_L5;
  }
  /*else*/ {

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":79
 *                 copy_shape = 1
 *             else:
 *                 copy_shape = 0             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */
    __pyx_v_copy_shape = 0;
  }
  __pyx_L5:;

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":81
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError("ndarray is not C contiguous")
 */
  if (((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS)) {

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":82
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError("ndarray is not C contiguous")
 * 
 */
    __pyx_t_1 = (!PyArray_CHKFLAGS(((PyArrayObject *)__pyx_v_self), NPY_C_CONTIGUOUS));
  } else {
    __pyx_t_1 = ((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS);
  }
  if (__pyx_t_1) {

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":83
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError("ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_2));
    __Pyx_INCREF(__pyx_kp_1);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_1);
    __Pyx_GIVEREF(__pyx_kp_1);
    __pyx_t_3 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":85
 *                 raise ValueError("ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError("ndarray is not Fortran contiguous")
 */
  if (((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS)) {

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":86
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError("ndarray is not Fortran contiguous")
 * 
 */
    __pyx_t_1 = (!PyArray_CHKFLAGS(((PyArrayObject *)__pyx_v_self), NPY_F_CONTIGUOUS));
  } else {
    __pyx_t_1 = ((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS);
  }
  if (__pyx_t_1) {

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":87
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError("ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __Pyx_INCREF(__pyx_kp_2);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_2);
    __Pyx_GIVEREF(__pyx_kp_2);
    __pyx_t_2 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_2, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L7;
  }
  __pyx_L7:;

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":89
 *                 raise ValueError("ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if copy_shape:
 */
  __pyx_v_info->buf = PyArray_DATA(((PyArrayObject *)__pyx_v_self));

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":90
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if copy_shape:
 *                 # Allocate new buffer for strides and shape info. This is allocated
 */
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":91
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info. This is allocated
 *                 # as one block, strides first.
 */
  __pyx_t_4 = __pyx_v_copy_shape;
  if (__pyx_t_4) {

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":94
 *                 # Allocate new buffer for strides and shape info. This is allocated
 *                 # as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * ndim * 2)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */
    __pyx_v_info->strides = ((Py_ssize_t *)malloc((((sizeof(Py_ssize_t)) * __pyx_v_ndim) * 2)));

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":95
 *                 # as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * ndim * 2)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":96
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * ndim * 2)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */
    for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_v_ndim; __pyx_t_4+=1) {
      __pyx_v_i = __pyx_t_4;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":97
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(((PyArrayObject *)__pyx_v_self))[__pyx_v_i]);

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":98
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(((PyArrayObject *)__pyx_v_self))[__pyx_v_i]);
    }
    goto __pyx_L8;
  }
  /*else*/ {

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":100
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(((PyArrayObject *)__pyx_v_self)));

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":101
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(((PyArrayObject *)__pyx_v_self)));
  }
  __pyx_L8:;

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":102
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */
  __pyx_v_info->suboffsets = NULL;

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":103
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(((PyArrayObject *)__pyx_v_self));

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":104
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */
  __pyx_v_info->readonly = (!PyArray_ISWRITEABLE(((PyArrayObject *)__pyx_v_self)));

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":107
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = self.descr
 *             cdef list stack
 */
  __pyx_v_f = NULL;

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":108
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = self.descr             # <<<<<<<<<<<<<<
 *             cdef list stack
 *             cdef int offset
 */
  __Pyx_INCREF(((PyObject *)((PyArrayObject *)__pyx_v_self)->descr));
  __pyx_v_descr = ((PyArrayObject *)__pyx_v_self)->descr;

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":112
 *             cdef int offset
 * 
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields and not copy_shape:
 */
  __pyx_v_hasfields = PyDataType_HASFIELDS(__pyx_v_descr);

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":114
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
  if ((!__pyx_v_hasfields)) {
    __pyx_t_1 = (!__pyx_v_copy_shape);
  } else {
    __pyx_t_1 = (!__pyx_v_hasfields);
  }
  if (__pyx_t_1) {

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":116
 *             if not hasfields and not copy_shape:
 *                 # do not call releasebuffer
 *                 info.obj = None             # <<<<<<<<<<<<<<
 *             else:
 *                 # need to call releasebuffer
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = Py_None;
    goto __pyx_L11;
  }
  /*else*/ {

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":119
 *             else:
 *                 # need to call releasebuffer
 *                 info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields:
 */
    __Pyx_INCREF(__pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = __pyx_v_self;
  }
  __pyx_L11:;

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":121
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == '>' and little_endian) or
 */
  __pyx_t_1 = (!__pyx_v_hasfields);
  if (__pyx_t_1) {

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":122
 * 
 *             if not hasfields:
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == '>' and little_endian) or
 *                     (descr.byteorder == '<' and not little_endian)):
 */
    __pyx_v_t = __pyx_v_descr->type_num;

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":123
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == '>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == '<' and not little_endian)):
 *                     raise ValueError("Non-native byte order not supported")
 */
    if ((__pyx_v_descr->byteorder == '>')) {
      __pyx_t_1 = __pyx_v_little_endian;
    } else {
      __pyx_t_1 = (__pyx_v_descr->byteorder == '>');
    }
    if (!__pyx_t_1) {

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":124
 *                 t = descr.type_num
 *                 if ((descr.byteorder == '>' and little_endian) or
 *                     (descr.byteorder == '<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError("Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */
      if ((__pyx_v_descr->byteorder == '<')) {
        __pyx_t_5 = (!__pyx_v_little_endian);
      } else {
        __pyx_t_5 = (__pyx_v_descr->byteorder == '<');
      }
      __pyx_t_6 = __pyx_t_5;
    } else {
      __pyx_t_6 = __pyx_t_1;
    }
    if (__pyx_t_6) {

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":125
 *                 if ((descr.byteorder == '>' and little_endian) or
 *                     (descr.byteorder == '<' and not little_endian)):
 *                     raise ValueError("Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_2));
      __Pyx_INCREF(__pyx_kp_5);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_5);
      __Pyx_GIVEREF(__pyx_kp_5);
      __pyx_t_3 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L13;
    }
    __pyx_L13:;

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":126
 *                     (descr.byteorder == '<' and not little_endian)):
 *                     raise ValueError("Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */
    switch (__pyx_v_t) {
      case NPY_BYTE:
      __pyx_v_f = __pyx_k_6;
      break;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":127
 *                     raise ValueError("Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */
      case NPY_UBYTE:
      __pyx_v_f = __pyx_k_7;
      break;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":128
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */
      case NPY_SHORT:
      __pyx_v_f = __pyx_k_8;
      break;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":129
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */
      case NPY_USHORT:
      __pyx_v_f = __pyx_k_9;
      break;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":130
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */
      case NPY_INT:
      __pyx_v_f = __pyx_k_10;
      break;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":131
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */
      case NPY_UINT:
      __pyx_v_f = __pyx_k_11;
      break;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":132
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */
      case NPY_LONG:
      __pyx_v_f = __pyx_k_12;
      break;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":133
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */
      case NPY_ULONG:
      __pyx_v_f = __pyx_k_13;
      break;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":134
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */
      case NPY_LONGLONG:
      __pyx_v_f = __pyx_k_14;
      break;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":135
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */
      case NPY_ULONGLONG:
      __pyx_v_f = __pyx_k_15;
      break;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":136
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */
      case NPY_FLOAT:
      __pyx_v_f = __pyx_k_16;
      break;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":137
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */
      case NPY_DOUBLE:
      __pyx_v_f = __pyx_k_17;
      break;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":138
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */
      case NPY_LONGDOUBLE:
      __pyx_v_f = __pyx_k_18;
      break;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":139
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */
      case NPY_CFLOAT:
      __pyx_v_f = __pyx_k_19;
      break;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":140
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */
      case NPY_CDOUBLE:
      __pyx_v_f = __pyx_k_20;
      break;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":141
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */
      case NPY_CLONGDOUBLE:
      __pyx_v_f = __pyx_k_21;
      break;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":142
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError("unknown dtype code in numpy.pxd (%d)" % t)
 */
      case NPY_OBJECT:
      __pyx_v_f = __pyx_k_22;
      break;
      default:

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":144
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError("unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */
      __pyx_t_3 = PyInt_FromLong(__pyx_v_t); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = PyNumber_Remainder(__pyx_kp_23, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_3));
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_2, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      break;
    }

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":145
 *                 else:
 *                     raise ValueError("unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */
    __pyx_v_info->format = __pyx_v_f;

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":146
 *                     raise ValueError("unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 */
    __pyx_r = 0;
    goto __pyx_L0;
    goto __pyx_L12;
  }
  /*else*/ {

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":148
 *                 return
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = '^' # Native data types, manual alignment
 *                 offset = 0
 */
    __pyx_v_info->format = ((char *)malloc(255));

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":149
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = '^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */
    (__pyx_v_info->format[0]) = '^';

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":150
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = '^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */
    __pyx_v_offset = 0;

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":153
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)             # <<<<<<<<<<<<<<
 *                 f[0] = 0 # Terminate format string
 * 
 */
    __pyx_t_7 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 255), (&__pyx_v_offset)); if (unlikely(__pyx_t_7 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_f = __pyx_t_7;

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":154
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = 0 # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */
    (__pyx_v_f[0]) = 0;
  }
  __pyx_L12:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__");
  __pyx_r = -1;
  __Pyx_GOTREF(__pyx_v_info->obj);
  __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(Py_None);
    __Pyx_DECREF(Py_None); __pyx_v_info->obj = NULL;
  }
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

/* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":156
 *                 f[0] = 0 # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

static void __pyx_pf_5numpy_7ndarray___releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
static void __pyx_pf_5numpy_7ndarray___releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_SetupRefcountContext("__releasebuffer__");

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":157
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_t_1 = PyArray_HASFIELDS(((PyArrayObject *)__pyx_v_self));
  if (__pyx_t_1) {

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":158
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)
 */
    free(__pyx_v_info->format);
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":159
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  __pyx_t_2 = ((sizeof(npy_intp)) != (sizeof(Py_ssize_t)));
  if (__pyx_t_2) {

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":160
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */
    free(__pyx_v_info->strides);
    goto __pyx_L6;
  }
  __pyx_L6:;

  __Pyx_FinishRefcountContext();
}

/* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":277
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

static INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child;
  PyObject *__pyx_v_i;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  PyObject *__pyx_v_new_offset;
  PyObject *__pyx_v_t;
  char *__pyx_r;
  PyObject *__pyx_1 = 0;
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  char *__pyx_t_9;
  __Pyx_SetupRefcountContext("_util_dtypestring");
  __pyx_v_child = ((PyArray_Descr *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_i = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_new_offset = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_t = Py_None; __Pyx_INCREF(Py_None);

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":284
 *     cdef int delta_offset
 *     cdef tuple i
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":285
 *     cdef tuple i
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *     for i in descr.fields.itervalues():
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":287
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *     for i in descr.fields.itervalues():             # <<<<<<<<<<<<<<
 *         child = i[0]
 *         new_offset = i[1]
 */
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_descr->fields, __pyx_kp_itervalues); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_1 = 0; __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2);
  } else {
    __pyx_t_1 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_2))) {
      if (__pyx_t_1 >= PyList_GET_SIZE(__pyx_t_2)) break;
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_1); __Pyx_INCREF(__pyx_t_3); __pyx_t_1++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_2))) {
      if (__pyx_t_1 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_1); __Pyx_INCREF(__pyx_t_3); __pyx_t_1++;
    } else {
      __pyx_t_3 = PyIter_Next(__pyx_t_2);
      if (!__pyx_t_3) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    if (!(likely(PyTuple_CheckExact(__pyx_t_3)) || (__pyx_t_3) == Py_None || (PyErr_Format(PyExc_TypeError, "Expected tuple, got %s", Py_TYPE(__pyx_t_3)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_v_i));
    __pyx_v_i = ((PyObject *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":288
 * 
 *     for i in descr.fields.itervalues():
 *         child = i[0]             # <<<<<<<<<<<<<<
 *         new_offset = i[1]
 * 
 */
    __pyx_1 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_i), 0, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    if (!(__Pyx_TypeTest(__pyx_1, __pyx_ptype_5numpy_dtype))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_v_child));
    __pyx_v_child = ((PyArray_Descr *)__pyx_1);
    __pyx_1 = 0;

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":289
 *     for i in descr.fields.itervalues():
 *         child = i[0]
 *         new_offset = i[1]             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - (new_offset - offset[0]) < 15:
 */
    __pyx_1 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_i), 1, sizeof(long), PyInt_FromLong); if (!__pyx_1) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_1);
    __Pyx_DECREF(__pyx_v_new_offset);
    __pyx_v_new_offset = __pyx_1;
    __pyx_1 = 0;

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":291
 *         new_offset = i[1]
 * 
 *         if (end - f) - (new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError("Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    __pyx_t_3 = PyInt_FromLong((__pyx_v_end - __pyx_v_f)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyInt_FromLong((__pyx_v_offset[0])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Subtract(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_RichCompare(__pyx_t_4, __pyx_int_15, Py_LT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_6) {

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":292
 * 
 *         if (end - f) - (new_offset - offset[0]) < 15:
 *             raise RuntimeError("Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == '>' and little_endian) or
 */
      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_5));
      __Pyx_INCREF(__pyx_kp_25);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_kp_25);
      __Pyx_GIVEREF(__pyx_kp_25);
      __pyx_t_4 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
      __Pyx_Raise(__pyx_t_4, 0, 0);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L5;
    }
    __pyx_L5:;

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":294
 *             raise RuntimeError("Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == '>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == '<' and not little_endian)):
 *             raise ValueError("Non-native byte order not supported")
 */
    if ((__pyx_v_child->byteorder == '>')) {
      __pyx_t_6 = __pyx_v_little_endian;
    } else {
      __pyx_t_6 = (__pyx_v_child->byteorder == '>');
    }
    if (!__pyx_t_6) {

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":295
 * 
 *         if ((child.byteorder == '>' and little_endian) or
 *             (child.byteorder == '<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError("Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */
      if ((__pyx_v_child->byteorder == '<')) {
        __pyx_t_7 = (!__pyx_v_little_endian);
      } else {
        __pyx_t_7 = (__pyx_v_child->byteorder == '<');
      }
      __pyx_t_8 = __pyx_t_7;
    } else {
      __pyx_t_8 = __pyx_t_6;
    }
    if (__pyx_t_8) {

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":296
 *         if ((child.byteorder == '>' and little_endian) or
 *             (child.byteorder == '<' and not little_endian)):
 *             raise ValueError("Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_4));
      __Pyx_INCREF(__pyx_kp_28);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_28);
      __Pyx_GIVEREF(__pyx_kp_28);
      __pyx_t_5 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
      __Pyx_Raise(__pyx_t_5, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":306
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */
    while (1) {
      __pyx_t_5 = PyInt_FromLong((__pyx_v_offset[0])); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyObject_RichCompare(__pyx_t_5, __pyx_v_new_offset, Py_LT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (!__pyx_t_8) break;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":307
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */
      (__pyx_v_f[0]) = 120;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":308
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */
      __pyx_v_f += 1;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":309
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */
      (__pyx_v_offset[0]) += 1;
    }

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":311
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */
    (__pyx_v_offset[0]) += __pyx_v_child->elsize;

    /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":313
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
    __pyx_t_8 = (!PyDataType_HASFIELDS(__pyx_v_child));
    if (__pyx_t_8) {

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":314
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError("Format string allocated too short.")
 */
      __pyx_t_4 = PyInt_FromLong(__pyx_v_child->type_num); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_v_t);
      __pyx_v_t = __pyx_t_4;
      __pyx_t_4 = 0;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":315
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError("Format string allocated too short.")
 * 
 */
      __pyx_t_8 = ((__pyx_v_end - __pyx_v_f) < 5);
      if (__pyx_t_8) {

        /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":316
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError("Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(((PyObject *)__pyx_t_4));
        __Pyx_INCREF(__pyx_kp_29);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_29);
        __Pyx_GIVEREF(__pyx_kp_29);
        __pyx_t_5 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
        __Pyx_Raise(__pyx_t_5, 0, 0);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        goto __pyx_L10;
      }
      __pyx_L10:;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":319
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_BYTE); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 98;
        goto __pyx_L11;
      }

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":320
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_UBYTE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 66;
        goto __pyx_L11;
      }

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":321
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_SHORT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 104;
        goto __pyx_L11;
      }

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":322
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_USHORT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 72;
        goto __pyx_L11;
      }

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":323
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_INT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 105;
        goto __pyx_L11;
      }

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":324
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_UINT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 73;
        goto __pyx_L11;
      }

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":325
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_LONG); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 108;
        goto __pyx_L11;
      }

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":326
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_ULONG); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 76;
        goto __pyx_L11;
      }

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":327
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_LONGLONG); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 113;
        goto __pyx_L11;
      }

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":328
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_ULONGLONG); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 81;
        goto __pyx_L11;
      }

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":329
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_FLOAT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 102;
        goto __pyx_L11;
      }

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":330
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */
      __pyx_t_4 = PyInt_FromLong(NPY_DOUBLE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 100;
        goto __pyx_L11;
      }

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":331
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */
      __pyx_t_5 = PyInt_FromLong(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 103;
        goto __pyx_L11;
      }

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":332
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */
      __pyx_t_4 = PyInt_FromLong(NPY_CFLOAT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 102;
        __pyx_v_f += 1;
        goto __pyx_L11;
      }

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":333
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_CDOUBLE); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 100;
        __pyx_v_f += 1;
        goto __pyx_L11;
      }

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":334
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */
      __pyx_t_4 = PyInt_FromLong(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 103;
        __pyx_v_f += 1;
        goto __pyx_L11;
      }

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":335
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError("unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_t_5 = PyInt_FromLong(NPY_OBJECT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 79;
        goto __pyx_L11;
      }
      /*else*/ {

        /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":337
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError("unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */
        __pyx_t_4 = PyNumber_Remainder(__pyx_kp_30, __pyx_v_t); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(((PyObject *)__pyx_t_5));
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_4 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
        __Pyx_Raise(__pyx_t_4, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_L11:;

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":338
 *             else:
 *                 raise ValueError("unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */
      __pyx_v_f += 1;
      goto __pyx_L9;
    }
    /*else*/ {

      /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":342
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */
      __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_v_f = __pyx_t_9;
    }
    __pyx_L9:;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "C:\Python26\Lib\site-packages\Cython\Includes\numpy.pxd":343
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 */
  __pyx_r = __pyx_v_f;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("numpy._util_dtypestring");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_child);
  __Pyx_DECREF(__pyx_v_i);
  __Pyx_DECREF(__pyx_v_new_offset);
  __Pyx_DECREF(__pyx_v_t);
  __Pyx_FinishRefcountContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_3ege_Image(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_3ege_5Image___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_3ege_Image(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_3ege_5Image___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static struct PyMethodDef __pyx_methods_3ege_Image[] = {
  {__Pyx_NAMESTR("draw"), (PyCFunction)__pyx_pf_3ege_5Image_draw, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("getWidth"), (PyCFunction)__pyx_pf_3ege_5Image_getWidth, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("getHeight"), (PyCFunction)__pyx_pf_3ege_5Image_getHeight, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("drawPoints"), (PyCFunction)__pyx_pf_3ege_5Image_drawPoints, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("drawLines"), (PyCFunction)__pyx_pf_3ege_5Image_drawLines, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("drawTriangles"), (PyCFunction)__pyx_pf_3ege_5Image_drawTriangles, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("drawPolygon"), (PyCFunction)__pyx_pf_3ege_5Image_drawPolygon, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("subImage"), (PyCFunction)__pyx_pf_3ege_5Image_subImage, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Image = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Image = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Image = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Image = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_3ege_Image = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("ege.Image"), /*tp_name*/
  sizeof(struct __pyx_obj_3ege_Image), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3ege_Image, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_compare*/
  0, /*tp_repr*/
  &__pyx_tp_as_number_Image, /*tp_as_number*/
  &__pyx_tp_as_sequence_Image, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Image, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Image, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3ege_Image, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3ege_Image, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
};

static PyObject *__pyx_tp_new_3ege_Timer(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_3ege_5Timer___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_3ege_Timer(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_3ege_5Timer___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static struct PyMethodDef __pyx_methods_3ege_Timer[] = {
  {__Pyx_NAMESTR("resume"), (PyCFunction)__pyx_pf_3ege_5Timer_resume, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("pause"), (PyCFunction)__pyx_pf_3ege_5Timer_pause, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("togglePause"), (PyCFunction)__pyx_pf_3ege_5Timer_togglePause, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("stop"), (PyCFunction)__pyx_pf_3ege_5Timer_stop, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setTime"), (PyCFunction)__pyx_pf_3ege_5Timer_setTime, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("getTime"), (PyCFunction)__pyx_pf_3ege_5Timer_getTime, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("addTime"), (PyCFunction)__pyx_pf_3ege_5Timer_addTime, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("isRunning"), (PyCFunction)__pyx_pf_3ege_5Timer_isRunning, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Timer = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Timer = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Timer = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Timer = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_3ege_Timer = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("ege.Timer"), /*tp_name*/
  sizeof(struct __pyx_obj_3ege_Timer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3ege_Timer, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_compare*/
  0, /*tp_repr*/
  &__pyx_tp_as_number_Timer, /*tp_as_number*/
  &__pyx_tp_as_sequence_Timer, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Timer, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Timer, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3ege_Timer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3ege_Timer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
};

static PyObject *__pyx_tp_new_3ege_Sound(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_3ege_5Sound___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_3ege_Sound(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_3ege_5Sound___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static struct PyMethodDef __pyx_methods_3ege_Sound[] = {
  {__Pyx_NAMESTR("play"), (PyCFunction)__pyx_pf_3ege_5Sound_play, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("pause"), (PyCFunction)__pyx_pf_3ege_5Sound_pause, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("stop"), (PyCFunction)__pyx_pf_3ege_5Sound_stop, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setPosition"), (PyCFunction)__pyx_pf_3ege_5Sound_setPosition, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setFrequency"), (PyCFunction)__pyx_pf_3ege_5Sound_setFrequency, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setPan"), (PyCFunction)__pyx_pf_3ege_5Sound_setPan, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setVolume"), (PyCFunction)__pyx_pf_3ege_5Sound_setVolume, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("getPosition"), (PyCFunction)__pyx_pf_3ege_5Sound_getPosition, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("getFrequency"), (PyCFunction)__pyx_pf_3ege_5Sound_getFrequency, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("isPlaying"), (PyCFunction)__pyx_pf_3ege_5Sound_isPlaying, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Sound = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Sound = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Sound = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Sound = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_3ege_Sound = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("ege.Sound"), /*tp_name*/
  sizeof(struct __pyx_obj_3ege_Sound), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3ege_Sound, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_compare*/
  0, /*tp_repr*/
  &__pyx_tp_as_number_Sound, /*tp_as_number*/
  &__pyx_tp_as_sequence_Sound, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Sound, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Sound, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3ege_Sound, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3ege_Sound, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
};

static struct PyMethodDef __pyx_methods[] = {
  {__Pyx_NAMESTR("externalStartServer"), (PyCFunction)__pyx_pf_3ege_externalStartServer, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("externalStartFacilitator"), (PyCFunction)__pyx_pf_3ege_externalStartFacilitator, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("externalStartClient"), (PyCFunction)__pyx_pf_3ege_externalStartClient, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("sendData"), (PyCFunction)__pyx_pf_3ege_sendData, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("receiveData"), (PyCFunction)__pyx_pf_3ege_receiveData, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("isServer"), (PyCFunction)__pyx_pf_3ege_isServer, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("externalInitAll"), (PyCFunction)__pyx_pf_3ege_externalInitAll, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("externalCloseAll"), (PyCFunction)__pyx_pf_3ege_externalCloseAll, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("update"), (PyCFunction)__pyx_pf_3ege_update, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("newWindow"), (PyCFunction)__pyx_pf_3ege_newWindow, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("closeWindow"), (PyCFunction)__pyx_pf_3ege_closeWindow, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setWindowSize"), (PyCFunction)__pyx_pf_3ege_setWindowSize, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setFPS"), (PyCFunction)__pyx_pf_3ege_setFPS, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("showMouseCursor"), (PyCFunction)__pyx_pf_3ege_showMouseCursor, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("drawPoints"), (PyCFunction)__pyx_pf_3ege_drawPoints, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("drawLines"), (PyCFunction)__pyx_pf_3ege_drawLines, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("drawTriangles"), (PyCFunction)__pyx_pf_3ege_drawTriangles, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("drawEllipse"), (PyCFunction)__pyx_pf_3ege_drawEllipse, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("drawPolygon"), (PyCFunction)__pyx_pf_3ege_drawPolygon, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setClearColor"), (PyCFunction)__pyx_pf_3ege_setClearColor, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("getMouseState"), (PyCFunction)__pyx_pf_3ege_getMouseState, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("getKey"), (PyCFunction)__pyx_pf_3ege_getKey, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static void __pyx_init_filenames(void); /*proto*/

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    __Pyx_NAMESTR("ege"),
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp___main__, __pyx_k___main__, sizeof(__pyx_k___main__), 1, 1, 1},
  {&__pyx_kp___cinit__, __pyx_k___cinit__, sizeof(__pyx_k___cinit__), 1, 1, 1},
  {&__pyx_kp___dealloc__, __pyx_k___dealloc__, sizeof(__pyx_k___dealloc__), 1, 1, 1},
  {&__pyx_kp_draw, __pyx_k_draw, sizeof(__pyx_k_draw), 1, 1, 1},
  {&__pyx_kp_getWidth, __pyx_k_getWidth, sizeof(__pyx_k_getWidth), 1, 1, 1},
  {&__pyx_kp_getHeight, __pyx_k_getHeight, sizeof(__pyx_k_getHeight), 1, 1, 1},
  {&__pyx_kp_drawPoints, __pyx_k_drawPoints, sizeof(__pyx_k_drawPoints), 1, 1, 1},
  {&__pyx_kp_drawLines, __pyx_k_drawLines, sizeof(__pyx_k_drawLines), 1, 1, 1},
  {&__pyx_kp_drawTriangles, __pyx_k_drawTriangles, sizeof(__pyx_k_drawTriangles), 1, 1, 1},
  {&__pyx_kp_drawPolygon, __pyx_k_drawPolygon, sizeof(__pyx_k_drawPolygon), 1, 1, 1},
  {&__pyx_kp_subImage, __pyx_k_subImage, sizeof(__pyx_k_subImage), 1, 1, 1},
  {&__pyx_kp_resume, __pyx_k_resume, sizeof(__pyx_k_resume), 1, 1, 1},
  {&__pyx_kp_pause, __pyx_k_pause, sizeof(__pyx_k_pause), 1, 1, 1},
  {&__pyx_kp_togglePause, __pyx_k_togglePause, sizeof(__pyx_k_togglePause), 1, 1, 1},
  {&__pyx_kp_stop, __pyx_k_stop, sizeof(__pyx_k_stop), 1, 1, 1},
  {&__pyx_kp_setTime, __pyx_k_setTime, sizeof(__pyx_k_setTime), 1, 1, 1},
  {&__pyx_kp_getTime, __pyx_k_getTime, sizeof(__pyx_k_getTime), 1, 1, 1},
  {&__pyx_kp_addTime, __pyx_k_addTime, sizeof(__pyx_k_addTime), 1, 1, 1},
  {&__pyx_kp_isRunning, __pyx_k_isRunning, sizeof(__pyx_k_isRunning), 1, 1, 1},
  {&__pyx_kp_play, __pyx_k_play, sizeof(__pyx_k_play), 1, 1, 1},
  {&__pyx_kp_setPosition, __pyx_k_setPosition, sizeof(__pyx_k_setPosition), 1, 1, 1},
  {&__pyx_kp_setFrequency, __pyx_k_setFrequency, sizeof(__pyx_k_setFrequency), 1, 1, 1},
  {&__pyx_kp_setPan, __pyx_k_setPan, sizeof(__pyx_k_setPan), 1, 1, 1},
  {&__pyx_kp_setVolume, __pyx_k_setVolume, sizeof(__pyx_k_setVolume), 1, 1, 1},
  {&__pyx_kp_getPosition, __pyx_k_getPosition, sizeof(__pyx_k_getPosition), 1, 1, 1},
  {&__pyx_kp_getFrequency, __pyx_k_getFrequency, sizeof(__pyx_k_getFrequency), 1, 1, 1},
  {&__pyx_kp_isPlaying, __pyx_k_isPlaying, sizeof(__pyx_k_isPlaying), 1, 1, 1},
  {&__pyx_kp_31, __pyx_k_31, sizeof(__pyx_k_31), 1, 1, 1},
  {&__pyx_kp_behindNAT, __pyx_k_behindNAT, sizeof(__pyx_k_behindNAT), 1, 1, 1},
  {&__pyx_kp_facilitatorAddress, __pyx_k_facilitatorAddress, sizeof(__pyx_k_facilitatorAddress), 1, 1, 1},
  {&__pyx_kp_serverIP, __pyx_k_serverIP, sizeof(__pyx_k_serverIP), 1, 1, 1},
  {&__pyx_kp_serverBehindNAT, __pyx_k_serverBehindNAT, sizeof(__pyx_k_serverBehindNAT), 1, 1, 1},
  {&__pyx_kp_data, __pyx_k_data, sizeof(__pyx_k_data), 1, 1, 1},
  {&__pyx_kp_priority, __pyx_k_priority, sizeof(__pyx_k_priority), 1, 1, 1},
  {&__pyx_kp_reliability, __pyx_k_reliability, sizeof(__pyx_k_reliability), 1, 1, 1},
  {&__pyx_kp_channel, __pyx_k_channel, sizeof(__pyx_k_channel), 1, 1, 1},
  {&__pyx_kp_timeStamp, __pyx_k_timeStamp, sizeof(__pyx_k_timeStamp), 1, 1, 1},
  {&__pyx_kp_svUsers, __pyx_k_svUsers, sizeof(__pyx_k_svUsers), 1, 1, 1},
  {&__pyx_kp_svBroadcast, __pyx_k_svBroadcast, sizeof(__pyx_k_svBroadcast), 1, 1, 1},
  {&__pyx_kp_width, __pyx_k_width, sizeof(__pyx_k_width), 1, 1, 1},
  {&__pyx_kp_height, __pyx_k_height, sizeof(__pyx_k_height), 1, 1, 1},
  {&__pyx_kp_fullscreen, __pyx_k_fullscreen, sizeof(__pyx_k_fullscreen), 1, 1, 1},
  {&__pyx_kp_newFPS, __pyx_k_newFPS, sizeof(__pyx_k_newFPS), 1, 1, 1},
  {&__pyx_kp_show, __pyx_k_show, sizeof(__pyx_k_show), 1, 1, 1},
  {&__pyx_kp_coords, __pyx_k_coords, sizeof(__pyx_k_coords), 1, 1, 1},
  {&__pyx_kp_color, __pyx_k_color, sizeof(__pyx_k_color), 1, 1, 1},
  {&__pyx_kp_size, __pyx_k_size, sizeof(__pyx_k_size), 1, 1, 1},
  {&__pyx_kp_antiAliasing, __pyx_k_antiAliasing, sizeof(__pyx_k_antiAliasing), 1, 1, 1},
  {&__pyx_kp_loop, __pyx_k_loop, sizeof(__pyx_k_loop), 1, 1, 1},
  {&__pyx_kp_stipple, __pyx_k_stipple, sizeof(__pyx_k_stipple), 1, 1, 1},
  {&__pyx_kp_form, __pyx_k_form, sizeof(__pyx_k_form), 1, 1, 1},
  {&__pyx_kp_a, __pyx_k_a, sizeof(__pyx_k_a), 1, 1, 1},
  {&__pyx_kp_b, __pyx_k_b, sizeof(__pyx_k_b), 1, 1, 1},
  {&__pyx_kp_rotate, __pyx_k_rotate, sizeof(__pyx_k_rotate), 1, 1, 1},
  {&__pyx_kp_type, __pyx_k_type, sizeof(__pyx_k_type), 1, 1, 1},
  {&__pyx_kp_key, __pyx_k_key, sizeof(__pyx_k_key), 1, 1, 1},
  {&__pyx_kp_I, __pyx_k_I, sizeof(__pyx_k_I), 1, 1, 1},
  {&__pyx_kp_II, __pyx_k_II, sizeof(__pyx_k_II), 1, 1, 1},
  {&__pyx_kp_III, __pyx_k_III, sizeof(__pyx_k_III), 1, 1, 1},
  {&__pyx_kp_IV, __pyx_k_IV, sizeof(__pyx_k_IV), 1, 1, 1},
  {&__pyx_kp_V, __pyx_k_V, sizeof(__pyx_k_V), 1, 1, 1},
  {&__pyx_kp_x, __pyx_k_x, sizeof(__pyx_k_x), 1, 1, 1},
  {&__pyx_kp_y, __pyx_k_y, sizeof(__pyx_k_y), 1, 1, 1},
  {&__pyx_kp_x_0, __pyx_k_x_0, sizeof(__pyx_k_x_0), 1, 1, 1},
  {&__pyx_kp_y_0, __pyx_k_y_0, sizeof(__pyx_k_y_0), 1, 1, 1},
  {&__pyx_kp_bilinear, __pyx_k_bilinear, sizeof(__pyx_k_bilinear), 1, 1, 1},
  {&__pyx_kp_scaleX, __pyx_k_scaleX, sizeof(__pyx_k_scaleX), 1, 1, 1},
  {&__pyx_kp_scaleY, __pyx_k_scaleY, sizeof(__pyx_k_scaleY), 1, 1, 1},
  {&__pyx_kp_rotatePtX, __pyx_k_rotatePtX, sizeof(__pyx_k_rotatePtX), 1, 1, 1},
  {&__pyx_kp_rotatePtY, __pyx_k_rotatePtY, sizeof(__pyx_k_rotatePtY), 1, 1, 1},
  {&__pyx_kp_src, __pyx_k_src, sizeof(__pyx_k_src), 1, 1, 1},
  {&__pyx_kp_time, __pyx_k_time, sizeof(__pyx_k_time), 1, 1, 1},
  {&__pyx_kp_start, __pyx_k_start, sizeof(__pyx_k_start), 1, 1, 1},
  {&__pyx_kp_filename, __pyx_k_filename, sizeof(__pyx_k_filename), 1, 1, 1},
  {&__pyx_kp_stream, __pyx_k_stream, sizeof(__pyx_k_stream), 1, 1, 1},
  {&__pyx_kp_pos, __pyx_k_pos, sizeof(__pyx_k_pos), 1, 1, 1},
  {&__pyx_kp_hz, __pyx_k_hz, sizeof(__pyx_k_hz), 1, 1, 1},
  {&__pyx_kp_pan, __pyx_k_pan, sizeof(__pyx_k_pan), 1, 1, 1},
  {&__pyx_kp_volume, __pyx_k_volume, sizeof(__pyx_k_volume), 1, 1, 1},
  {&__pyx_kp_SEPARATE, __pyx_k_SEPARATE, sizeof(__pyx_k_SEPARATE), 1, 1, 1},
  {&__pyx_kp_STRIP, __pyx_k_STRIP, sizeof(__pyx_k_STRIP), 1, 1, 1},
  {&__pyx_kp_FAN, __pyx_k_FAN, sizeof(__pyx_k_FAN), 1, 1, 1},
  {&__pyx_kp_MAX_SIZE_OF_PACKET, __pyx_k_MAX_SIZE_OF_PACKET, sizeof(__pyx_k_MAX_SIZE_OF_PACKET), 1, 1, 1},
  {&__pyx_kp_WINDOW, __pyx_k_WINDOW, sizeof(__pyx_k_WINDOW), 1, 1, 1},
  {&__pyx_kp_FULLSCREEN, __pyx_k_FULLSCREEN, sizeof(__pyx_k_FULLSCREEN), 1, 1, 1},
  {&__pyx_kp_MOUSE_BUTTON_LEFT, __pyx_k_MOUSE_BUTTON_LEFT, sizeof(__pyx_k_MOUSE_BUTTON_LEFT), 1, 1, 1},
  {&__pyx_kp_MOUSE_BUTTON_RIGHT, __pyx_k_MOUSE_BUTTON_RIGHT, sizeof(__pyx_k_MOUSE_BUTTON_RIGHT), 1, 1, 1},
  {&__pyx_kp_MOUSE_BUTTON_MIDDLE, __pyx_k_MOUSE_BUTTON_MIDDLE, sizeof(__pyx_k_MOUSE_BUTTON_MIDDLE), 1, 1, 1},
  {&__pyx_kp_KEY_UNKNOWN, __pyx_k_KEY_UNKNOWN, sizeof(__pyx_k_KEY_UNKNOWN), 1, 1, 1},
  {&__pyx_kp_KEY_SPACE, __pyx_k_KEY_SPACE, sizeof(__pyx_k_KEY_SPACE), 1, 1, 1},
  {&__pyx_kp_KEY_SPECIAL, __pyx_k_KEY_SPECIAL, sizeof(__pyx_k_KEY_SPECIAL), 1, 1, 1},
  {&__pyx_kp_KEY_ESC, __pyx_k_KEY_ESC, sizeof(__pyx_k_KEY_ESC), 1, 1, 1},
  {&__pyx_kp_32, __pyx_k_32, sizeof(__pyx_k_32), 1, 1, 1},
  {&__pyx_kp_33, __pyx_k_33, sizeof(__pyx_k_33), 1, 1, 1},
  {&__pyx_kp_34, __pyx_k_34, sizeof(__pyx_k_34), 1, 1, 1},
  {&__pyx_kp_35, __pyx_k_35, sizeof(__pyx_k_35), 1, 1, 1},
  {&__pyx_kp_36, __pyx_k_36, sizeof(__pyx_k_36), 1, 1, 1},
  {&__pyx_kp_37, __pyx_k_37, sizeof(__pyx_k_37), 1, 1, 1},
  {&__pyx_kp_38, __pyx_k_38, sizeof(__pyx_k_38), 1, 1, 1},
  {&__pyx_kp_39, __pyx_k_39, sizeof(__pyx_k_39), 1, 1, 1},
  {&__pyx_kp_40, __pyx_k_40, sizeof(__pyx_k_40), 1, 1, 1},
  {&__pyx_kp_41, __pyx_k_41, sizeof(__pyx_k_41), 1, 1, 1},
  {&__pyx_kp_42, __pyx_k_42, sizeof(__pyx_k_42), 1, 1, 1},
  {&__pyx_kp_43, __pyx_k_43, sizeof(__pyx_k_43), 1, 1, 1},
  {&__pyx_kp_44, __pyx_k_44, sizeof(__pyx_k_44), 1, 1, 1},
  {&__pyx_kp_45, __pyx_k_45, sizeof(__pyx_k_45), 1, 1, 1},
  {&__pyx_kp_46, __pyx_k_46, sizeof(__pyx_k_46), 1, 1, 1},
  {&__pyx_kp_47, __pyx_k_47, sizeof(__pyx_k_47), 1, 1, 1},
  {&__pyx_kp_48, __pyx_k_48, sizeof(__pyx_k_48), 1, 1, 1},
  {&__pyx_kp_49, __pyx_k_49, sizeof(__pyx_k_49), 1, 1, 1},
  {&__pyx_kp_50, __pyx_k_50, sizeof(__pyx_k_50), 1, 1, 1},
  {&__pyx_kp_51, __pyx_k_51, sizeof(__pyx_k_51), 1, 1, 1},
  {&__pyx_kp_52, __pyx_k_52, sizeof(__pyx_k_52), 1, 1, 1},
  {&__pyx_kp_53, __pyx_k_53, sizeof(__pyx_k_53), 1, 1, 1},
  {&__pyx_kp_54, __pyx_k_54, sizeof(__pyx_k_54), 1, 1, 1},
  {&__pyx_kp_55, __pyx_k_55, sizeof(__pyx_k_55), 1, 1, 1},
  {&__pyx_kp_56, __pyx_k_56, sizeof(__pyx_k_56), 1, 1, 1},
  {&__pyx_kp_KEY_UP, __pyx_k_KEY_UP, sizeof(__pyx_k_KEY_UP), 1, 1, 1},
  {&__pyx_kp_KEY_DOWN, __pyx_k_KEY_DOWN, sizeof(__pyx_k_KEY_DOWN), 1, 1, 1},
  {&__pyx_kp_KEY_LEFT, __pyx_k_KEY_LEFT, sizeof(__pyx_k_KEY_LEFT), 1, 1, 1},
  {&__pyx_kp_KEY_RIGHT, __pyx_k_KEY_RIGHT, sizeof(__pyx_k_KEY_RIGHT), 1, 1, 1},
  {&__pyx_kp_KEY_LSHIFT, __pyx_k_KEY_LSHIFT, sizeof(__pyx_k_KEY_LSHIFT), 1, 1, 1},
  {&__pyx_kp_KEY_RSHIFT, __pyx_k_KEY_RSHIFT, sizeof(__pyx_k_KEY_RSHIFT), 1, 1, 1},
  {&__pyx_kp_KEY_LCTRL, __pyx_k_KEY_LCTRL, sizeof(__pyx_k_KEY_LCTRL), 1, 1, 1},
  {&__pyx_kp_KEY_RCTRL, __pyx_k_KEY_RCTRL, sizeof(__pyx_k_KEY_RCTRL), 1, 1, 1},
  {&__pyx_kp_KEY_LALT, __pyx_k_KEY_LALT, sizeof(__pyx_k_KEY_LALT), 1, 1, 1},
  {&__pyx_kp_KEY_RALT, __pyx_k_KEY_RALT, sizeof(__pyx_k_KEY_RALT), 1, 1, 1},
  {&__pyx_kp_KEY_TAB, __pyx_k_KEY_TAB, sizeof(__pyx_k_KEY_TAB), 1, 1, 1},
  {&__pyx_kp_KEY_ENTER, __pyx_k_KEY_ENTER, sizeof(__pyx_k_KEY_ENTER), 1, 1, 1},
  {&__pyx_kp_KEY_BACKSPACE, __pyx_k_KEY_BACKSPACE, sizeof(__pyx_k_KEY_BACKSPACE), 1, 1, 1},
  {&__pyx_kp_KEY_INSERT, __pyx_k_KEY_INSERT, sizeof(__pyx_k_KEY_INSERT), 1, 1, 1},
  {&__pyx_kp_KEY_DEL, __pyx_k_KEY_DEL, sizeof(__pyx_k_KEY_DEL), 1, 1, 1},
  {&__pyx_kp_KEY_PAGEUP, __pyx_k_KEY_PAGEUP, sizeof(__pyx_k_KEY_PAGEUP), 1, 1, 1},
  {&__pyx_kp_KEY_PAGEDOWN, __pyx_k_KEY_PAGEDOWN, sizeof(__pyx_k_KEY_PAGEDOWN), 1, 1, 1},
  {&__pyx_kp_KEY_HOME, __pyx_k_KEY_HOME, sizeof(__pyx_k_KEY_HOME), 1, 1, 1},
  {&__pyx_kp_KEY_END, __pyx_k_KEY_END, sizeof(__pyx_k_KEY_END), 1, 1, 1},
  {&__pyx_kp_KEY_KP_0, __pyx_k_KEY_KP_0, sizeof(__pyx_k_KEY_KP_0), 1, 1, 1},
  {&__pyx_kp_57, __pyx_k_57, sizeof(__pyx_k_57), 1, 1, 1},
  {&__pyx_kp_58, __pyx_k_58, sizeof(__pyx_k_58), 1, 1, 1},
  {&__pyx_kp_59, __pyx_k_59, sizeof(__pyx_k_59), 1, 1, 1},
  {&__pyx_kp_60, __pyx_k_60, sizeof(__pyx_k_60), 1, 1, 1},
  {&__pyx_kp_61, __pyx_k_61, sizeof(__pyx_k_61), 1, 1, 1},
  {&__pyx_kp_62, __pyx_k_62, sizeof(__pyx_k_62), 1, 1, 1},
  {&__pyx_kp_63, __pyx_k_63, sizeof(__pyx_k_63), 1, 1, 1},
  {&__pyx_kp_64, __pyx_k_64, sizeof(__pyx_k_64), 1, 1, 1},
  {&__pyx_kp_65, __pyx_k_65, sizeof(__pyx_k_65), 1, 1, 1},
  {&__pyx_kp_KEY_KP_DIVIDE, __pyx_k_KEY_KP_DIVIDE, sizeof(__pyx_k_KEY_KP_DIVIDE), 1, 1, 1},
  {&__pyx_kp_KEY_KP_MULTIPLY, __pyx_k_KEY_KP_MULTIPLY, sizeof(__pyx_k_KEY_KP_MULTIPLY), 1, 1, 1},
  {&__pyx_kp_KEY_KP_SUBTRACT, __pyx_k_KEY_KP_SUBTRACT, sizeof(__pyx_k_KEY_KP_SUBTRACT), 1, 1, 1},
  {&__pyx_kp_KEY_KP_ADD, __pyx_k_KEY_KP_ADD, sizeof(__pyx_k_KEY_KP_ADD), 1, 1, 1},
  {&__pyx_kp_KEY_KP_DECIMAL, __pyx_k_KEY_KP_DECIMAL, sizeof(__pyx_k_KEY_KP_DECIMAL), 1, 1, 1},
  {&__pyx_kp_KEY_KP_EQUAL, __pyx_k_KEY_KP_EQUAL, sizeof(__pyx_k_KEY_KP_EQUAL), 1, 1, 1},
  {&__pyx_kp_KEY_KP_ENTER, __pyx_k_KEY_KP_ENTER, sizeof(__pyx_k_KEY_KP_ENTER), 1, 1, 1},
  {&__pyx_kp_KEY_LAST, __pyx_k_KEY_LAST, sizeof(__pyx_k_KEY_LAST), 1, 1, 1},
  {&__pyx_kp_WHITE, __pyx_k_WHITE, sizeof(__pyx_k_WHITE), 1, 1, 1},
  {&__pyx_kp_RED, __pyx_k_RED, sizeof(__pyx_k_RED), 1, 1, 1},
  {&__pyx_kp_GREEN, __pyx_k_GREEN, sizeof(__pyx_k_GREEN), 1, 1, 1},
  {&__pyx_kp_BLUE, __pyx_k_BLUE, sizeof(__pyx_k_BLUE), 1, 1, 1},
  {&__pyx_kp_YELLOW, __pyx_k_YELLOW, sizeof(__pyx_k_YELLOW), 1, 1, 1},
  {&__pyx_kp_PINK, __pyx_k_PINK, sizeof(__pyx_k_PINK), 1, 1, 1},
  {&__pyx_kp_CYAN, __pyx_k_CYAN, sizeof(__pyx_k_CYAN), 1, 1, 1},
  {&__pyx_kp_BLACK, __pyx_k_BLACK, sizeof(__pyx_k_BLACK), 1, 1, 1},
  {&__pyx_kp_HIGH_PRIORITY, __pyx_k_HIGH_PRIORITY, sizeof(__pyx_k_HIGH_PRIORITY), 1, 1, 1},
  {&__pyx_kp_MEDIUM_PRIORITY, __pyx_k_MEDIUM_PRIORITY, sizeof(__pyx_k_MEDIUM_PRIORITY), 1, 1, 1},
  {&__pyx_kp_LOW_PRIORITY, __pyx_k_LOW_PRIORITY, sizeof(__pyx_k_LOW_PRIORITY), 1, 1, 1},
  {&__pyx_kp_UNRELIABLE, __pyx_k_UNRELIABLE, sizeof(__pyx_k_UNRELIABLE), 1, 1, 1},
  {&__pyx_kp_66, __pyx_k_66, sizeof(__pyx_k_66), 1, 1, 1},
  {&__pyx_kp_RELIABLE, __pyx_k_RELIABLE, sizeof(__pyx_k_RELIABLE), 1, 1, 1},
  {&__pyx_kp_RELIABLE_ORDERED, __pyx_k_RELIABLE_ORDERED, sizeof(__pyx_k_RELIABLE_ORDERED), 1, 1, 1},
  {&__pyx_kp_RELIABLE_SEQUENCED, __pyx_k_RELIABLE_SEQUENCED, sizeof(__pyx_k_RELIABLE_SEQUENCED), 1, 1, 1},
  {&__pyx_kp_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 1, 1, 1},
  {&__pyx_kp_cPickle, __pyx_k_cPickle, sizeof(__pyx_k_cPickle), 1, 1, 1},
  {&__pyx_kp_dumps, __pyx_k_dumps, sizeof(__pyx_k_dumps), 1, 1, 1},
  {&__pyx_kp_77, __pyx_k_77, sizeof(__pyx_k_77), 0, 1, 0},
  {&__pyx_kp_loads, __pyx_k_loads, sizeof(__pyx_k_loads), 1, 1, 1},
  {&__pyx_kp_78, __pyx_k_78, sizeof(__pyx_k_78), 0, 1, 0},
  {&__pyx_kp_79, __pyx_k_79, sizeof(__pyx_k_79), 0, 1, 0},
  {&__pyx_kp_80, __pyx_k_80, sizeof(__pyx_k_80), 0, 1, 0},
  {&__pyx_kp_81, __pyx_k_81, sizeof(__pyx_k_81), 0, 1, 0},
  {&__pyx_kp_82, __pyx_k_82, sizeof(__pyx_k_82), 0, 1, 0},
  {&__pyx_kp_83, __pyx_k_83, sizeof(__pyx_k_83), 0, 1, 0},
  {&__pyx_kp_84, __pyx_k_84, sizeof(__pyx_k_84), 0, 1, 0},
  {&__pyx_kp_85, __pyx_k_85, sizeof(__pyx_k_85), 0, 1, 0},
  {&__pyx_kp_86, __pyx_k_86, sizeof(__pyx_k_86), 0, 1, 0},
  {&__pyx_kp_87, __pyx_k_87, sizeof(__pyx_k_87), 0, 1, 0},
  {&__pyx_kp_88, __pyx_k_88, sizeof(__pyx_k_88), 0, 1, 0},
  {&__pyx_kp_89, __pyx_k_89, sizeof(__pyx_k_89), 0, 1, 0},
  {&__pyx_kp_90, __pyx_k_90, sizeof(__pyx_k_90), 0, 1, 0},
  {&__pyx_kp_array, __pyx_k_array, sizeof(__pyx_k_array), 1, 1, 1},
  {&__pyx_kp_dtype, __pyx_k_dtype, sizeof(__pyx_k_dtype), 1, 1, 1},
  {&__pyx_kp_91, __pyx_k_91, sizeof(__pyx_k_91), 0, 1, 0},
  {&__pyx_kp_92, __pyx_k_92, sizeof(__pyx_k_92), 0, 1, 0},
  {&__pyx_kp_93, __pyx_k_93, sizeof(__pyx_k_93), 0, 1, 0},
  {&__pyx_kp_94, __pyx_k_94, sizeof(__pyx_k_94), 0, 1, 0},
  {&__pyx_kp_95, __pyx_k_95, sizeof(__pyx_k_95), 0, 1, 0},
  {&__pyx_kp_96, __pyx_k_96, sizeof(__pyx_k_96), 0, 1, 0},
  {&__pyx_kp_ord, __pyx_k_ord, sizeof(__pyx_k_ord), 1, 1, 1},
  {&__pyx_kp_67, __pyx_k_67, sizeof(__pyx_k_67), 0, 0, 0},
  {&__pyx_kp_68, __pyx_k_68, sizeof(__pyx_k_68), 0, 0, 0},
  {&__pyx_kp___getbuffer__, __pyx_k___getbuffer__, sizeof(__pyx_k___getbuffer__), 1, 1, 1},
  {&__pyx_kp___releasebuffer__, __pyx_k___releasebuffer__, sizeof(__pyx_k___releasebuffer__), 1, 1, 1},
  {&__pyx_kp_info, __pyx_k_info, sizeof(__pyx_k_info), 1, 1, 1},
  {&__pyx_kp_flags, __pyx_k_flags, sizeof(__pyx_k_flags), 1, 1, 1},
  {&__pyx_kp_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 1, 1, 1},
  {&__pyx_kp_range, __pyx_k_range, sizeof(__pyx_k_range), 1, 1, 1},
  {&__pyx_kp_itervalues, __pyx_k_itervalues, sizeof(__pyx_k_itervalues), 1, 1, 1},
  {&__pyx_kp_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 1, 1, 1},
  {&__pyx_kp_1, __pyx_k_1, sizeof(__pyx_k_1), 0, 0, 0},
  {&__pyx_kp_2, __pyx_k_2, sizeof(__pyx_k_2), 0, 0, 0},
  {&__pyx_kp_5, __pyx_k_5, sizeof(__pyx_k_5), 0, 0, 0},
  {&__pyx_kp_23, __pyx_k_23, sizeof(__pyx_k_23), 0, 0, 0},
  {&__pyx_kp_25, __pyx_k_25, sizeof(__pyx_k_25), 0, 0, 0},
  {&__pyx_kp_28, __pyx_k_28, sizeof(__pyx_k_28), 0, 0, 0},
  {&__pyx_kp_29, __pyx_k_29, sizeof(__pyx_k_29), 0, 0, 0},
  {&__pyx_kp_30, __pyx_k_30, sizeof(__pyx_k_30), 0, 0, 0},
  {0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_ord = __Pyx_GetName(__pyx_b, __pyx_kp_ord); if (!__pyx_builtin_ord) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_ValueError = __Pyx_GetName(__pyx_b, __pyx_kp_ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_range = __Pyx_GetName(__pyx_b, __pyx_kp_range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_RuntimeError = __Pyx_GetName(__pyx_b, __pyx_kp_RuntimeError); if (!__pyx_builtin_RuntimeError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitGlobals(void) {
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_256 = PyInt_FromLong(256); if (unlikely(!__pyx_int_256)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_32 = PyInt_FromLong(32); if (unlikely(!__pyx_int_32)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_4 = PyInt_FromLong(4); if (unlikely(!__pyx_int_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_5 = PyInt_FromLong(5); if (unlikely(!__pyx_int_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_6 = PyInt_FromLong(6); if (unlikely(!__pyx_int_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_7 = PyInt_FromLong(7); if (unlikely(!__pyx_int_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_8 = PyInt_FromLong(8); if (unlikely(!__pyx_int_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_9 = PyInt_FromLong(9); if (unlikely(!__pyx_int_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_10 = PyInt_FromLong(10); if (unlikely(!__pyx_int_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_11 = PyInt_FromLong(11); if (unlikely(!__pyx_int_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_12 = PyInt_FromLong(12); if (unlikely(!__pyx_int_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_13 = PyInt_FromLong(13); if (unlikely(!__pyx_int_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_14 = PyInt_FromLong(14); if (unlikely(!__pyx_int_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_15 = PyInt_FromLong(15); if (unlikely(!__pyx_int_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_16 = PyInt_FromLong(16); if (unlikely(!__pyx_int_16)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_17 = PyInt_FromLong(17); if (unlikely(!__pyx_int_17)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_18 = PyInt_FromLong(18); if (unlikely(!__pyx_int_18)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_19 = PyInt_FromLong(19); if (unlikely(!__pyx_int_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_20 = PyInt_FromLong(20); if (unlikely(!__pyx_int_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_21 = PyInt_FromLong(21); if (unlikely(!__pyx_int_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_22 = PyInt_FromLong(22); if (unlikely(!__pyx_int_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_23 = PyInt_FromLong(23); if (unlikely(!__pyx_int_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_24 = PyInt_FromLong(24); if (unlikely(!__pyx_int_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_25 = PyInt_FromLong(25); if (unlikely(!__pyx_int_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_26 = PyInt_FromLong(26); if (unlikely(!__pyx_int_26)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_27 = PyInt_FromLong(27); if (unlikely(!__pyx_int_27)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_28 = PyInt_FromLong(28); if (unlikely(!__pyx_int_28)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_29 = PyInt_FromLong(29); if (unlikely(!__pyx_int_29)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_30 = PyInt_FromLong(30); if (unlikely(!__pyx_int_30)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_31 = PyInt_FromLong(31); if (unlikely(!__pyx_int_31)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_33 = PyInt_FromLong(33); if (unlikely(!__pyx_int_33)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_34 = PyInt_FromLong(34); if (unlikely(!__pyx_int_34)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_35 = PyInt_FromLong(35); if (unlikely(!__pyx_int_35)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_36 = PyInt_FromLong(36); if (unlikely(!__pyx_int_36)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_37 = PyInt_FromLong(37); if (unlikely(!__pyx_int_37)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_38 = PyInt_FromLong(38); if (unlikely(!__pyx_int_38)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_39 = PyInt_FromLong(39); if (unlikely(!__pyx_int_39)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_40 = PyInt_FromLong(40); if (unlikely(!__pyx_int_40)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_41 = PyInt_FromLong(41); if (unlikely(!__pyx_int_41)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_42 = PyInt_FromLong(42); if (unlikely(!__pyx_int_42)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_43 = PyInt_FromLong(43); if (unlikely(!__pyx_int_43)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_44 = PyInt_FromLong(44); if (unlikely(!__pyx_int_44)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_45 = PyInt_FromLong(45); if (unlikely(!__pyx_int_45)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_46 = PyInt_FromLong(46); if (unlikely(!__pyx_int_46)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_47 = PyInt_FromLong(47); if (unlikely(!__pyx_int_47)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_48 = PyInt_FromLong(48); if (unlikely(!__pyx_int_48)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_49 = PyInt_FromLong(49); if (unlikely(!__pyx_int_49)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_50 = PyInt_FromLong(50); if (unlikely(!__pyx_int_50)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_51 = PyInt_FromLong(51); if (unlikely(!__pyx_int_51)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_52 = PyInt_FromLong(52); if (unlikely(!__pyx_int_52)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_53 = PyInt_FromLong(53); if (unlikely(!__pyx_int_53)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_54 = PyInt_FromLong(54); if (unlikely(!__pyx_int_54)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_55 = PyInt_FromLong(55); if (unlikely(!__pyx_int_55)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_56 = PyInt_FromLong(56); if (unlikely(!__pyx_int_56)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_57 = PyInt_FromLong(57); if (unlikely(!__pyx_int_57)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_58 = PyInt_FromLong(58); if (unlikely(!__pyx_int_58)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_59 = PyInt_FromLong(59); if (unlikely(!__pyx_int_59)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_60 = PyInt_FromLong(60); if (unlikely(!__pyx_int_60)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_61 = PyInt_FromLong(61); if (unlikely(!__pyx_int_61)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_62 = PyInt_FromLong(62); if (unlikely(!__pyx_int_62)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_255 = PyInt_FromLong(255); if (unlikely(!__pyx_int_255)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_0xFFFF = PyInt_FromLong(0xFFFF); if (unlikely(!__pyx_int_0xFFFF)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initege(void); /*proto*/
PyMODINIT_FUNC initege(void)
#else
PyMODINIT_FUNC PyInit_ege(void); /*proto*/
PyMODINIT_FUNC PyInit_ege(void)
#endif
{
  PyObject *__pyx_1 = 0;
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  #ifdef CYTHON_REFNANNY
  void* __pyx_refchk = NULL;
  __Pyx_Refnanny = __Pyx_ImportRefcountAPI("refnanny");
  if (!__Pyx_Refnanny) {
      PyErr_Clear();
      __Pyx_Refnanny = __Pyx_ImportRefcountAPI("Cython.Runtime.refnanny");
      if (!__Pyx_Refnanny)
          Py_FatalError("failed to import refnanny module");
  }
  __pyx_refchk = __Pyx_Refnanny->NewContext("PyMODINIT_FUNC PyInit_ege(void)", __LINE__, __FILE__);
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Library function declarations ---*/
  __pyx_init_filenames();
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4(__Pyx_NAMESTR("ege"), __pyx_methods, 0, 0, PYTHON_API_VERSION);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (!__pyx_m) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  #if PY_MAJOR_VERSION < 3
  Py_INCREF(__pyx_m);
  #endif
  __pyx_b = PyImport_AddModule(__Pyx_NAMESTR(__Pyx_BUILTIN_MODULE_NAME));
  if (!__pyx_b) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  if (__Pyx_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  if (__pyx_module_is_main_ege) {
    if (__Pyx_SetAttrString(__pyx_m, "__name__", __pyx_kp___main__) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_skip_dispatch = 0;
  /*--- Global init code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_3ege_Image) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Image", (PyObject *)&__pyx_type_3ege_Image) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3ege_Image = &__pyx_type_3ege_Image;
  if (PyType_Ready(&__pyx_type_3ege_Timer) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 749; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Timer", (PyObject *)&__pyx_type_3ege_Timer) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 749; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3ege_Timer = &__pyx_type_3ege_Timer;
  if (PyType_Ready(&__pyx_type_3ege_Sound) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Sound", (PyObject *)&__pyx_type_3ege_Sound) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3ege_Sound = &__pyx_type_3ege_Sound;
  /*--- Type import code ---*/
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType("numpy", "dtype", sizeof(PyArray_Descr)); if (unlikely(!__pyx_ptype_5numpy_dtype)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 43; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject)); if (unlikely(!__pyx_ptype_5numpy_ndarray)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "C:\Python26\Lib\site-packages\ege.pyx":8
 * 
 * #enum TriangleForms { SEPARATE, STRIP, FAN } :
 * SEPARATE = 0             # <<<<<<<<<<<<<<
 * STRIP = 1
 * FAN = 2
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_SEPARATE, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":9
 * #enum TriangleForms { SEPARATE, STRIP, FAN } :
 * SEPARATE = 0
 * STRIP = 1             # <<<<<<<<<<<<<<
 * FAN = 2
 * 
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_STRIP, __pyx_int_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":10
 * SEPARATE = 0
 * STRIP = 1
 * FAN = 2             # <<<<<<<<<<<<<<
 * 
 * MAX_SIZE_OF_PACKET = 256
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_FAN, __pyx_int_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":12
 * FAN = 2
 * 
 * MAX_SIZE_OF_PACKET = 256             # <<<<<<<<<<<<<<
 * 
 * WINDOW = False
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_MAX_SIZE_OF_PACKET, __pyx_int_256) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":14
 * MAX_SIZE_OF_PACKET = 256
 * 
 * WINDOW = False             # <<<<<<<<<<<<<<
 * FULLSCREEN = True
 * 
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_WINDOW, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":15
 * 
 * WINDOW = False
 * FULLSCREEN = True             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_FULLSCREEN, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":18
 * 
 * 
 * MOUSE_BUTTON_LEFT = 0             # <<<<<<<<<<<<<<
 * MOUSE_BUTTON_RIGHT = 1
 * MOUSE_BUTTON_MIDDLE = 2
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_MOUSE_BUTTON_LEFT, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":19
 * 
 * MOUSE_BUTTON_LEFT = 0
 * MOUSE_BUTTON_RIGHT = 1             # <<<<<<<<<<<<<<
 * MOUSE_BUTTON_MIDDLE = 2
 * 
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_MOUSE_BUTTON_RIGHT, __pyx_int_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":20
 * MOUSE_BUTTON_LEFT = 0
 * MOUSE_BUTTON_RIGHT = 1
 * MOUSE_BUTTON_MIDDLE = 2             # <<<<<<<<<<<<<<
 * 
 * KEY_UNKNOWN      =-1
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_MOUSE_BUTTON_MIDDLE, __pyx_int_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":22
 * MOUSE_BUTTON_MIDDLE = 2
 * 
 * KEY_UNKNOWN      =-1             # <<<<<<<<<<<<<<
 * KEY_SPACE        =32
 * KEY_SPECIAL      =256
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_UNKNOWN, __pyx_int_neg_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":23
 * 
 * KEY_UNKNOWN      =-1
 * KEY_SPACE        =32             # <<<<<<<<<<<<<<
 * KEY_SPECIAL      =256
 * KEY_ESC          =(KEY_SPECIAL+1)
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_SPACE, __pyx_int_32) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":24
 * KEY_UNKNOWN      =-1
 * KEY_SPACE        =32
 * KEY_SPECIAL      =256             # <<<<<<<<<<<<<<
 * KEY_ESC          =(KEY_SPECIAL+1)
 * KEY_F1           =(KEY_SPECIAL+2)
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_SPECIAL, __pyx_int_256) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":25
 * KEY_SPACE        =32
 * KEY_SPECIAL      =256
 * KEY_ESC          =(KEY_SPECIAL+1)             # <<<<<<<<<<<<<<
 * KEY_F1           =(KEY_SPECIAL+2)
 * KEY_F2           =(KEY_SPECIAL+3)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_ESC, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":26
 * KEY_SPECIAL      =256
 * KEY_ESC          =(KEY_SPECIAL+1)
 * KEY_F1           =(KEY_SPECIAL+2)             # <<<<<<<<<<<<<<
 * KEY_F2           =(KEY_SPECIAL+3)
 * KEY_F3           =(KEY_SPECIAL+4)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_32, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":27
 * KEY_ESC          =(KEY_SPECIAL+1)
 * KEY_F1           =(KEY_SPECIAL+2)
 * KEY_F2           =(KEY_SPECIAL+3)             # <<<<<<<<<<<<<<
 * KEY_F3           =(KEY_SPECIAL+4)
 * KEY_F4           =(KEY_SPECIAL+5)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_33, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":28
 * KEY_F1           =(KEY_SPECIAL+2)
 * KEY_F2           =(KEY_SPECIAL+3)
 * KEY_F3           =(KEY_SPECIAL+4)             # <<<<<<<<<<<<<<
 * KEY_F4           =(KEY_SPECIAL+5)
 * KEY_F5           =(KEY_SPECIAL+6)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_34, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":29
 * KEY_F2           =(KEY_SPECIAL+3)
 * KEY_F3           =(KEY_SPECIAL+4)
 * KEY_F4           =(KEY_SPECIAL+5)             # <<<<<<<<<<<<<<
 * KEY_F5           =(KEY_SPECIAL+6)
 * KEY_F6           =(KEY_SPECIAL+7)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_35, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":30
 * KEY_F3           =(KEY_SPECIAL+4)
 * KEY_F4           =(KEY_SPECIAL+5)
 * KEY_F5           =(KEY_SPECIAL+6)             # <<<<<<<<<<<<<<
 * KEY_F6           =(KEY_SPECIAL+7)
 * KEY_F7           =(KEY_SPECIAL+8)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_36, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":31
 * KEY_F4           =(KEY_SPECIAL+5)
 * KEY_F5           =(KEY_SPECIAL+6)
 * KEY_F6           =(KEY_SPECIAL+7)             # <<<<<<<<<<<<<<
 * KEY_F7           =(KEY_SPECIAL+8)
 * KEY_F8           =(KEY_SPECIAL+9)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_7); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_37, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":32
 * KEY_F5           =(KEY_SPECIAL+6)
 * KEY_F6           =(KEY_SPECIAL+7)
 * KEY_F7           =(KEY_SPECIAL+8)             # <<<<<<<<<<<<<<
 * KEY_F8           =(KEY_SPECIAL+9)
 * KEY_F9           =(KEY_SPECIAL+10)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_8); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_38, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":33
 * KEY_F6           =(KEY_SPECIAL+7)
 * KEY_F7           =(KEY_SPECIAL+8)
 * KEY_F8           =(KEY_SPECIAL+9)             # <<<<<<<<<<<<<<
 * KEY_F9           =(KEY_SPECIAL+10)
 * KEY_F10          =(KEY_SPECIAL+11)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_9); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_39, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":34
 * KEY_F7           =(KEY_SPECIAL+8)
 * KEY_F8           =(KEY_SPECIAL+9)
 * KEY_F9           =(KEY_SPECIAL+10)             # <<<<<<<<<<<<<<
 * KEY_F10          =(KEY_SPECIAL+11)
 * KEY_F11          =(KEY_SPECIAL+12)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_10); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_40, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":35
 * KEY_F8           =(KEY_SPECIAL+9)
 * KEY_F9           =(KEY_SPECIAL+10)
 * KEY_F10          =(KEY_SPECIAL+11)             # <<<<<<<<<<<<<<
 * KEY_F11          =(KEY_SPECIAL+12)
 * KEY_F12          =(KEY_SPECIAL+13)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_11); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_41, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":36
 * KEY_F9           =(KEY_SPECIAL+10)
 * KEY_F10          =(KEY_SPECIAL+11)
 * KEY_F11          =(KEY_SPECIAL+12)             # <<<<<<<<<<<<<<
 * KEY_F12          =(KEY_SPECIAL+13)
 * KEY_F13          =(KEY_SPECIAL+14)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_12); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_42, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":37
 * KEY_F10          =(KEY_SPECIAL+11)
 * KEY_F11          =(KEY_SPECIAL+12)
 * KEY_F12          =(KEY_SPECIAL+13)             # <<<<<<<<<<<<<<
 * KEY_F13          =(KEY_SPECIAL+14)
 * KEY_F14          =(KEY_SPECIAL+15)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_13); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_43, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":38
 * KEY_F11          =(KEY_SPECIAL+12)
 * KEY_F12          =(KEY_SPECIAL+13)
 * KEY_F13          =(KEY_SPECIAL+14)             # <<<<<<<<<<<<<<
 * KEY_F14          =(KEY_SPECIAL+15)
 * KEY_F15          =(KEY_SPECIAL+16)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_14); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_44, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":39
 * KEY_F12          =(KEY_SPECIAL+13)
 * KEY_F13          =(KEY_SPECIAL+14)
 * KEY_F14          =(KEY_SPECIAL+15)             # <<<<<<<<<<<<<<
 * KEY_F15          =(KEY_SPECIAL+16)
 * KEY_F16          =(KEY_SPECIAL+17)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_15); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_45, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":40
 * KEY_F13          =(KEY_SPECIAL+14)
 * KEY_F14          =(KEY_SPECIAL+15)
 * KEY_F15          =(KEY_SPECIAL+16)             # <<<<<<<<<<<<<<
 * KEY_F16          =(KEY_SPECIAL+17)
 * KEY_F17          =(KEY_SPECIAL+18)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_16); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_46, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":41
 * KEY_F14          =(KEY_SPECIAL+15)
 * KEY_F15          =(KEY_SPECIAL+16)
 * KEY_F16          =(KEY_SPECIAL+17)             # <<<<<<<<<<<<<<
 * KEY_F17          =(KEY_SPECIAL+18)
 * KEY_F18          =(KEY_SPECIAL+19)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_47, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":42
 * KEY_F15          =(KEY_SPECIAL+16)
 * KEY_F16          =(KEY_SPECIAL+17)
 * KEY_F17          =(KEY_SPECIAL+18)             # <<<<<<<<<<<<<<
 * KEY_F18          =(KEY_SPECIAL+19)
 * KEY_F19          =(KEY_SPECIAL+20)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_18); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_48, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":43
 * KEY_F16          =(KEY_SPECIAL+17)
 * KEY_F17          =(KEY_SPECIAL+18)
 * KEY_F18          =(KEY_SPECIAL+19)             # <<<<<<<<<<<<<<
 * KEY_F19          =(KEY_SPECIAL+20)
 * KEY_F20          =(KEY_SPECIAL+21)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 43; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_19); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 43; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_49, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 43; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":44
 * KEY_F17          =(KEY_SPECIAL+18)
 * KEY_F18          =(KEY_SPECIAL+19)
 * KEY_F19          =(KEY_SPECIAL+20)             # <<<<<<<<<<<<<<
 * KEY_F20          =(KEY_SPECIAL+21)
 * KEY_F21          =(KEY_SPECIAL+22)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_20); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_50, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":45
 * KEY_F18          =(KEY_SPECIAL+19)
 * KEY_F19          =(KEY_SPECIAL+20)
 * KEY_F20          =(KEY_SPECIAL+21)             # <<<<<<<<<<<<<<
 * KEY_F21          =(KEY_SPECIAL+22)
 * KEY_F22          =(KEY_SPECIAL+23)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_21); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_51, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":46
 * KEY_F19          =(KEY_SPECIAL+20)
 * KEY_F20          =(KEY_SPECIAL+21)
 * KEY_F21          =(KEY_SPECIAL+22)             # <<<<<<<<<<<<<<
 * KEY_F22          =(KEY_SPECIAL+23)
 * KEY_F23          =(KEY_SPECIAL+24)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_22); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_52, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":47
 * KEY_F20          =(KEY_SPECIAL+21)
 * KEY_F21          =(KEY_SPECIAL+22)
 * KEY_F22          =(KEY_SPECIAL+23)             # <<<<<<<<<<<<<<
 * KEY_F23          =(KEY_SPECIAL+24)
 * KEY_F24          =(KEY_SPECIAL+25)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_23); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_53, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":48
 * KEY_F21          =(KEY_SPECIAL+22)
 * KEY_F22          =(KEY_SPECIAL+23)
 * KEY_F23          =(KEY_SPECIAL+24)             # <<<<<<<<<<<<<<
 * KEY_F24          =(KEY_SPECIAL+25)
 * KEY_F25          =(KEY_SPECIAL+26)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_24); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_54, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":49
 * KEY_F22          =(KEY_SPECIAL+23)
 * KEY_F23          =(KEY_SPECIAL+24)
 * KEY_F24          =(KEY_SPECIAL+25)             # <<<<<<<<<<<<<<
 * KEY_F25          =(KEY_SPECIAL+26)
 * KEY_UP           =(KEY_SPECIAL+27)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_25); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_55, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":50
 * KEY_F23          =(KEY_SPECIAL+24)
 * KEY_F24          =(KEY_SPECIAL+25)
 * KEY_F25          =(KEY_SPECIAL+26)             # <<<<<<<<<<<<<<
 * KEY_UP           =(KEY_SPECIAL+27)
 * KEY_DOWN         =(KEY_SPECIAL+28)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_26); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_56, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":51
 * KEY_F24          =(KEY_SPECIAL+25)
 * KEY_F25          =(KEY_SPECIAL+26)
 * KEY_UP           =(KEY_SPECIAL+27)             # <<<<<<<<<<<<<<
 * KEY_DOWN         =(KEY_SPECIAL+28)
 * KEY_LEFT         =(KEY_SPECIAL+29)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_27); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_UP, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":52
 * KEY_F25          =(KEY_SPECIAL+26)
 * KEY_UP           =(KEY_SPECIAL+27)
 * KEY_DOWN         =(KEY_SPECIAL+28)             # <<<<<<<<<<<<<<
 * KEY_LEFT         =(KEY_SPECIAL+29)
 * KEY_RIGHT        =(KEY_SPECIAL+30)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_28); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_DOWN, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":53
 * KEY_UP           =(KEY_SPECIAL+27)
 * KEY_DOWN         =(KEY_SPECIAL+28)
 * KEY_LEFT         =(KEY_SPECIAL+29)             # <<<<<<<<<<<<<<
 * KEY_RIGHT        =(KEY_SPECIAL+30)
 * KEY_LSHIFT       =(KEY_SPECIAL+31)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_29); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_LEFT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":54
 * KEY_DOWN         =(KEY_SPECIAL+28)
 * KEY_LEFT         =(KEY_SPECIAL+29)
 * KEY_RIGHT        =(KEY_SPECIAL+30)             # <<<<<<<<<<<<<<
 * KEY_LSHIFT       =(KEY_SPECIAL+31)
 * KEY_RSHIFT       =(KEY_SPECIAL+32)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_30); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_RIGHT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":55
 * KEY_LEFT         =(KEY_SPECIAL+29)
 * KEY_RIGHT        =(KEY_SPECIAL+30)
 * KEY_LSHIFT       =(KEY_SPECIAL+31)             # <<<<<<<<<<<<<<
 * KEY_RSHIFT       =(KEY_SPECIAL+32)
 * KEY_LCTRL        =(KEY_SPECIAL+33)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_31); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_LSHIFT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":56
 * KEY_RIGHT        =(KEY_SPECIAL+30)
 * KEY_LSHIFT       =(KEY_SPECIAL+31)
 * KEY_RSHIFT       =(KEY_SPECIAL+32)             # <<<<<<<<<<<<<<
 * KEY_LCTRL        =(KEY_SPECIAL+33)
 * KEY_RCTRL        =(KEY_SPECIAL+34)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_32); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_RSHIFT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":57
 * KEY_LSHIFT       =(KEY_SPECIAL+31)
 * KEY_RSHIFT       =(KEY_SPECIAL+32)
 * KEY_LCTRL        =(KEY_SPECIAL+33)             # <<<<<<<<<<<<<<
 * KEY_RCTRL        =(KEY_SPECIAL+34)
 * KEY_LALT         =(KEY_SPECIAL+35)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_33); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_LCTRL, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":58
 * KEY_RSHIFT       =(KEY_SPECIAL+32)
 * KEY_LCTRL        =(KEY_SPECIAL+33)
 * KEY_RCTRL        =(KEY_SPECIAL+34)             # <<<<<<<<<<<<<<
 * KEY_LALT         =(KEY_SPECIAL+35)
 * KEY_RALT         =(KEY_SPECIAL+36)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_34); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_RCTRL, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":59
 * KEY_LCTRL        =(KEY_SPECIAL+33)
 * KEY_RCTRL        =(KEY_SPECIAL+34)
 * KEY_LALT         =(KEY_SPECIAL+35)             # <<<<<<<<<<<<<<
 * KEY_RALT         =(KEY_SPECIAL+36)
 * KEY_TAB          =(KEY_SPECIAL+37)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_35); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_LALT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":60
 * KEY_RCTRL        =(KEY_SPECIAL+34)
 * KEY_LALT         =(KEY_SPECIAL+35)
 * KEY_RALT         =(KEY_SPECIAL+36)             # <<<<<<<<<<<<<<
 * KEY_TAB          =(KEY_SPECIAL+37)
 * KEY_ENTER        =(KEY_SPECIAL+38)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_36); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_RALT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":61
 * KEY_LALT         =(KEY_SPECIAL+35)
 * KEY_RALT         =(KEY_SPECIAL+36)
 * KEY_TAB          =(KEY_SPECIAL+37)             # <<<<<<<<<<<<<<
 * KEY_ENTER        =(KEY_SPECIAL+38)
 * KEY_BACKSPACE    =(KEY_SPECIAL+39)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_37); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_TAB, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":62
 * KEY_RALT         =(KEY_SPECIAL+36)
 * KEY_TAB          =(KEY_SPECIAL+37)
 * KEY_ENTER        =(KEY_SPECIAL+38)             # <<<<<<<<<<<<<<
 * KEY_BACKSPACE    =(KEY_SPECIAL+39)
 * KEY_INSERT       =(KEY_SPECIAL+40)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_38); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_ENTER, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":63
 * KEY_TAB          =(KEY_SPECIAL+37)
 * KEY_ENTER        =(KEY_SPECIAL+38)
 * KEY_BACKSPACE    =(KEY_SPECIAL+39)             # <<<<<<<<<<<<<<
 * KEY_INSERT       =(KEY_SPECIAL+40)
 * KEY_DEL          =(KEY_SPECIAL+41)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_39); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_BACKSPACE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":64
 * KEY_ENTER        =(KEY_SPECIAL+38)
 * KEY_BACKSPACE    =(KEY_SPECIAL+39)
 * KEY_INSERT       =(KEY_SPECIAL+40)             # <<<<<<<<<<<<<<
 * KEY_DEL          =(KEY_SPECIAL+41)
 * KEY_PAGEUP       =(KEY_SPECIAL+42)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_40); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_INSERT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":65
 * KEY_BACKSPACE    =(KEY_SPECIAL+39)
 * KEY_INSERT       =(KEY_SPECIAL+40)
 * KEY_DEL          =(KEY_SPECIAL+41)             # <<<<<<<<<<<<<<
 * KEY_PAGEUP       =(KEY_SPECIAL+42)
 * KEY_PAGEDOWN     =(KEY_SPECIAL+43)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_41); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_DEL, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":66
 * KEY_INSERT       =(KEY_SPECIAL+40)
 * KEY_DEL          =(KEY_SPECIAL+41)
 * KEY_PAGEUP       =(KEY_SPECIAL+42)             # <<<<<<<<<<<<<<
 * KEY_PAGEDOWN     =(KEY_SPECIAL+43)
 * KEY_HOME         =(KEY_SPECIAL+44)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_42); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_PAGEUP, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":67
 * KEY_DEL          =(KEY_SPECIAL+41)
 * KEY_PAGEUP       =(KEY_SPECIAL+42)
 * KEY_PAGEDOWN     =(KEY_SPECIAL+43)             # <<<<<<<<<<<<<<
 * KEY_HOME         =(KEY_SPECIAL+44)
 * KEY_END          =(KEY_SPECIAL+45)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_43); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_PAGEDOWN, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":68
 * KEY_PAGEUP       =(KEY_SPECIAL+42)
 * KEY_PAGEDOWN     =(KEY_SPECIAL+43)
 * KEY_HOME         =(KEY_SPECIAL+44)             # <<<<<<<<<<<<<<
 * KEY_END          =(KEY_SPECIAL+45)
 * KEY_KP_0         =(KEY_SPECIAL+46)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_44); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_HOME, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":69
 * KEY_PAGEDOWN     =(KEY_SPECIAL+43)
 * KEY_HOME         =(KEY_SPECIAL+44)
 * KEY_END          =(KEY_SPECIAL+45)             # <<<<<<<<<<<<<<
 * KEY_KP_0         =(KEY_SPECIAL+46)
 * KEY_KP_1         =(KEY_SPECIAL+47)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_45); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_END, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":70
 * KEY_HOME         =(KEY_SPECIAL+44)
 * KEY_END          =(KEY_SPECIAL+45)
 * KEY_KP_0         =(KEY_SPECIAL+46)             # <<<<<<<<<<<<<<
 * KEY_KP_1         =(KEY_SPECIAL+47)
 * KEY_KP_2         =(KEY_SPECIAL+48)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_46); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_KP_0, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":71
 * KEY_END          =(KEY_SPECIAL+45)
 * KEY_KP_0         =(KEY_SPECIAL+46)
 * KEY_KP_1         =(KEY_SPECIAL+47)             # <<<<<<<<<<<<<<
 * KEY_KP_2         =(KEY_SPECIAL+48)
 * KEY_KP_3         =(KEY_SPECIAL+49)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_47); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_57, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":72
 * KEY_KP_0         =(KEY_SPECIAL+46)
 * KEY_KP_1         =(KEY_SPECIAL+47)
 * KEY_KP_2         =(KEY_SPECIAL+48)             # <<<<<<<<<<<<<<
 * KEY_KP_3         =(KEY_SPECIAL+49)
 * KEY_KP_4         =(KEY_SPECIAL+50)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_48); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_58, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":73
 * KEY_KP_1         =(KEY_SPECIAL+47)
 * KEY_KP_2         =(KEY_SPECIAL+48)
 * KEY_KP_3         =(KEY_SPECIAL+49)             # <<<<<<<<<<<<<<
 * KEY_KP_4         =(KEY_SPECIAL+50)
 * KEY_KP_5         =(KEY_SPECIAL+51)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_49); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_59, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":74
 * KEY_KP_2         =(KEY_SPECIAL+48)
 * KEY_KP_3         =(KEY_SPECIAL+49)
 * KEY_KP_4         =(KEY_SPECIAL+50)             # <<<<<<<<<<<<<<
 * KEY_KP_5         =(KEY_SPECIAL+51)
 * KEY_KP_6         =(KEY_SPECIAL+52)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_50); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_60, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":75
 * KEY_KP_3         =(KEY_SPECIAL+49)
 * KEY_KP_4         =(KEY_SPECIAL+50)
 * KEY_KP_5         =(KEY_SPECIAL+51)             # <<<<<<<<<<<<<<
 * KEY_KP_6         =(KEY_SPECIAL+52)
 * KEY_KP_7         =(KEY_SPECIAL+53)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_51); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_61, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":76
 * KEY_KP_4         =(KEY_SPECIAL+50)
 * KEY_KP_5         =(KEY_SPECIAL+51)
 * KEY_KP_6         =(KEY_SPECIAL+52)             # <<<<<<<<<<<<<<
 * KEY_KP_7         =(KEY_SPECIAL+53)
 * KEY_KP_8         =(KEY_SPECIAL+54)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_52); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_62, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":77
 * KEY_KP_5         =(KEY_SPECIAL+51)
 * KEY_KP_6         =(KEY_SPECIAL+52)
 * KEY_KP_7         =(KEY_SPECIAL+53)             # <<<<<<<<<<<<<<
 * KEY_KP_8         =(KEY_SPECIAL+54)
 * KEY_KP_9         =(KEY_SPECIAL+55)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_53); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_63, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":78
 * KEY_KP_6         =(KEY_SPECIAL+52)
 * KEY_KP_7         =(KEY_SPECIAL+53)
 * KEY_KP_8         =(KEY_SPECIAL+54)             # <<<<<<<<<<<<<<
 * KEY_KP_9         =(KEY_SPECIAL+55)
 * KEY_KP_DIVIDE    =(KEY_SPECIAL+56)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_54); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_64, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":79
 * KEY_KP_7         =(KEY_SPECIAL+53)
 * KEY_KP_8         =(KEY_SPECIAL+54)
 * KEY_KP_9         =(KEY_SPECIAL+55)             # <<<<<<<<<<<<<<
 * KEY_KP_DIVIDE    =(KEY_SPECIAL+56)
 * KEY_KP_MULTIPLY  =(KEY_SPECIAL+57)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_55); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_65, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":80
 * KEY_KP_8         =(KEY_SPECIAL+54)
 * KEY_KP_9         =(KEY_SPECIAL+55)
 * KEY_KP_DIVIDE    =(KEY_SPECIAL+56)             # <<<<<<<<<<<<<<
 * KEY_KP_MULTIPLY  =(KEY_SPECIAL+57)
 * KEY_KP_SUBTRACT  =(KEY_SPECIAL+58)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_56); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_KP_DIVIDE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":81
 * KEY_KP_9         =(KEY_SPECIAL+55)
 * KEY_KP_DIVIDE    =(KEY_SPECIAL+56)
 * KEY_KP_MULTIPLY  =(KEY_SPECIAL+57)             # <<<<<<<<<<<<<<
 * KEY_KP_SUBTRACT  =(KEY_SPECIAL+58)
 * KEY_KP_ADD       =(KEY_SPECIAL+59)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_57); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_KP_MULTIPLY, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":82
 * KEY_KP_DIVIDE    =(KEY_SPECIAL+56)
 * KEY_KP_MULTIPLY  =(KEY_SPECIAL+57)
 * KEY_KP_SUBTRACT  =(KEY_SPECIAL+58)             # <<<<<<<<<<<<<<
 * KEY_KP_ADD       =(KEY_SPECIAL+59)
 * KEY_KP_DECIMAL   =(KEY_SPECIAL+60)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_58); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_KP_SUBTRACT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":83
 * KEY_KP_MULTIPLY  =(KEY_SPECIAL+57)
 * KEY_KP_SUBTRACT  =(KEY_SPECIAL+58)
 * KEY_KP_ADD       =(KEY_SPECIAL+59)             # <<<<<<<<<<<<<<
 * KEY_KP_DECIMAL   =(KEY_SPECIAL+60)
 * KEY_KP_EQUAL     =(KEY_SPECIAL+61)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_59); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_KP_ADD, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":84
 * KEY_KP_SUBTRACT  =(KEY_SPECIAL+58)
 * KEY_KP_ADD       =(KEY_SPECIAL+59)
 * KEY_KP_DECIMAL   =(KEY_SPECIAL+60)             # <<<<<<<<<<<<<<
 * KEY_KP_EQUAL     =(KEY_SPECIAL+61)
 * KEY_KP_ENTER     =(KEY_SPECIAL+62)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_60); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_KP_DECIMAL, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":85
 * KEY_KP_ADD       =(KEY_SPECIAL+59)
 * KEY_KP_DECIMAL   =(KEY_SPECIAL+60)
 * KEY_KP_EQUAL     =(KEY_SPECIAL+61)             # <<<<<<<<<<<<<<
 * KEY_KP_ENTER     =(KEY_SPECIAL+62)
 * KEY_LAST         =KEY_KP_ENTER
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_61); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_KP_EQUAL, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":86
 * KEY_KP_DECIMAL   =(KEY_SPECIAL+60)
 * KEY_KP_EQUAL     =(KEY_SPECIAL+61)
 * KEY_KP_ENTER     =(KEY_SPECIAL+62)             # <<<<<<<<<<<<<<
 * KEY_LAST         =KEY_KP_ENTER
 * 
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_SPECIAL); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_1 = PyNumber_Add(__pyx_1, __pyx_int_62); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_KP_ENTER, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":87
 * KEY_KP_EQUAL     =(KEY_SPECIAL+61)
 * KEY_KP_ENTER     =(KEY_SPECIAL+62)
 * KEY_LAST         =KEY_KP_ENTER             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_KEY_KP_ENTER); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_KEY_LAST, __pyx_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":90
 * 
 * 
 * WHITE  = (255, 255, 255)             # <<<<<<<<<<<<<<
 * RED    = (255,   0,   0)
 * GREEN  = (  0, 255,   0)
 */
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_WHITE, ((PyObject *)__pyx_t_1)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":91
 * 
 * WHITE  = (255, 255, 255)
 * RED    = (255,   0,   0)             # <<<<<<<<<<<<<<
 * GREEN  = (  0, 255,   0)
 * BLUE   = (  0,   0, 255)
 */
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_RED, ((PyObject *)__pyx_t_1)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":92
 * WHITE  = (255, 255, 255)
 * RED    = (255,   0,   0)
 * GREEN  = (  0, 255,   0)             # <<<<<<<<<<<<<<
 * BLUE   = (  0,   0, 255)
 * YELLOW = (255, 255,   0)
 */
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_GREEN, ((PyObject *)__pyx_t_1)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":93
 * RED    = (255,   0,   0)
 * GREEN  = (  0, 255,   0)
 * BLUE   = (  0,   0, 255)             # <<<<<<<<<<<<<<
 * YELLOW = (255, 255,   0)
 * PINK   = (255,   0, 255)
 */
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_BLUE, ((PyObject *)__pyx_t_1)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":94
 * GREEN  = (  0, 255,   0)
 * BLUE   = (  0,   0, 255)
 * YELLOW = (255, 255,   0)             # <<<<<<<<<<<<<<
 * PINK   = (255,   0, 255)
 * CYAN   = (  0, 255, 255)
 */
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_YELLOW, ((PyObject *)__pyx_t_1)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":95
 * BLUE   = (  0,   0, 255)
 * YELLOW = (255, 255,   0)
 * PINK   = (255,   0, 255)             # <<<<<<<<<<<<<<
 * CYAN   = (  0, 255, 255)
 * BLACK  = (  0,   0,   0)
 */
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_PINK, ((PyObject *)__pyx_t_1)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":96
 * YELLOW = (255, 255,   0)
 * PINK   = (255,   0, 255)
 * CYAN   = (  0, 255, 255)             # <<<<<<<<<<<<<<
 * BLACK  = (  0,   0,   0)
 * 
 */
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_CYAN, ((PyObject *)__pyx_t_1)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":97
 * PINK   = (255,   0, 255)
 * CYAN   = (  0, 255, 255)
 * BLACK  = (  0,   0,   0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 97; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_BLACK, ((PyObject *)__pyx_t_1)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 97; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":101
 * 
 * 
 * HIGH_PRIORITY = 1             # <<<<<<<<<<<<<<
 * MEDIUM_PRIORITY = 2
 * LOW_PRIORITY = 3
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_HIGH_PRIORITY, __pyx_int_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":102
 * 
 * HIGH_PRIORITY = 1
 * MEDIUM_PRIORITY = 2             # <<<<<<<<<<<<<<
 * LOW_PRIORITY = 3
 * 
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_MEDIUM_PRIORITY, __pyx_int_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":103
 * HIGH_PRIORITY = 1
 * MEDIUM_PRIORITY = 2
 * LOW_PRIORITY = 3             # <<<<<<<<<<<<<<
 * 
 * UNRELIABLE = 0
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_LOW_PRIORITY, __pyx_int_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 103; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":105
 * LOW_PRIORITY = 3
 * 
 * UNRELIABLE = 0             # <<<<<<<<<<<<<<
 * UNRELIABLE_SEQUENCED = 1
 * RELIABLE = 2
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_UNRELIABLE, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":106
 * 
 * UNRELIABLE = 0
 * UNRELIABLE_SEQUENCED = 1             # <<<<<<<<<<<<<<
 * RELIABLE = 2
 * RELIABLE_ORDERED = 3
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_66, __pyx_int_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":107
 * UNRELIABLE = 0
 * UNRELIABLE_SEQUENCED = 1
 * RELIABLE = 2             # <<<<<<<<<<<<<<
 * RELIABLE_ORDERED = 3
 * RELIABLE_SEQUENCED = 4
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_RELIABLE, __pyx_int_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":108
 * UNRELIABLE_SEQUENCED = 1
 * RELIABLE = 2
 * RELIABLE_ORDERED = 3             # <<<<<<<<<<<<<<
 * RELIABLE_SEQUENCED = 4
 * 
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_RELIABLE_ORDERED, __pyx_int_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":109
 * RELIABLE = 2
 * RELIABLE_ORDERED = 3
 * RELIABLE_SEQUENCED = 4             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_RELIABLE_SEQUENCED, __pyx_int_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "C:\Python26\Lib\site-packages\ege.pyx":132
 * 
 * 
 * import numpy             # <<<<<<<<<<<<<<
 * cimport numpy
 * 
 */
  __pyx_1 = __Pyx_Import(__pyx_kp_numpy, 0); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_numpy, __pyx_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":135
 * cimport numpy
 * 
 * import cPickle             # <<<<<<<<<<<<<<
 * #cimport cPickle
 * 
 */
  __pyx_1 = __Pyx_Import(__pyx_kp_cPickle, 0); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_kp_cPickle, __pyx_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;

  /* "C:\Python26\Lib\site-packages\ege.pyx":241
 * 
 * 
 * def sendData(data, int priority=HIGH_PRIORITY, int reliability=RELIABLE_ORDERED, int channel=0, bint timeStamp=True, svUsers=None, bint svBroadcast=True):             # <<<<<<<<<<<<<<
 *     pickledObject = cPickle.dumps(data)
 * 
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_HIGH_PRIORITY); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_k_69 = __pyx_t_2;
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_RELIABLE_ORDERED); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_k_70 = __pyx_t_2;

  /* "C:\Python26\Lib\site-packages\ege.pyx":393
 * 
 * 
 * def drawLines(coords, color, float width = 1, bint loop = False, stipple = False, bint antiAliasing = False):             # <<<<<<<<<<<<<<
 * 
 *     cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k_71 = __pyx_t_1;
  __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_k_71);

  /* "C:\Python26\Lib\site-packages\ege.pyx":425
 * 
 * 
 * def drawTriangles(coords, color, int form = SEPARATE):             # <<<<<<<<<<<<<<
 * 
 *     cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_SEPARATE); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_k_72 = __pyx_t_2;

  /* "C:\Python26\Lib\site-packages\ege.pyx":598
 *         del_Image(self.thisPtr)
 * 
 *     def draw(self, double x, double y, double x_0=0, double y_0=0, double width=-1, double height=-1, bint bilinear = False, double scaleX = 1.0, double scaleY = 1.0, double rotate = 0.0, double rotatePtX = 0.0, double rotatePtY = 0.0, color = False):             # <<<<<<<<<<<<<<
 *         cdef int colorLength
 *         cdef unsigned char *arrayColor
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k_73 = __pyx_t_1;
  __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_k_73);

  /* "C:\Python26\Lib\site-packages\ege.pyx":643
 *         free(arrayColor)
 * 
 *     def drawLines(self, coords, color, float width = 1, bint loop = False, stipple = False, bint antiAliasing = False):             # <<<<<<<<<<<<<<
 *         cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 * 
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k_74 = __pyx_t_1;
  __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_k_74);

  /* "C:\Python26\Lib\site-packages\ege.pyx":671
 *         free(arrayColor)
 * 
 *     def drawTriangles(self, coords, color, int form = SEPARATE):             # <<<<<<<<<<<<<<
 *         cdef numpy.ndarray newCoords = numpy.array(coords, dtype = float)
 * 
 */
  __pyx_1 = __Pyx_GetName(__pyx_m, __pyx_kp_SEPARATE); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_1);
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_k_75 = __pyx_t_2;

  /* "C:\Python26\Lib\site-packages\ege.pyx":713
 *         free(arrayColor)
 * 
 *     def subImage(self, Image src, int x, int y, bint bilinear = False, double scaleX = 1.0, double scaleY = 1.0, double rotate = 0.0, double rotatePtX = 0.0, double rotatePtY = 0.0, color = False):             # <<<<<<<<<<<<<<
 *         cdef int colorLength
 *         cdef unsigned char *arrayColor
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k_76 = __pyx_t_1;
  __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_k_76);

  /* "C:\Python26\Lib\site-packages\Cython\Includes\stdlib.pxd":2
 * 
 * cdef extern from "stdlib.h" nogil:             # <<<<<<<<<<<<<<
 *     void free(void *ptr)
 *     void *malloc(size_t size)
 */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_1);
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("ege");
  Py_DECREF(__pyx_m); __pyx_m = 0;
  __pyx_L0:;
  __Pyx_FinishRefcountContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

static const char *__pyx_filenames[] = {
  "ege.pyx",
  "numpy.pxd",
};

/* Runtime support code */

static void __pyx_init_filenames(void) {
  __pyx_f = __pyx_filenames;
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AS_STRING(kw_name));
        #endif
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *number, *more_or_less;

    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    number = (num_expected == 1) ? "" : "s";
    PyErr_Format(PyExc_TypeError,
        #if PY_VERSION_HEX < 0x02050000
            "%s() takes %s %d positional argument%s (%d given)",
        #else
            "%s() takes %s %zd positional argument%s (%zd given)",
        #endif
        func_name, more_or_less, num_expected, number, num_found);
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;

    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
        } else {
            #if PY_MAJOR_VERSION < 3
            if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key))) {
            #else
            if (unlikely(!PyUnicode_CheckExact(key)) && unlikely(!PyUnicode_Check(key))) {
            #endif
                goto invalid_keyword_type;
            } else {
                for (name = first_kw_arg; *name; name++) {
                    #if PY_MAJOR_VERSION >= 3
                    if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
                        PyUnicode_Compare(**name, key) == 0) break;
                    #else
                    if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
                        _PyString_Eq(**name, key)) break;
                    #endif
                }
                if (*name) {
                    values[name-argnames] = value;
                } else {
                    /* unexpected keyword found */
                    for (name=argnames; name != first_kw_arg; name++) {
                        if (**name == key) goto arg_passed_twice;
                        #if PY_MAJOR_VERSION >= 3
                        if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
                            PyUnicode_Compare(**name, key) == 0) goto arg_passed_twice;
                        #else
                        if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
                            _PyString_Eq(**name, key)) goto arg_passed_twice;
                        #endif
                    }
                    if (kwds2) {
                        if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
                    } else {
                        goto invalid_keyword;
                    }
                }
            }
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, **name);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (!type) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (obj == Py_None || PyObject_TypeCheck(obj, type))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %s to %s",
        Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}


static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (!type) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (Py_TYPE(obj) == type) return 1;
    }
    else {
        if (PyObject_TypeCheck(obj, type)) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%s' has incorrect type (expected %s, got %s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name) {
    PyObject *result;
    result = PyObject_GetAttr(dict, name);
    if (!result)
        PyErr_SetObject(PyExc_NameError, name);
    return result;
}

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list) {
    PyObject *__import__ = 0;
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    __import__ = __Pyx_GetAttrString(__pyx_b, "__import__");
    if (!__import__)
        goto bad;
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    module = PyObject_CallFunctionObjArgs(__import__,
        name, global_dict, empty_dict, list, NULL);
bad:
    Py_XDECREF(empty_list);
    Py_XDECREF(__import__);
    Py_XDECREF(empty_dict);
    return module;
}

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb) {
    Py_XINCREF(type);
    Py_XINCREF(value);
    Py_XINCREF(tb);
    /* First, check the traceback argument, replacing None with NULL. */
    if (tb == Py_None) {
        Py_DECREF(tb);
        tb = 0;
    }
    else if (tb != NULL && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto raise_error;
    }
    /* Next, replace a missing value with None */
    if (value == NULL) {
        value = Py_None;
        Py_INCREF(value);
    }
    #if PY_VERSION_HEX < 0x02050000
    if (!PyClass_Check(type))
    #else
    if (!PyType_Check(type))
    #endif
    {
        /* Raising an instance.  The value should be a dummy. */
        if (value != Py_None) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        /* Normalize to raise <class>, <instance> */
        Py_DECREF(value);
        value = type;
        #if PY_VERSION_HEX < 0x02050000
            if (PyInstance_Check(type)) {
                type = (PyObject*) ((PyInstanceObject*)type)->in_class;
                Py_INCREF(type);
            }
            else {
                type = 0;
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception must be an old-style class or instance");
                goto raise_error;
            }
        #else
            type = (PyObject*) Py_TYPE(type);
            Py_INCREF(type);
            if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception class must be a subclass of BaseException");
                goto raise_error;
            }
        #endif
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}

static INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();

#if PY_MAJOR_VERSION >= 3
    /* Note: this is a temporary work-around to prevent crashes in Python 3.0 */
    if ((tstate->exc_type != NULL) & (tstate->exc_type != Py_None)) {
        tmp_type = tstate->exc_type;
        tmp_value = tstate->exc_value;
        tmp_tb = tstate->exc_traceback;
        PyErr_NormalizeException(&type, &value, &tb);
        PyErr_NormalizeException(&tmp_type, &tmp_value, &tmp_tb);
        tstate->exc_type = 0;
        tstate->exc_value = 0;
        tstate->exc_traceback = 0;
        PyException_SetContext(value, tmp_value);
        Py_DECREF(tmp_type);
        Py_XDECREF(tmp_tb);
    }
#endif

    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}

static INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;

    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}


static INLINE int __Pyx_StrEq(const char *s1, const char *s2) {
     while (*s1 != '\0' && *s1 == *s2) { s1++; s2++; }
     return *s1 == *s2;
}

static INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject* x) {
    if (sizeof(unsigned char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned char)val)) {
            if (unlikely(val == -1 && PyErr_Occurred()))
                return (unsigned char)-1;
            if (unlikely(val < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned char");
                return (unsigned char)-1;
            }
            PyErr_SetString(PyExc_OverflowError,
                           "value too large to convert to unsigned char");
            return (unsigned char)-1;
        }
        return (unsigned char)val;
    }
    return (unsigned char)__Pyx_PyInt_AsUnsignedLong(x);
}

static INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject* x) {
    if (sizeof(unsigned short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned short)val)) {
            if (unlikely(val == -1 && PyErr_Occurred()))
                return (unsigned short)-1;
            if (unlikely(val < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned short");
                return (unsigned short)-1;
            }
            PyErr_SetString(PyExc_OverflowError,
                           "value too large to convert to unsigned short");
            return (unsigned short)-1;
        }
        return (unsigned short)val;
    }
    return (unsigned short)__Pyx_PyInt_AsUnsignedLong(x);
}

static INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject* x) {
    if (sizeof(unsigned int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned int)val)) {
            if (unlikely(val == -1 && PyErr_Occurred()))
                return (unsigned int)-1;
            if (unlikely(val < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned int");
                return (unsigned int)-1;
            }
            PyErr_SetString(PyExc_OverflowError,
                           "value too large to convert to unsigned int");
            return (unsigned int)-1;
        }
        return (unsigned int)val;
    }
    return (unsigned int)__Pyx_PyInt_AsUnsignedLong(x);
}

static INLINE char __Pyx_PyInt_AsChar(PyObject* x) {
    if (sizeof(char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(char)val)) {
            if (unlikely(val == -1 && PyErr_Occurred()))
                return (char)-1;
            PyErr_SetString(PyExc_OverflowError,
                           "value too large to convert to char");
            return (char)-1;
        }
        return (char)val;
    }
    return (char)__Pyx_PyInt_AsLong(x);
}

static INLINE short __Pyx_PyInt_AsShort(PyObject* x) {
    if (sizeof(short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(short)val)) {
            if (unlikely(val == -1 && PyErr_Occurred()))
                return (short)-1;
            PyErr_SetString(PyExc_OverflowError,
                           "value too large to convert to short");
            return (short)-1;
        }
        return (short)val;
    }
    return (short)__Pyx_PyInt_AsLong(x);
}

static INLINE int __Pyx_PyInt_AsInt(PyObject* x) {
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (unlikely(val == -1 && PyErr_Occurred()))
                return (int)-1;
            PyErr_SetString(PyExc_OverflowError,
                           "value too large to convert to int");
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject* x) {
    if (sizeof(signed char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed char)val)) {
            if (unlikely(val == -1 && PyErr_Occurred()))
                return (signed char)-1;
            PyErr_SetString(PyExc_OverflowError,
                           "value too large to convert to signed char");
            return (signed char)-1;
        }
        return (signed char)val;
    }
    return (signed char)__Pyx_PyInt_AsSignedLong(x);
}

static INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject* x) {
    if (sizeof(signed short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed short)val)) {
            if (unlikely(val == -1 && PyErr_Occurred()))
                return (signed short)-1;
            PyErr_SetString(PyExc_OverflowError,
                           "value too large to convert to signed short");
            return (signed short)-1;
        }
        return (signed short)val;
    }
    return (signed short)__Pyx_PyInt_AsSignedLong(x);
}

static INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject* x) {
    if (sizeof(signed int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed int)val)) {
            if (unlikely(val == -1 && PyErr_Occurred()))
                return (signed int)-1;
            PyErr_SetString(PyExc_OverflowError,
                           "value too large to convert to signed int");
            return (signed int)-1;
        }
        return (signed int)val;
    }
    return (signed int)__Pyx_PyInt_AsSignedLong(x);
}

static INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject* x) {
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_CheckExact(x) || PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned long");
            return (unsigned long)-1;
        }
        return (unsigned long)val;
    } else
#endif
    if (likely(PyLong_CheckExact(x) || PyLong_Check(x))) {
        if (unlikely(Py_SIZE(x) < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned long");
            return (unsigned long)-1;
        }
        return PyLong_AsUnsignedLong(x);
    } else {
        unsigned long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned long)-1;
        val = __Pyx_PyInt_AsUnsignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject* x) {
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_CheckExact(x) || PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned PY_LONG_LONG");
            return (unsigned PY_LONG_LONG)-1;
        }
        return (unsigned PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_CheckExact(x) || PyLong_Check(x))) {
        if (unlikely(Py_SIZE(x) < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned PY_LONG_LONG");
            return (unsigned PY_LONG_LONG)-1;
        }
        return PyLong_AsUnsignedLongLong(x);
    } else {
        unsigned PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsUnsignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static INLINE long __Pyx_PyInt_AsLong(PyObject* x) {
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_CheckExact(x) || PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        return (long)val;
    } else
#endif
    if (likely(PyLong_CheckExact(x) || PyLong_Check(x))) {
        return PyLong_AsLong(x);
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long)-1;
        val = __Pyx_PyInt_AsLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_CheckExact(x) || PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        return (PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_CheckExact(x) || PyLong_Check(x))) {
        return PyLong_AsLongLong(x);
    } else {
        PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject* x) {
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_CheckExact(x) || PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        return (signed long)val;
    } else
#endif
    if (likely(PyLong_CheckExact(x) || PyLong_Check(x))) {
        return PyLong_AsLong(x);
    } else {
        signed long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed long)-1;
        val = __Pyx_PyInt_AsSignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject* x) {
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_CheckExact(x) || PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        return (signed PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_CheckExact(x) || PyLong_Check(x))) {
        return PyLong_AsLongLong(x);
    } else {
        signed PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsSignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    long size)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;

    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    #if PY_MAJOR_VERSION < 3
    py_name = PyString_FromString(class_name);
    #else
    py_name = PyUnicode_FromString(class_name);
    #endif
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError, 
            "%s.%s is not a type object",
            module_name, class_name);
        goto bad;
    }
    if (((PyTypeObject *)result)->tp_basicsize != size) {
        PyErr_Format(PyExc_ValueError, 
            "%s.%s does not appear to be the correct type object",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;

    #if PY_MAJOR_VERSION < 3
    py_name = PyString_FromString(name);
    #else
    py_name = PyUnicode_FromString(name);
    #endif
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"

static void __Pyx_AddTraceback(const char *funcname) {
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    PyObject *py_globals = 0;
    PyObject *empty_string = 0;
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;

    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(__pyx_filename);
    #else
    py_srcfile = PyUnicode_FromString(__pyx_filename);
    #endif
    if (!py_srcfile) goto bad;
    if (__pyx_clineno) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, __pyx_clineno);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, __pyx_clineno);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_globals = PyModule_GetDict(__pyx_m);
    if (!py_globals) goto bad;
    #if PY_MAJOR_VERSION < 3
    empty_string = PyString_FromStringAndSize("", 0);
    #else
    empty_string = PyBytes_FromStringAndSize("", 0);
    #endif
    if (!empty_string) goto bad;
    py_code = PyCode_New(
        0,            /*int argcount,*/
        #if PY_MAJOR_VERSION >= 3
        0,            /*int kwonlyargcount,*/
        #endif
        0,            /*int nlocals,*/
        0,            /*int stacksize,*/
        0,            /*int flags,*/
        empty_string, /*PyObject *code,*/
        __pyx_empty_tuple,  /*PyObject *consts,*/
        __pyx_empty_tuple,  /*PyObject *names,*/
        __pyx_empty_tuple,  /*PyObject *varnames,*/
        __pyx_empty_tuple,  /*PyObject *freevars,*/
        __pyx_empty_tuple,  /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        __pyx_lineno,   /*int firstlineno,*/
        empty_string  /*PyObject *lnotab*/
    );
    if (!py_code) goto bad;
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        py_globals,          /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = __pyx_lineno;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    Py_XDECREF(empty_string);
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode && (!t->is_identifier)) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else  /* Python 3+ has unicode identifiers */
        if (t->is_identifier || (t->is_unicode && t->intern)) {
            *t->p = PyUnicode_InternFromString(t->s);
        } else if (t->is_unicode) {
            *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

/* Type Conversion Functions */

static INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   if (x == Py_True) return 1;
   else if ((x == Py_False) | (x == Py_None)) return 0;
   else return PyObject_IsTrue(x);
}

static INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_VERSION_HEX < 0x03000000
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_VERSION_HEX < 0x03000000
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%s__ returned non-%s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}

static INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject* x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}

static INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
#if PY_VERSION_HEX < 0x02050000
   if (ival <= LONG_MAX)
       return PyInt_FromLong((long)ival);
   else {
       unsigned char *bytes = (unsigned char *) &ival;
       int one = 1; int little = (int)*(unsigned char*)&one;
       return _PyLong_FromByteArray(bytes, sizeof(size_t), little, 0);
   }
#else
   return PyInt_FromSize_t(ival);
#endif
}

static INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {
   unsigned PY_LONG_LONG val = __Pyx_PyInt_AsUnsignedLongLong(x);
   if (unlikely(val == (unsigned PY_LONG_LONG)-1 && PyErr_Occurred())) {
       return (size_t)-1;
   } else if (unlikely(val != (unsigned PY_LONG_LONG)(size_t)val)) {
       PyErr_SetString(PyExc_OverflowError,
                       "value too large to convert to size_t");
       return (size_t)-1;
   }
   return (size_t)val;
}


